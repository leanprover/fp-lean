{"manual":
 {"Verso.Genre.Manual.section":
  {"title": "Sections or chapters of the manual",
   "description": "Sections or chapters of the manual",
   "contents":
   {"whitespace":
    [{"id": "whitespace",
      "data":
      {"title": "Whitespace",
       "shortTitle": null,
       "sectionNum": "5.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Source Files and Modules",
         "shortTitle": null,
         "number": "5"},
        {"title": "Concrete Syntax", "shortTitle": null, "number": "2"},
        {"title": "Whitespace", "shortTitle": null, "number": "1"}]},
      "address": "/Source-Files-and-Modules/"}],
    "wf-rel":
    [{"id": "wf-rel",
      "data":
      {"title": "Well-Founded Relations",
       "shortTitle": null,
       "sectionNum": "7.6.3.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Well-Founded Recursion",
         "shortTitle": null,
         "number": "3"},
        {"title": "Well-Founded Relations",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "well-founded-recursion":
    [{"id": "well-founded-recursion",
      "data":
      {"title": "Well-Founded Recursion",
       "shortTitle": null,
       "sectionNum": "7.6.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Well-Founded Recursion",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "well-founded-preprocessing":
    [{"id": "well-founded-preprocessing",
      "data":
      {"title": "Preprocessing Function Definitions",
       "shortTitle": null,
       "sectionNum": "7.6.3.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Well-Founded Recursion",
         "shortTitle": null,
         "number": "3"},
        {"title": "Preprocessing Function Definitions",
         "shortTitle": null,
         "number": "6"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "well-formed-inductives":
    [{"id": "well-formed-inductives",
      "data":
      {"title": "Well-Formedness Requirements",
       "shortTitle": null,
       "sectionNum": "4.4.3.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Logical Model", "shortTitle": null, "number": "3"},
        {"title": "Well-Formedness Requirements",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "unsafe":
    [{"id": "unsafe",
      "data":
      {"title": "Unsafe Definitions",
       "shortTitle": null,
       "sectionNum": "7.6.5.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Partial and Unsafe Definitions",
         "shortTitle": null,
         "number": "5"},
        {"title": "Unsafe Definitions", "shortTitle": null, "number": "2"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "unexpand-and-delab":
    [{"id": "unexpand-and-delab",
      "data":
      {"title": "Extending Lean's Output",
       "shortTitle": null,
       "sectionNum": "20.7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Extending Lean's Output",
         "shortTitle": null,
         "number": "7"}]},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "typographical-conventions":
    [{"id": "typographical-conventions",
      "data":
      {"title": "Typographical Conventions",
       "shortTitle": null,
       "sectionNum": "1.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Introduction", "shortTitle": null, "number": "1"},
        {"title": "Typographical Conventions",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Introduction/"}],
    "typed-syntax-helpers":
    [{"id": "typed-syntax-helpers",
      "data":
      {"title": "Helpers for Typed Syntax",
       "shortTitle": null,
       "sectionNum": "20.4.9.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Defining New Syntax", "shortTitle": null, "number": "4"},
        {"title": "Helpers for Typed Syntax",
         "shortTitle": null,
         "number": "9"}]},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "typed-syntax":
    [{"id": "typed-syntax",
      "data":
      {"title": "Typed Syntax",
       "shortTitle": null,
       "sectionNum": "20.4.7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Defining New Syntax", "shortTitle": null, "number": "4"},
        {"title": "Typed Syntax", "shortTitle": null, "number": "7"}]},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "type-system":
    [{"id": "type-system",
      "data":
      {"title": "The Type System",
       "shortTitle": null,
       "sectionNum": "4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"}]},
      "address": "/The-Type-System/"}],
    "type-classes":
    [{"id": "type-classes",
      "data":
      {"title": "Type Classes",
       "shortTitle": null,
       "sectionNum": "11.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"}]},
      "address": "/Type-Classes/"}],
    "tuples":
    [{"id": "tuples",
      "data":
      {"title": "Tuples",
       "shortTitle": null,
       "sectionNum": "19.13.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Tuples", "shortTitle": null, "number": "13"}]},
      "address": "/Basic-Types/Tuples/"}],
    "true-false":
    [{"id": "true-false",
      "data":
      {"title": "Truth",
       "shortTitle": null,
       "sectionNum": "18.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Propositions", "shortTitle": null, "number": "18"},
        {"title": "Truth", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Propositions/Truth/"}],
    "totality":
    [{"id": "totality",
      "data":
      {"title": "Totality and Termination",
       "shortTitle": null,
       "sectionNum": "4.1.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Functions", "shortTitle": null, "number": "1"},
        {"title": "Totality and Termination",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/The-Type-System/Functions/"}],
    "token-antiquotations":
    [{"id": "token-antiquotations",
      "data":
      {"title": "Token Antiquotations",
       "shortTitle": null,
       "sectionNum": "20.5.3.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Macros", "shortTitle": null, "number": "5"},
        {"title": "Quotation", "shortTitle": null, "number": "3"},
        {"title": "Token Antiquotations",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/Notations-and-Macros/Macros/"}],
    "the-simplifier":
    [{"id": "the-simplifier",
      "data":
      {"title": "The Simplifier",
       "shortTitle": null,
       "sectionNum": "16.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Simplifier", "shortTitle": null, "number": "16"}]},
      "address": "/The-Simplifier/"}],
    "test-lint-drivers":
    [{"id": "test-lint-drivers",
      "data":
      {"title": "Test and Lint Drivers",
       "shortTitle": null,
       "sectionNum": "22.1.1.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Lake", "shortTitle": null, "number": "1"},
        {"title": "Concepts and Terminology",
         "shortTitle": null,
         "number": "1"},
        {"title": "Test and Lint Drivers",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "terms":
    [{"id": "terms",
      "data":
      {"title": "Terms",
       "shortTitle": null,
       "sectionNum": "10.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Terms", "shortTitle": null, "number": "10"}]},
      "address": "/Terms/"}],
    "terminal-simp":
    [{"id": "terminal-simp",
      "data":
      {"title": "Terminal vs Non-Terminal Positions",
       "shortTitle": null,
       "sectionNum": "16.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Simplifier", "shortTitle": null, "number": "16"},
        {"title": "Terminal vs Non-Terminal Positions",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/The-Simplifier/Terminal-vs-Non-Terminal-Positions/"}],
    "technical-terms":
    [{"id": "technical-terms",
      "data":
      {"title": "Technical Terminology",
       "shortTitle": null,
       "sectionNum": "1.2.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Introduction", "shortTitle": null, "number": "1"},
        {"title": "Typographical Conventions",
         "shortTitle": null,
         "number": "2"},
        {"title": "Technical Terminology",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/Introduction/"}],
    "tactics":
    [{"id": "tactics",
      "data":
      {"title": "Tactic Proofs",
       "shortTitle": null,
       "sectionNum": "13.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"}]},
      "address": "/Tactic-Proofs/"}],
    "tactic-ref-term-helpers":
    [{"id": "tactic-ref-term-helpers",
      "data":
      {"title": "Term Elaboration Backends",
       "shortTitle": null,
       "sectionNum": "13.5.20.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Term Elaboration Backends",
         "shortTitle": null,
         "number": "20"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-spred":
    [{"id": "tactic-ref-spred",
      "data":
      {"title": "Tactics for Stateful Goals in  Std.Do.SPred",
       "shortTitle": null,
       "sectionNum": "13.5.23.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Verification Condition Generation",
         "shortTitle": null,
         "number": "23"},
        {"title": "Tactics for Stateful Goals in  Std.Do.SPred",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-search":
    [{"id": "tactic-ref-search",
      "data":
      {"title": "Library Search",
       "shortTitle": null,
       "sectionNum": "13.5.15.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Library Search", "shortTitle": null, "number": "15"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-sat":
    [{"id": "tactic-ref-sat",
      "data":
      {"title": "SAT Solver Integration",
       "shortTitle": null,
       "sectionNum": "13.5.17.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Decision Procedures", "shortTitle": null, "number": "17"},
        {"title": "SAT Solver Integration",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-rw":
    [{"id": "tactic-ref-rw",
      "data":
      {"title": "Rewriting",
       "shortTitle": null,
       "sectionNum": "13.5.13.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Rewriting", "shortTitle": null, "number": "13"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-relations":
    [{"id": "tactic-ref-relations",
      "data":
      {"title": "Relations",
       "shortTitle": null,
       "sectionNum": "13.5.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Relations", "shortTitle": null, "number": "4"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-quantifiers":
    [{"id": "tactic-ref-quantifiers",
      "data":
      {"title": "Quantifiers",
       "shortTitle": null,
       "sectionNum": "13.5.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Quantifiers", "shortTitle": null, "number": "3"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-other":
    [{"id": "tactic-ref-other",
      "data":
      {"title": "Other",
       "shortTitle": null,
       "sectionNum": "13.5.22.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Other", "shortTitle": null, "number": "22"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-mvcgen":
    [{"id": "tactic-ref-mvcgen",
      "data":
      {"title": "Verification Condition Generation",
       "shortTitle": null,
       "sectionNum": "13.5.23.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Verification Condition Generation",
         "shortTitle": null,
         "number": "23"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-lemmas":
    [{"id": "tactic-ref-lemmas",
      "data":
      {"title": "Lemmas",
       "shortTitle": null,
       "sectionNum": "13.5.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Lemmas", "shortTitle": null, "number": "6"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-inductive-intro":
    [{"id": "tactic-ref-inductive-intro",
      "data":
      {"title": "Introduction",
       "shortTitle": null,
       "sectionNum": "13.5.14.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Inductive Types", "shortTitle": null, "number": "14"},
        {"title": "Introduction", "shortTitle": null, "number": "1"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-inductive-elim":
    [{"id": "tactic-ref-inductive-elim",
      "data":
      {"title": "Elimination",
       "shortTitle": null,
       "sectionNum": "13.5.14.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Inductive Types", "shortTitle": null, "number": "14"},
        {"title": "Elimination", "shortTitle": null, "number": "2"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-inductive":
    [{"id": "tactic-ref-inductive",
      "data":
      {"title": "Inductive Types",
       "shortTitle": null,
       "sectionNum": "13.5.14.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Inductive Types", "shortTitle": null, "number": "14"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-goals":
    [{"id": "tactic-ref-goals",
      "data":
      {"title": "Goal Management",
       "shortTitle": null,
       "sectionNum": "13.5.8.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Goal Management", "shortTitle": null, "number": "8"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-false":
    [{"id": "tactic-ref-false",
      "data":
      {"title": "Falsehood",
       "shortTitle": null,
       "sectionNum": "13.5.7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Falsehood", "shortTitle": null, "number": "7"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-ext":
    [{"id": "tactic-ref-ext",
      "data":
      {"title": "Extensionality",
       "shortTitle": null,
       "sectionNum": "13.5.10.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Extensionality", "shortTitle": null, "number": "10"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-equality":
    [{"id": "tactic-ref-equality",
      "data":
      {"title": "Equality",
       "shortTitle": null,
       "sectionNum": "13.5.4.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Relations", "shortTitle": null, "number": "4"},
        {"title": "Equality", "shortTitle": null, "number": "1"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-decision":
    [{"id": "tactic-ref-decision",
      "data":
      {"title": "Decision Procedures",
       "shortTitle": null,
       "sectionNum": "13.5.17.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Decision Procedures",
         "shortTitle": null,
         "number": "17"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-debug":
    [{"id": "tactic-ref-debug",
      "data":
      {"title": "Debugging Utilities",
       "shortTitle": null,
       "sectionNum": "13.5.21.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Debugging Utilities",
         "shortTitle": null,
         "number": "21"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-control":
    [{"id": "tactic-ref-control",
      "data":
      {"title": "Control Flow",
       "shortTitle": null,
       "sectionNum": "13.5.19.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Control Flow", "shortTitle": null, "number": "19"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-classical":
    [{"id": "tactic-ref-classical",
      "data":
      {"title": "Classical Logic",
       "shortTitle": null,
       "sectionNum": "13.5.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Classical Logic", "shortTitle": null, "number": "1"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-casts":
    [{"id": "tactic-ref-casts",
      "data":
      {"title": "Cast Management",
       "shortTitle": null,
       "sectionNum": "13.5.9.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Cast Management", "shortTitle": null, "number": "9"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-cases":
    [{"id": "tactic-ref-cases",
      "data":
      {"title": "Case Analysis",
       "shortTitle": null,
       "sectionNum": "13.5.16.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Case Analysis", "shortTitle": null, "number": "16"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-assumptions":
    [{"id": "tactic-ref-assumptions",
      "data":
      {"title": "Assumptions",
       "shortTitle": null,
       "sectionNum": "13.5.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Assumptions", "shortTitle": null, "number": "2"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref-associativity-commutativity":
    [{"id": "tactic-ref-associativity-commutativity",
      "data":
      {"title": "Associativity and Commutativity",
       "shortTitle": null,
       "sectionNum": "13.5.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Associativity and Commutativity",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-ref":
    [{"id": "tactic-ref",
      "data":
      {"title": "Tactic Reference",
       "shortTitle": null,
       "sectionNum": "13.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-reducibility":
    [{"id": "tactic-reducibility",
      "data":
      {"title": "Controlling Reduction",
       "shortTitle": null,
       "sectionNum": "13.5.18.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Controlling Reduction",
         "shortTitle": null,
         "number": "18"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tactic-macros":
    [{"id": "tactic-macros",
      "data":
      {"title": "Tactic Macros",
       "shortTitle": null,
       "sectionNum": "13.8.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Custom Tactics", "shortTitle": null, "number": "8"},
        {"title": "Tactic Macros", "shortTitle": null, "number": "1"}]},
      "address": "/Tactic-Proofs/Custom-Tactics/"}],
    "tactic-macro-extension":
    [{"id": "tactic-macro-extension",
      "data":
      {"title": "Extensible Tactic Macros",
       "shortTitle": null,
       "sectionNum": "13.8.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Custom Tactics", "shortTitle": null, "number": "8"},
        {"title": "Tactic Macros", "shortTitle": null, "number": "1"},
        {"title": "Extensible Tactic Macros",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Tactic-Proofs/Custom-Tactics/"}],
    "tactic-language-unfolding":
    [{"id": "tactic-language-unfolding",
      "data":
      {"title": "Controlling Unfolding",
       "shortTitle": null,
       "sectionNum": "13.3.6.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "The Tactic Language", "shortTitle": null, "number": "3"},
        {"title": "Namespace and Option Management",
         "shortTitle": null,
         "number": "6"},
        {"title": "Controlling Unfolding",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "tactic-language-success-failure":
    [{"id": "tactic-language-success-failure",
      "data":
      {"title": "Success and Failure",
       "shortTitle": null,
       "sectionNum": "13.3.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "The Tactic Language", "shortTitle": null, "number": "3"},
        {"title": "Control Structures", "shortTitle": null, "number": "1"},
        {"title": "Success and Failure", "shortTitle": null, "number": "1"}]},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "tactic-language-sequencing":
    [{"id": "tactic-language-sequencing",
      "data":
      {"title": "Sequencing",
       "shortTitle": null,
       "sectionNum": "13.3.1.3.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "The Tactic Language", "shortTitle": null, "number": "3"},
        {"title": "Control Structures", "shortTitle": null, "number": "1"},
        {"title": "Goal Selection", "shortTitle": null, "number": "3"},
        {"title": "Sequencing", "shortTitle": null, "number": "1"}]},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "tactic-language-options":
    [{"id": "tactic-language-options",
      "data":
      {"title": "Options",
       "shortTitle": null,
       "sectionNum": "13.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Options", "shortTitle": null, "number": "4"}]},
      "address": "/Tactic-Proofs/Options/"}],
    "tactic-language-namespaces-options":
    [{"id": "tactic-language-namespaces-options",
      "data":
      {"title": "Namespace and Option Management",
       "shortTitle": null,
       "sectionNum": "13.3.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "The Tactic Language", "shortTitle": null, "number": "3"},
        {"title": "Namespace and Option Management",
         "shortTitle": null,
         "number": "6"}]},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "tactic-language-multiple-goals":
    [{"id": "tactic-language-multiple-goals",
      "data":
      {"title": "Working on Multiple Goals",
       "shortTitle": null,
       "sectionNum": "13.3.1.3.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "The Tactic Language", "shortTitle": null, "number": "3"},
        {"title": "Control Structures", "shortTitle": null, "number": "1"},
        {"title": "Goal Selection", "shortTitle": null, "number": "3"},
        {"title": "Working on Multiple Goals",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "tactic-language-local-defs":
    [{"id": "tactic-language-local-defs",
      "data":
      {"title": "Local Definitions and Proofs",
       "shortTitle": null,
       "sectionNum": "13.3.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "The Tactic Language", "shortTitle": null, "number": "3"},
        {"title": "Local Definitions and Proofs",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "tactic-language-iteration":
    [{"id": "tactic-language-iteration",
      "data":
      {"title": "Repetition and Iteration",
       "shortTitle": null,
       "sectionNum": "13.3.1.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "The Tactic Language", "shortTitle": null, "number": "3"},
        {"title": "Control Structures", "shortTitle": null, "number": "1"},
        {"title": "Repetition and Iteration",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "tactic-language-hygiene":
    [{"id": "tactic-language-hygiene",
      "data":
      {"title": "Names and Hygiene",
       "shortTitle": null,
       "sectionNum": "13.3.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "The Tactic Language", "shortTitle": null, "number": "3"},
        {"title": "Names and Hygiene", "shortTitle": null, "number": "2"}]},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "tactic-language-goal-selection":
    [{"id": "tactic-language-goal-selection",
      "data":
      {"title": "Goal Selection",
       "shortTitle": null,
       "sectionNum": "13.3.1.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "The Tactic Language", "shortTitle": null, "number": "3"},
        {"title": "Control Structures", "shortTitle": null, "number": "1"},
        {"title": "Goal Selection", "shortTitle": null, "number": "3"}]},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "tactic-language-focusing":
    [{"id": "tactic-language-focusing",
      "data":
      {"title": "Focusing",
       "shortTitle": null,
       "sectionNum": "13.3.1.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "The Tactic Language", "shortTitle": null, "number": "3"},
        {"title": "Control Structures", "shortTitle": null, "number": "1"},
        {"title": "Focusing", "shortTitle": null, "number": "4"}]},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "tactic-language-control":
    [{"id": "tactic-language-control",
      "data":
      {"title": "Control Structures",
       "shortTitle": null,
       "sectionNum": "13.3.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "The Tactic Language", "shortTitle": null, "number": "3"},
        {"title": "Control Structures", "shortTitle": null, "number": "1"}]},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "tactic-language-branching":
    [{"id": "tactic-language-branching",
      "data":
      {"title": "Branching",
       "shortTitle": null,
       "sectionNum": "13.3.1.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "The Tactic Language", "shortTitle": null, "number": "3"},
        {"title": "Control Structures", "shortTitle": null, "number": "1"},
        {"title": "Branching", "shortTitle": null, "number": "2"}]},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "tactic-language-assumptions":
    [{"id": "tactic-language-assumptions",
      "data":
      {"title": "Accessing Assumptions",
       "shortTitle": null,
       "sectionNum": "13.3.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "The Tactic Language", "shortTitle": null, "number": "3"},
        {"title": "Names and Hygiene", "shortTitle": null, "number": "2"},
        {"title": "Accessing Assumptions",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "tactic-language-assumption-management":
    [{"id": "tactic-language-assumption-management",
      "data":
      {"title": "Assumption Management",
       "shortTitle": null,
       "sectionNum": "13.3.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "The Tactic Language", "shortTitle": null, "number": "3"},
        {"title": "Assumption Management",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "tactic-language":
    [{"id": "tactic-language",
      "data":
      {"title": "The Tactic Language",
       "shortTitle": null,
       "sectionNum": "13.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "The Tactic Language", "shortTitle": null, "number": "3"}]},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "tactic-config":
    [{"id": "tactic-config",
      "data":
      {"title": "Configuration",
       "shortTitle": null,
       "sectionNum": "13.3.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "The Tactic Language", "shortTitle": null, "number": "3"},
        {"title": "Configuration", "shortTitle": null, "number": "5"}]},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "syntax-rules":
    [{"id": "syntax-rules",
      "data":
      {"title": "Syntax Rules",
       "shortTitle": null,
       "sectionNum": "20.4.11.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Defining New Syntax", "shortTitle": null, "number": "4"},
        {"title": "Syntax Rules", "shortTitle": null, "number": "11"}]},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "syntax-indentation":
    [{"id": "syntax-indentation",
      "data":
      {"title": "Indentation",
       "shortTitle": null,
       "sectionNum": "20.4.12.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Defining New Syntax", "shortTitle": null, "number": "4"},
        {"title": "Indentation", "shortTitle": null, "number": "12"}]},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "syntax-ext":
    [{"id": "syntax-ext",
      "data":
      {"title": "Defining New Syntax",
       "shortTitle": null,
       "sectionNum": "20.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Defining New Syntax", "shortTitle": null, "number": "4"}]},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "syntax-data":
    [{"id": "syntax-data",
      "data":
      {"title": "Syntax Model",
       "shortTitle": null,
       "sectionNum": "20.4.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Defining New Syntax", "shortTitle": null, "number": "4"},
        {"title": "Syntax Model", "shortTitle": null, "number": "1"}]},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "syntax-categories":
    [{"id": "syntax-categories",
      "data":
      {"title": "Syntax Categories",
       "shortTitle": null,
       "sectionNum": "20.4.10.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Defining New Syntax", "shortTitle": null, "number": "4"},
        {"title": "Syntax Categories", "shortTitle": null, "number": "10"}]},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "sum-types":
    [{"id": "sum-types",
      "data":
      {"title": "Sum Types",
       "shortTitle": null,
       "sectionNum": "19.14.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Sum Types", "shortTitle": null, "number": "14"}]},
      "address": "/Basic-Types/Sum-Types/"}],
    "sum-syntax":
    [{"id": "sum-syntax",
      "data":
      {"title": "Syntax",
       "shortTitle": null,
       "sectionNum": "19.14.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Sum Types", "shortTitle": null, "number": "14"},
        {"title": "Syntax", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Sum-Types/"}],
    "sum-api":
    [{"id": "sum-api",
      "data":
      {"title": "API Reference",
       "shortTitle": null,
       "sectionNum": "19.14.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Sum Types", "shortTitle": null, "number": "14"},
        {"title": "API Reference", "shortTitle": null, "number": "2"}]},
      "address": "/Basic-Types/Sum-Types/"}],
    "subsingleton-elimination":
    [{"id": "subsingleton-elimination",
      "data":
      {"title": "Subsingleton Elimination",
       "shortTitle": null,
       "sectionNum": "4.4.3.1.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Logical Model", "shortTitle": null, "number": "3"},
        {"title": "Recursors", "shortTitle": null, "number": "1"},
        {"title": "Recursor Types", "shortTitle": null, "number": "1"},
        {"title": "Subsingleton Elimination",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "subarray":
    [{"id": "subarray",
      "data":
      {"title": "Sub-Arrays",
       "shortTitle": null,
       "sectionNum": "19.16.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Arrays", "shortTitle": null, "number": "16"},
        {"title": "Sub-Arrays", "shortTitle": null, "number": "5"}]},
      "address": "/Basic-Types/Arrays/"}],
    "structures":
    [{"id": "structures",
      "data":
      {"title": "Structure Declarations",
       "shortTitle": null,
       "sectionNum": "4.4.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Structure Declarations",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "structure-params":
    [{"id": "structure-params",
      "data":
      {"title": "Structure Parameters",
       "shortTitle": null,
       "sectionNum": "4.4.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Structure Declarations",
         "shortTitle": null,
         "number": "2"},
        {"title": "Structure Parameters",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "structure-inheritance":
    [{"id": "structure-inheritance",
      "data":
      {"title": "Structure Inheritance",
       "shortTitle": null,
       "sectionNum": "4.4.2.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Structure Declarations",
         "shortTitle": null,
         "number": "2"},
        {"title": "Structure Inheritance",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "structure-fields":
    [{"id": "structure-fields",
      "data":
      {"title": "Fields",
       "shortTitle": null,
       "sectionNum": "4.4.2.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Structure Declarations",
         "shortTitle": null,
         "number": "2"},
        {"title": "Fields", "shortTitle": null, "number": "2"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "structure-constructors":
    [{"id": "structure-constructors",
      "data":
      {"title": "Structure Constructors",
       "shortTitle": null,
       "sectionNum": "4.4.2.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Structure Declarations",
         "shortTitle": null,
         "number": "2"},
        {"title": "Structure Constructors",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "structural-recursion":
    [{"id": "structural-recursion",
      "data":
      {"title": "Structural Recursion",
       "shortTitle": null,
       "sectionNum": "7.6.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Structural Recursion",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "string-syntax":
    [{"id": "string-syntax",
      "data":
      {"title": "Syntax",
       "shortTitle": null,
       "sectionNum": "19.8.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "Syntax", "shortTitle": null, "number": "3"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-runtime":
    [{"id": "string-runtime",
      "data":
      {"title": "Run-Time Representation",
       "shortTitle": null,
       "sectionNum": "19.8.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "Run-Time Representation",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-performance":
    [{"id": "string-performance",
      "data":
      {"title": "Performance Notes",
       "shortTitle": null,
       "sectionNum": "19.8.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "Run-Time Representation",
         "shortTitle": null,
         "number": "2"},
        {"title": "Performance Notes", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-literals":
    [{"id": "string-literals",
      "data":
      {"title": "String Literals",
       "shortTitle": null,
       "sectionNum": "19.8.3.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "Syntax", "shortTitle": null, "number": "3"},
        {"title": "String Literals", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-iterators":
    [{"id": "string-iterators",
      "data":
      {"title": "Iterators",
       "shortTitle": null,
       "sectionNum": "19.8.4.9.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Iterators", "shortTitle": null, "number": "9"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-interpolation":
    [{"id": "string-interpolation",
      "data":
      {"title": "Interpolated Strings",
       "shortTitle": null,
       "sectionNum": "19.8.3.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "Syntax", "shortTitle": null, "number": "3"},
        {"title": "Interpolated Strings",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-ffi":
    [{"id": "string-ffi",
      "data":
      {"title": "FFI",
       "shortTitle": null,
       "sectionNum": "19.8.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "FFI", "shortTitle": null, "number": "5"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-api-substring":
    [{"id": "string-api-substring",
      "data":
      {"title": "Substrings",
       "shortTitle": null,
       "sectionNum": "19.8.4.10.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Substrings", "shortTitle": null, "number": "10"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-api-props":
    [{"id": "string-api-props",
      "data":
      {"title": "Properties",
       "shortTitle": null,
       "sectionNum": "19.8.4.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Properties", "shortTitle": null, "number": "3"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-api-pos":
    [{"id": "string-api-pos",
      "data":
      {"title": "Positions",
       "shortTitle": null,
       "sectionNum": "19.8.4.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Positions", "shortTitle": null, "number": "4"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-api-modify":
    [{"id": "string-api-modify",
      "data":
      {"title": "Manipulation",
       "shortTitle": null,
       "sectionNum": "19.8.4.8.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Manipulation", "shortTitle": null, "number": "8"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-api-meta":
    [{"id": "string-api-meta",
      "data":
      {"title": "Metaprogramming",
       "shortTitle": null,
       "sectionNum": "19.8.4.11.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Metaprogramming", "shortTitle": null, "number": "11"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-api-lookup":
    [{"id": "string-api-lookup",
      "data":
      {"title": "Lookups and Modifications",
       "shortTitle": null,
       "sectionNum": "19.8.4.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Lookups and Modifications",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-api-fold":
    [{"id": "string-api-fold",
      "data":
      {"title": "Folds and Aggregation",
       "shortTitle": null,
       "sectionNum": "19.8.4.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Folds and Aggregation",
         "shortTitle": null,
         "number": "6"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-api-encoding":
    [{"id": "string-api-encoding",
      "data":
      {"title": "Encodings",
       "shortTitle": null,
       "sectionNum": "19.8.4.12.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Encodings", "shortTitle": null, "number": "12"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-api-convert":
    [{"id": "string-api-convert",
      "data":
      {"title": "Conversions",
       "shortTitle": null,
       "sectionNum": "19.8.4.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Conversions", "shortTitle": null, "number": "2"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-api-compare":
    [{"id": "string-api-compare",
      "data":
      {"title": "Comparisons",
       "shortTitle": null,
       "sectionNum": "19.8.4.7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Comparisons", "shortTitle": null, "number": "7"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-api-build":
    [{"id": "string-api-build",
      "data":
      {"title": "Constructing",
       "shortTitle": null,
       "sectionNum": "19.8.4.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Constructing", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Strings/"}],
    "string-api":
    [{"id": "string-api",
      "data":
      {"title": "API Reference",
       "shortTitle": null,
       "sectionNum": "19.8.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "API Reference", "shortTitle": null, "number": "4"}]},
      "address": "/Basic-Types/Strings/"}],
    "strict-positivity":
    [{"id": "strict-positivity",
      "data":
      {"title": "Strict Positivity",
       "shortTitle": null,
       "sectionNum": "4.4.3.2.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Logical Model", "shortTitle": null, "number": "3"},
        {"title": "Well-Formedness Requirements",
         "shortTitle": null,
         "number": "2"},
        {"title": "Strict Positivity", "shortTitle": null, "number": "2"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "stdio":
    [{"id": "stdio",
      "data":
      {"title": "Standard I/O",
       "shortTitle": null,
       "sectionNum": "15.5.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "IO", "shortTitle": null, "number": "15"},
        {"title": "Files, File Handles, and Streams",
         "shortTitle": null,
         "number": "5"},
        {"title": "Standard I/O", "shortTitle": null, "number": "5"}]},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "state-monads":
    [{"id": "state-monads",
      "data":
      {"title": "State",
       "shortTitle": null,
       "sectionNum": "14.5.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Functors, Monads and  do -Notation",
         "shortTitle": null,
         "number": "14"},
        {"title": "Varieties of Monads", "shortTitle": null, "number": "5"},
        {"title": "State", "shortTitle": null, "number": "4"}]},
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "standard-axioms":
    [{"id": "standard-axioms",
      "data":
      {"title": "Standard Axioms",
       "shortTitle": null,
       "sectionNum": "8.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Axioms", "shortTitle": null, "number": "8"},
        {"title": "Standard Axioms", "shortTitle": null, "number": "5"}]},
      "address": "/Axioms/"}],
    "squash-types":
    [{"id": "squash-types",
      "data":
      {"title": "Squash Types",
       "shortTitle": null,
       "sectionNum": "4.5.7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Quotients", "shortTitle": null, "number": "5"},
        {"title": "Squash Types", "shortTitle": null, "number": "7"}]},
      "address": "/The-Type-System/Quotients/"}],
    "splices":
    [{"id": "splices",
      "data":
      {"title": "Splices",
       "shortTitle": null,
       "sectionNum": "20.5.3.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Macros", "shortTitle": null, "number": "5"},
        {"title": "Quotation", "shortTitle": null, "number": "3"},
        {"title": "Splices", "shortTitle": null, "number": "2"}]},
      "address": "/Notations-and-Macros/Macros/"}],
    "source-info":
    [{"id": "source-info",
      "data":
      {"title": "Source Positions",
       "shortTitle": null,
       "sectionNum": "20.4.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Defining New Syntax", "shortTitle": null, "number": "4"},
        {"title": "Source Positions", "shortTitle": null, "number": "5"}]},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "sort-coercion":
    [{"id": "sort-coercion",
      "data":
      {"title": "Coercing to Sorts",
       "shortTitle": null,
       "sectionNum": "12.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Coercions", "shortTitle": null, "number": "12"},
        {"title": "Coercing to Sorts", "shortTitle": null, "number": "3"}]},
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "simp-vs-rw":
    [{"id": "simp-vs-rw",
      "data":
      {"title": "Simplification vs Rewriting",
       "shortTitle": null,
       "sectionNum": "16.7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Simplifier", "shortTitle": null, "number": "16"},
        {"title": "Simplification vs Rewriting",
         "shortTitle": null,
         "number": "7"}]},
      "address": "/The-Simplifier/Simplification-vs-Rewriting/"}],
    "simp-tactics":
    [{"id": "simp-tactics",
      "data":
      {"title": "Simplification",
       "shortTitle": null,
       "sectionNum": "13.5.12.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Tactic Reference", "shortTitle": null, "number": "5"},
        {"title": "Simplification", "shortTitle": null, "number": "12"}]},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "simp-tactic-params":
    [{"id": "simp-tactic-params",
      "data":
      {"title": "Parameters",
       "shortTitle": null,
       "sectionNum": "16.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Simplifier", "shortTitle": null, "number": "16"},
        {"title": "Invoking the Simplifier",
         "shortTitle": null,
         "number": "1"},
        {"title": "Parameters", "shortTitle": null, "number": "1"}]},
      "address": "/The-Simplifier/Invoking-the-Simplifier/"}],
    "simp-tactic-naming":
    [{"id": "simp-tactic-naming",
      "data":
      {"title": "Invoking the Simplifier",
       "shortTitle": null,
       "sectionNum": "16.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Simplifier", "shortTitle": null, "number": "16"},
        {"title": "Invoking the Simplifier",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/The-Simplifier/Invoking-the-Simplifier/"}],
    "simp-sets":
    [{"id": "simp-sets",
      "data":
      {"title": "Simp sets",
       "shortTitle": null,
       "sectionNum": "16.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Simplifier", "shortTitle": null, "number": "16"},
        {"title": "Simp sets", "shortTitle": null, "number": "3"}]},
      "address": "/The-Simplifier/Simp-sets/"}],
    "simp-rewrites":
    [{"id": "simp-rewrites",
      "data":
      {"title": "Rewrite Rules",
       "shortTitle": null,
       "sectionNum": "16.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Simplifier", "shortTitle": null, "number": "16"},
        {"title": "Rewrite Rules", "shortTitle": null, "number": "2"}]},
      "address": "/The-Simplifier/Rewrite-Rules/"}],
    "simp-options":
    [{"id": "simp-options",
      "data":
      {"title": "Options",
       "shortTitle": null,
       "sectionNum": "16.6.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Simplifier", "shortTitle": null, "number": "16"},
        {"title": "Configuring Simplification",
         "shortTitle": null,
         "number": "6"},
        {"title": "Options", "shortTitle": null, "number": "1"}]},
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "simp-normal-forms":
    [{"id": "simp-normal-forms",
      "data":
      {"title": "Simp Normal Forms",
       "shortTitle": null,
       "sectionNum": "16.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Simplifier", "shortTitle": null, "number": "16"},
        {"title": "Simp Normal Forms", "shortTitle": null, "number": "4"}]},
      "address": "/The-Simplifier/Simp-Normal-Forms/"}],
    "simp-config":
    [{"id": "simp-config",
      "data":
      {"title": "Configuring Simplification",
       "shortTitle": null,
       "sectionNum": "16.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Simplifier", "shortTitle": null, "number": "16"},
        {"title": "Configuring Simplification",
         "shortTitle": null,
         "number": "6"}]},
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "signature-syntax":
    [{"id": "signature-syntax",
      "data":
      {"title": "Headers and Signatures",
       "shortTitle": null,
       "sectionNum": "7.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Headers and Signatures",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "sigma-types":
    [{"id": "sigma-types",
      "data":
      {"title": "Dependent Pairs",
       "shortTitle": null,
       "sectionNum": "19.13.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Tuples", "shortTitle": null, "number": "13"},
        {"title": "Dependent Pairs", "shortTitle": null, "number": "2"}]},
      "address": "/Basic-Types/Tuples/"}],
    "setoids":
    [{"id": "setoids",
      "data":
      {"title": "Setoids",
       "shortTitle": null,
       "sectionNum": "4.5.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Quotients", "shortTitle": null, "number": "5"},
        {"title": "Setoids", "shortTitle": null, "number": "2"}]},
      "address": "/The-Type-System/Quotients/"}],
    "section-variables":
    [{"id": "section-variables",
      "data":
      {"title": "Section Variables",
       "shortTitle": null,
       "sectionNum": "6.2.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Namespaces and Sections",
         "shortTitle": null,
         "number": "6"},
        {"title": "Section Scopes", "shortTitle": null, "number": "2"},
        {"title": "Section Variables", "shortTitle": null, "number": "2"}]},
      "address": "/Namespaces-and-Sections/"}],
    "scopes":
    [{"id": "scopes",
      "data":
      {"title": "Section Scopes",
       "shortTitle": null,
       "sectionNum": "6.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Namespaces and Sections",
         "shortTitle": null,
         "number": "6"},
        {"title": "Section Scopes", "shortTitle": null, "number": "2"}]},
      "address": "/Namespaces-and-Sections/"}],
    "scoped-attributes":
    [{"id": "scoped-attributes",
      "data":
      {"title": "Scoped Attributes",
       "shortTitle": null,
       "sectionNum": "9.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Attributes", "shortTitle": null, "number": "9"},
        {"title": "Scoped Attributes", "shortTitle": null, "number": "3"}]},
      "address": "/Attributes/"}],
    "scope-commands":
    [{"id": "scope-commands",
      "data":
      {"title": "Controlling Section Scopes",
       "shortTitle": null,
       "sectionNum": "6.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Namespaces and Sections",
         "shortTitle": null,
         "number": "6"},
        {"title": "Section Scopes", "shortTitle": null, "number": "2"},
        {"title": "Controlling Section Scopes",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Namespaces-and-Sections/"}],
    "runtime":
    [{"id": "runtime",
      "data":
      {"title": "Run-Time Code",
       "shortTitle": null,
       "sectionNum": "21.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Run-Time Code", "shortTitle": null, "number": "21"}]},
      "address": "/Run-Time-Code/"}],
    "run-time-inductives":
    [{"id": "run-time-inductives",
      "data":
      {"title": "Run-Time Representation",
       "shortTitle": null,
       "sectionNum": "4.4.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Run-Time Representation",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "repr-instance-howto":
    [{"id": "repr-instance-howto",
      "data":
      {"title": "How To Write a  Repr  Instance",
       "shortTitle": null,
       "sectionNum": "3.7.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Formatted Output", "shortTitle": null, "number": "7"},
        {"title": "Repr", "shortTitle": null, "number": "2"},
        {"title": "How To Write a  Repr  Instance",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Interacting-with-Lean/"}],
    "repr":
    [{"id": "repr",
      "data":
      {"title": "Repr",
       "shortTitle": null,
       "sectionNum": "3.7.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Formatted Output", "shortTitle": null, "number": "7"},
        {"title": "Repr", "shortTitle": null, "number": "2"}]},
      "address": "/Interacting-with-Lean/"}],
    "release-v4.9.0":
    [{"id": "release-v4___9___0",
      "data":
      {"title": "Lean 4.9.0 (2024-07-01)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.9.0 (2024-07-01)",
         "shortTitle": null,
         "number": "15"}]},
      "address": "/releases/v4.9.0/"}],
    "release-v4.8.0":
    [{"id": "release-v4___8___0",
      "data":
      {"title": "Lean 4.8.0 (2024-06-05)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.8.0 (2024-06-05)",
         "shortTitle": null,
         "number": "16"}]},
      "address": "/releases/v4.8.0/"}],
    "release-v4.7.0":
    [{"id": "release-v4___7___0",
      "data":
      {"title": "Lean 4.7.0 (2024-04-03)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.7.0 (2024-04-03)",
         "shortTitle": null,
         "number": "17"}]},
      "address": "/releases/v4.7.0/"}],
    "release-v4.6.0":
    [{"id": "release-v4___6___0",
      "data":
      {"title": "Lean 4.6.0 (2024-02-29)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.6.0 (2024-02-29)",
         "shortTitle": null,
         "number": "18"}]},
      "address": "/releases/v4.6.0/"}],
    "release-v4.5.0":
    [{"id": "release-v4___5___0",
      "data":
      {"title": "Lean 4.5.0 (2024-02-01)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.5.0 (2024-02-01)",
         "shortTitle": null,
         "number": "19"}]},
      "address": "/releases/v4.5.0/"}],
    "release-v4.4.0":
    [{"id": "release-v4___4___0",
      "data":
      {"title": "Lean 4.4.0 (2023-12-31)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.4.0 (2023-12-31)",
         "shortTitle": null,
         "number": "20"}]},
      "address": "/releases/v4.4.0/"}],
    "release-v4.3.0":
    [{"id": "release-v4___3___0",
      "data":
      {"title": "Lean 4.3.0 (2023-11-30)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.3.0 (2023-11-30)",
         "shortTitle": null,
         "number": "21"}]},
      "address": "/releases/v4.3.0/"}],
    "release-v4.23.0":
    [{"id": "release-v4___23___0",
      "data":
      {"title": "Lean 4.23.0 (2025-09-15)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.23.0 (2025-09-15)",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/releases/v4.23.0/"}],
    "release-v4.22.0":
    [{"id": "release-v4___22___0",
      "data":
      {"title": "Lean 4.22.0 (2025-08-14)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.22.0 (2025-08-14)",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/releases/v4.22.0/"}],
    "release-v4.21.0":
    [{"id": "release-v4___21___0",
      "data":
      {"title": "Lean 4.21.0 (2025-06-30)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.21.0 (2025-06-30)",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/releases/v4.21.0/"}],
    "release-v4.20.0":
    [{"id": "release-v4___20___0",
      "data":
      {"title": "Lean 4.20.0 (2025-06-02)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.20.0 (2025-06-02)",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/releases/v4.20.0/"}],
    "release-v4.2.0":
    [{"id": "release-v4___2___0",
      "data":
      {"title": "Lean 4.2.0 (2023-10-31)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.2.0 (2023-10-31)",
         "shortTitle": null,
         "number": "22"}]},
      "address": "/releases/v4.2.0/"}],
    "release-v4.19.0":
    [{"id": "release-v4___19___0",
      "data":
      {"title": "Lean 4.19.0 (2025-05-01)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.19.0 (2025-05-01)",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/releases/v4.19.0/"}],
    "release-v4.18.0":
    [{"id": "release-v4___18___0",
      "data":
      {"title": "Lean 4.18.0 (2025-04-02)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.18.0 (2025-04-02)",
         "shortTitle": null,
         "number": "6"}]},
      "address": "/releases/v4.18.0/"}],
    "release-v4.17.0":
    [{"id": "release-v4___17___0",
      "data":
      {"title": "Lean 4.17.0 (2025-03-03)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.17.0 (2025-03-03)",
         "shortTitle": null,
         "number": "7"}]},
      "address": "/releases/v4.17.0/"}],
    "release-v4.16.0":
    [{"id": "release-v4___16___0",
      "data":
      {"title": "Lean 4.16.0 (2025-02-03)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.16.0 (2025-02-03)",
         "shortTitle": null,
         "number": "8"}]},
      "address": "/releases/v4.16.0/"}],
    "release-v4.15.0":
    [{"id": "release-v4___15___0",
      "data":
      {"title": "Lean 4.15.0 (2025-01-04)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.15.0 (2025-01-04)",
         "shortTitle": null,
         "number": "9"}]},
      "address": "/releases/v4.15.0/"}],
    "release-v4.14.0":
    [{"id": "release-v4___14___0",
      "data":
      {"title": "Lean 4.14.0 (2024-12-02)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.14.0 (2024-12-02)",
         "shortTitle": null,
         "number": "10"}]},
      "address": "/releases/v4.14.0/"}],
    "release-v4.13.0":
    [{"id": "release-v4___13___0",
      "data":
      {"title": "Lean 4.13.0 (2024-11-01)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.13.0 (2024-11-01)",
         "shortTitle": null,
         "number": "11"}]},
      "address": "/releases/v4.13.0/"}],
    "release-v4.12.0":
    [{"id": "release-v4___12___0",
      "data":
      {"title": "Lean 4.12.0 (2024-10-01)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.12.0 (2024-10-01)",
         "shortTitle": null,
         "number": "12"}]},
      "address": "/releases/v4.12.0/"}],
    "release-v4.11.0":
    [{"id": "release-v4___11___0",
      "data":
      {"title": "Lean 4.11.0 (2024-09-02)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.11.0 (2024-09-02)",
         "shortTitle": null,
         "number": "13"}]},
      "address": "/releases/v4.11.0/"}],
    "release-v4.10.0":
    [{"id": "release-v4___10___0",
      "data":
      {"title": "Lean 4.10.0 (2024-07-31)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.10.0 (2024-07-31)",
         "shortTitle": null,
         "number": "14"}]},
      "address": "/releases/v4.10.0/"}],
    "release-v4.1.0":
    [{"id": "release-v4___1___0",
      "data":
      {"title": "Lean 4.1.0 (2023-09-26)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.1.0 (2023-09-26)",
         "shortTitle": null,
         "number": "23"}]},
      "address": "/releases/v4.1.0/"}],
    "release-v4.0.0-m5":
    [{"id": "release-v4___0___0-m5",
      "data":
      {"title": "Lean 4.0.0-m5 (2022-08-22)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.0.0-m5 (2022-08-22)",
         "shortTitle": null,
         "number": "25"}]},
      "address": "/releases/v4.0.0-m5/"}],
    "release-v4.0.0-m4":
    [{"id": "release-v4___0___0-m4",
      "data":
      {"title": "Lean 4.0.0-m4 (2022-03-27)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.0.0-m4 (2022-03-27)",
         "shortTitle": null,
         "number": "26"}]},
      "address": "/releases/v4.0.0-m4/"}],
    "release-v4.0.0-m3":
    [{"id": "release-v4___0___0-m3",
      "data":
      {"title": "Lean 4.0.0-m3 (2022-01-31)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.0.0-m3 (2022-01-31)",
         "shortTitle": null,
         "number": "27"}]},
      "address": "/releases/v4.0.0-m3/"}],
    "release-v4.0.0-m2":
    [{"id": "release-v4___0___0-m2",
      "data":
      {"title": "Lean 4.0.0-m2 (2021-03-02)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.0.0-m2 (2021-03-02)",
         "shortTitle": null,
         "number": "28"}]},
      "address": "/releases/v4.0.0-m2/"}],
    "release-v4.0.0-m1":
    [{"id": "release-v4___0___0-m1",
      "data":
      {"title": "Lean 4.0.0-m1 (2021-01-04)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.0.0-m1 (2021-01-04)",
         "shortTitle": null,
         "number": "29"}]},
      "address": "/releases/v4.0.0-m1/"}],
    "release-v4.0.0":
    [{"id": "release-v4___0___0",
      "data":
      {"title": "Lean 4.0.0 (2023-09-08)",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null},
        {"title": "Lean 4.0.0 (2023-09-08)",
         "shortTitle": null,
         "number": "24"}]},
      "address": "/releases/v4.0.0/"}],
    "release-notes":
    [{"id": "release-notes",
      "data":
      {"title": "Release Notes",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Release Notes", "shortTitle": null, "number": null}]},
      "address": "/releases/"}],
    "reference-counting":
    [{"id": "reference-counting",
      "data":
      {"title": "Reference Counting",
       "shortTitle": null,
       "sectionNum": "21.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Run-Time Code", "shortTitle": null, "number": "21"},
        {"title": "Reference Counting", "shortTitle": null, "number": "2"}]},
      "address": "/Run-Time-Code/Reference-Counting/"}],
    "reference-boxes":
    [{"id": "reference-boxes",
      "data":
      {"title": "Constant, Syntax, and Tactic References",
       "shortTitle": null,
       "sectionNum": "1.2.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Introduction", "shortTitle": null, "number": "1"},
        {"title": "Typographical Conventions",
         "shortTitle": null,
         "number": "2"},
        {"title": "Constant, Syntax, and Tactic References",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Introduction/"}],
    "ref-locks":
    [{"id": "ref-locks",
      "data":
      {"title": "Concurrency",
       "shortTitle": null,
       "sectionNum": "15.4.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "IO", "shortTitle": null, "number": "15"},
        {"title": "Mutable References", "shortTitle": null, "number": "4"},
        {"title": "Concurrency", "shortTitle": null, "number": "2"}]},
      "address": "/IO/Mutable-References/"}],
    "reducibility":
    [{"id": "reducibility",
      "data":
      {"title": "Controlling Reduction",
       "shortTitle": null,
       "sectionNum": "7.6.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Controlling Reduction",
         "shortTitle": null,
         "number": "6"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "recursors":
    [{"id": "recursors",
      "data":
      {"title": "Recursors",
       "shortTitle": null,
       "sectionNum": "4.4.3.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Logical Model", "shortTitle": null, "number": "3"},
        {"title": "Recursors", "shortTitle": null, "number": "1"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "recursor-types":
    [{"id": "recursor-types",
      "data":
      {"title": "Recursor Types",
       "shortTitle": null,
       "sectionNum": "4.4.3.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Logical Model", "shortTitle": null, "number": "3"},
        {"title": "Recursors", "shortTitle": null, "number": "1"},
        {"title": "Recursor Types", "shortTitle": null, "number": "1"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "recursor-elaboration-helpers":
    [{"id": "recursor-elaboration-helpers",
      "data":
      {"title": "Constructions for Termination Checking",
       "shortTitle": null,
       "sectionNum": "4.4.3.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Logical Model", "shortTitle": null, "number": "3"},
        {"title": "Constructions for Termination Checking",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "recursive-instances":
    [{"id": "recursive-instances",
      "data":
      {"title": "Recursive Instances",
       "shortTitle": null,
       "sectionNum": "11.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Instance Declarations", "shortTitle": null, "number": "2"},
        {"title": "Recursive Instances", "shortTitle": null, "number": "1"}]},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "recursive-definitions":
    [{"id": "recursive-definitions",
      "data":
      {"title": "Recursive Definitions",
       "shortTitle": null,
       "sectionNum": "7.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions",
         "shortTitle": null,
         "number": "6"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "reader-monad":
    [{"id": "reader-monad",
      "data":
      {"title": "Reader",
       "shortTitle": null,
       "sectionNum": "14.5.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Functors, Monads and  do -Notation",
         "shortTitle": null,
         "number": "14"},
        {"title": "Varieties of Monads", "shortTitle": null, "number": "5"},
        {"title": "Reader", "shortTitle": null, "number": "5"}]},
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "raw-string-literals":
    [{"id": "raw-string-literals",
      "data":
      {"title": "Raw String Literals",
       "shortTitle": null,
       "sectionNum": "19.8.3.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"},
        {"title": "Syntax", "shortTitle": null, "number": "3"},
        {"title": "Raw String Literals", "shortTitle": null, "number": "3"}]},
      "address": "/Basic-Types/Strings/"}],
    "raw-data":
    [{"id": "raw-data",
      "data":
      {"title": "Raw Data and Invariants",
       "shortTitle": null,
       "sectionNum": "19.17.1.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Maps and Sets", "shortTitle": null, "number": "17"},
        {"title": "Library Design", "shortTitle": null, "number": "1"},
        {"title": "Raw Data and Invariants",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "quotients-nested-inductives":
    [{"id": "quotients-nested-inductives",
      "data":
      {"title": "Quotients and Inductive Types",
       "shortTitle": null,
       "sectionNum": "4.5.5.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Quotients", "shortTitle": null, "number": "5"},
        {"title": "Logical Model", "shortTitle": null, "number": "5"},
        {"title": "Quotients and Inductive Types",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/The-Type-System/Quotients/"}],
    "quotients":
    [{"id": "quotients",
      "data":
      {"title": "Quotients",
       "shortTitle": null,
       "sectionNum": "4.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Quotients", "shortTitle": null, "number": "5"}]},
      "address": "/The-Type-System/Quotients/"}],
    "quotient-reduction":
    [{"id": "quotient-reduction",
      "data":
      {"title": "Quotient Reduction",
       "shortTitle": null,
       "sectionNum": "4.5.5.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Quotients", "shortTitle": null, "number": "5"},
        {"title": "Logical Model", "shortTitle": null, "number": "5"},
        {"title": "Quotient Reduction", "shortTitle": null, "number": "1"}]},
      "address": "/The-Type-System/Quotients/"}],
    "quotient-proofs":
    [{"id": "quotient-proofs",
      "data":
      {"title": "Proofs About Quotients",
       "shortTitle": null,
       "sectionNum": "4.5.4.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Quotients", "shortTitle": null, "number": "5"},
        {"title": "Quotient API", "shortTitle": null, "number": "4"},
        {"title": "Proofs About Quotients",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/The-Type-System/Quotients/"}],
    "quotient-model":
    [{"id": "quotient-model",
      "data":
      {"title": "Logical Model",
       "shortTitle": null,
       "sectionNum": "4.5.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Quotients", "shortTitle": null, "number": "5"},
        {"title": "Logical Model", "shortTitle": null, "number": "5"}]},
      "address": "/The-Type-System/Quotients/"}],
    "quotient-intro":
    [{"id": "quotient-intro",
      "data":
      {"title": "Introducing Quotients",
       "shortTitle": null,
       "sectionNum": "4.5.4.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Quotients", "shortTitle": null, "number": "5"},
        {"title": "Quotient API", "shortTitle": null, "number": "4"},
        {"title": "Introducing Quotients",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/The-Type-System/Quotients/"}],
    "quotient-funext":
    [{"id": "quotient-funext",
      "data":
      {"title": "Quotients and Function Extensionality",
       "shortTitle": null,
       "sectionNum": "4.5.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Quotients", "shortTitle": null, "number": "5"},
        {"title": "Quotients and Function Extensionality",
         "shortTitle": null,
         "number": "6"}]},
      "address": "/The-Type-System/Quotients/"}],
    "quotient-elim":
    [{"id": "quotient-elim",
      "data":
      {"title": "Eliminating Quotients",
       "shortTitle": null,
       "sectionNum": "4.5.4.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Quotients", "shortTitle": null, "number": "5"},
        {"title": "Quotient API", "shortTitle": null, "number": "4"},
        {"title": "Eliminating Quotients",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/The-Type-System/Quotients/"}],
    "quotient-api":
    [{"id": "quotient-api",
      "data":
      {"title": "Quotient API",
       "shortTitle": null,
       "sectionNum": "4.5.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Quotients", "shortTitle": null, "number": "5"},
        {"title": "Quotient API", "shortTitle": null, "number": "4"}]},
      "address": "/The-Type-System/Quotients/"}],
    "quotient-alternatives":
    [{"id": "quotient-alternatives",
      "data":
      {"title": "Alternatives to Quotient Types",
       "shortTitle": null,
       "sectionNum": "4.5.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Quotients", "shortTitle": null, "number": "5"},
        {"title": "Alternatives to Quotient Types",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/The-Type-System/Quotients/"}],
    "quote-patterns":
    [{"id": "quote-patterns",
      "data":
      {"title": "Matching Syntax",
       "shortTitle": null,
       "sectionNum": "20.5.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Macros", "shortTitle": null, "number": "5"},
        {"title": "Matching Syntax", "shortTitle": null, "number": "4"}]},
      "address": "/Notations-and-Macros/Macros/"}],
    "quotation":
    [{"id": "quotation",
      "data":
      {"title": "Quotation",
       "shortTitle": null,
       "sectionNum": "20.5.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Macros", "shortTitle": null, "number": "5"},
        {"title": "Quotation", "shortTitle": null, "number": "3"}]},
      "address": "/Notations-and-Macros/Macros/"}],
    "quasiquotation":
    [{"id": "quasiquotation",
      "data":
      {"title": "Quasiquotation",
       "shortTitle": null,
       "sectionNum": "20.5.3.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Macros", "shortTitle": null, "number": "5"},
        {"title": "Quotation", "shortTitle": null, "number": "3"},
        {"title": "Quasiquotation", "shortTitle": null, "number": "1"}]},
      "address": "/Notations-and-Macros/Macros/"}],
    "propositions":
    [{"id": "propositions",
      "data":
      {"title": "Propositions",
       "shortTitle": null,
       "sectionNum": "4.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Propositions", "shortTitle": null, "number": "2"}]},
      "address": "/The-Type-System/Propositions/"}],
    "propositional-equality":
    [{"id": "propositional-equality",
      "data":
      {"title": "Propositional Equality",
       "shortTitle": null,
       "sectionNum": "18.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Propositions", "shortTitle": null, "number": "18"},
        {"title": "Propositional Equality",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "prop-vs-type":
    [{"id": "prop-vs-type",
      "data":
      {"title": "Prop vs Type",
       "shortTitle": null,
       "sectionNum": "4.4.3.2.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Logical Model", "shortTitle": null, "number": "3"},
        {"title": "Well-Formedness Requirements",
         "shortTitle": null,
         "number": "2"},
        {"title": "Prop vs Type", "shortTitle": null, "number": "3"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "proof-states":
    [{"id": "proof-states",
      "data":
      {"title": "Reading Proof States",
       "shortTitle": null,
       "sectionNum": "13.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Reading Proof States",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Tactic-Proofs/Reading-Proof-States/"}],
    "prod-api":
    [{"id": "prod-api",
      "data":
      {"title": "API Reference",
       "shortTitle": null,
       "sectionNum": "19.13.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Tuples", "shortTitle": null, "number": "13"},
        {"title": "Ordered Pairs", "shortTitle": null, "number": "1"},
        {"title": "API Reference", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Tuples/"}],
    "print-axioms":
    [{"id": "print-axioms",
      "data":
      {"title": "Displaying Axiom Dependencies",
       "shortTitle": null,
       "sectionNum": "8.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Axioms", "shortTitle": null, "number": "8"},
        {"title": "Displaying Axiom Dependencies",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Axioms/"}],
    "precedence":
    [{"id": "precedence",
      "data":
      {"title": "Precedence",
       "shortTitle": null,
       "sectionNum": "20.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Precedence", "shortTitle": null, "number": "2"}]},
      "address": "/Notations-and-Macros/Precedence/"}],
    "platform-info":
    [{"id": "platform-info",
      "data":
      {"title": "System and Platform Information",
       "shortTitle": null,
       "sectionNum": "15.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "IO", "shortTitle": null, "number": "15"},
        {"title": "System and Platform Information",
         "shortTitle": null,
         "number": "6"}]},
      "address": "/IO/System-and-Platform-Information/"}],
    "peano-axioms":
    [{"id": "peano-axioms",
      "data":
      {"title": "Peano Axioms",
       "shortTitle": null,
       "sectionNum": "19.1.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "Logical Model", "shortTitle": null, "number": "1"},
        {"title": "Peano Axioms", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "pattern-matching":
    [{"id": "pattern-matching",
      "data":
      {"title": "Pattern Matching",
       "shortTitle": null,
       "sectionNum": "10.8.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Terms", "shortTitle": null, "number": "10"},
        {"title": "Pattern Matching", "shortTitle": null, "number": "8"}]},
      "address": "/Terms/Pattern-Matching/"}],
    "pattern-fun":
    [{"id": "pattern-fun",
      "data":
      {"title": "Pattern Matching Functions",
       "shortTitle": null,
       "sectionNum": "10.8.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Terms", "shortTitle": null, "number": "10"},
        {"title": "Pattern Matching", "shortTitle": null, "number": "8"},
        {"title": "Pattern Matching Functions",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/Terms/Pattern-Matching/"}],
    "partial-unsafe":
    [{"id": "partial-unsafe",
      "data":
      {"title": "Partial and Unsafe Definitions",
       "shortTitle": null,
       "sectionNum": "7.6.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Partial and Unsafe Definitions",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "partial-functions":
    [{"id": "partial-functions",
      "data":
      {"title": "Partial Functions",
       "shortTitle": null,
       "sectionNum": "7.6.5.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Partial and Unsafe Definitions",
         "shortTitle": null,
         "number": "5"},
        {"title": "Partial Functions", "shortTitle": null, "number": "1"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "partial-fixpoint-theory":
    [{"id": "partial-fixpoint-theory",
      "data":
      {"title": "Theory and Construction",
       "shortTitle": null,
       "sectionNum": "7.6.4.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Partial Fixpoint Recursion",
         "shortTitle": null,
         "number": "4"},
        {"title": "Theory and Construction",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "partial-fixpoint-tailrec":
    [{"id": "partial-fixpoint-tailrec",
      "data":
      {"title": "Tail-Recursive Functions",
       "shortTitle": null,
       "sectionNum": "7.6.4.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Partial Fixpoint Recursion",
         "shortTitle": null,
         "number": "4"},
        {"title": "Tail-Recursive Functions",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "partial-fixpoint-monadic":
    [{"id": "partial-fixpoint-monadic",
      "data":
      {"title": "Monadic functions",
       "shortTitle": null,
       "sectionNum": "7.6.4.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Partial Fixpoint Recursion",
         "shortTitle": null,
         "number": "4"},
        {"title": "Monadic functions", "shortTitle": null, "number": "2"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "partial-fixpoint":
    [{"id": "partial-fixpoint",
      "data":
      {"title": "Partial Fixpoint Recursion",
       "shortTitle": null,
       "sectionNum": "7.6.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Partial Fixpoint Recursion",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "partial-correctness-theorem":
    [{"id": "partial-correctness-theorem",
      "data":
      {"title": "Partial Correctness Theorems",
       "shortTitle": null,
       "sectionNum": "7.6.4.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Partial Fixpoint Recursion",
         "shortTitle": null,
         "number": "4"},
        {"title": "Partial Correctness Theorems",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "parser":
    [{"id": "parser",
      "data":
      {"title": "Parsing",
       "shortTitle": null,
       "sectionNum": "2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Elaboration and Compilation",
         "shortTitle": null,
         "number": "2"},
        {"title": "Parsing", "shortTitle": null, "number": "1"}]},
      "address": "/Elaboration-and-Compilation/"}],
    "parameter-syntax":
    [{"id": "parameter-syntax",
      "data":
      {"title": "Parameters and Types",
       "shortTitle": null,
       "sectionNum": "7.2.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Headers and Signatures",
         "shortTitle": null,
         "number": "2"},
        {"title": "Parameters and Types",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "pairs":
    [{"id": "pairs",
      "data":
      {"title": "Ordered Pairs",
       "shortTitle": null,
       "sectionNum": "19.13.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Tuples", "shortTitle": null, "number": "13"},
        {"title": "Ordered Pairs", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Tuples/"}],
    "ordinary-coercion":
    [{"id": "ordinary-coercion",
      "data":
      {"title": "Coercing Between Types",
       "shortTitle": null,
       "sectionNum": "12.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Coercions", "shortTitle": null, "number": "12"},
        {"title": "Coercing Between Types",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "option-monad":
    [{"id": "option-monad",
      "data":
      {"title": "Option",
       "shortTitle": null,
       "sectionNum": "14.5.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Functors, Monads and  do -Notation",
         "shortTitle": null,
         "number": "14"},
        {"title": "Varieties of Monads", "shortTitle": null, "number": "5"},
        {"title": "Option", "shortTitle": null, "number": "6"}]},
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "option":
    [{"id": "option",
      "data":
      {"title": "Optional Values",
       "shortTitle": null,
       "sectionNum": "19.12.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Optional Values", "shortTitle": null, "number": "12"}]},
      "address": "/Basic-Types/Optional-Values/"}],
    "operators-and-notations":
    [{"id": "operators-and-notations",
      "data":
      {"title": "Operators and Notations",
       "shortTitle": null,
       "sectionNum": "20.3.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Notations", "shortTitle": null, "number": "3"},
        {"title": "Operators and Notations",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Notations-and-Macros/Notations/"}],
    "operators":
    [{"id": "operators",
      "data":
      {"title": "Custom Operators",
       "shortTitle": null,
       "sectionNum": "20.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Custom Operators", "shortTitle": null, "number": "1"}]},
      "address": "/Notations-and-Macros/Custom-Operators/"}],
    "notations":
    [{"id": "notations",
      "data":
      {"title": "Notations",
       "shortTitle": null,
       "sectionNum": "20.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Notations", "shortTitle": null, "number": "3"}]},
      "address": "/Notations-and-Macros/Notations/"}],
    "nested-inductive-types":
    [{"id": "nested-inductive-types",
      "data":
      {"title": "Nested Inductive Types",
       "shortTitle": null,
       "sectionNum": "4.4.5.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Mutual Inductive Types",
         "shortTitle": null,
         "number": "5"},
        {"title": "Nested Inductive Types",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "nat-syntax":
    [{"id": "nat-syntax",
      "data":
      {"title": "Syntax",
       "shortTitle": null,
       "sectionNum": "19.1.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "Syntax", "shortTitle": null, "number": "3"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-runtime":
    [{"id": "nat-runtime",
      "data":
      {"title": "Run-Time Representation",
       "shortTitle": null,
       "sectionNum": "19.1.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "Run-Time Representation",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-performance":
    [{"id": "nat-performance",
      "data":
      {"title": "Performance Notes",
       "shortTitle": null,
       "sectionNum": "19.1.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "Run-Time Representation",
         "shortTitle": null,
         "number": "2"},
        {"title": "Performance Notes", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-model":
    [{"id": "nat-model",
      "data":
      {"title": "Logical Model",
       "shortTitle": null,
       "sectionNum": "19.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "Logical Model", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-literals":
    [{"id": "nat-literals",
      "data":
      {"title": "Natural Numbers",
       "shortTitle": null,
       "sectionNum": "10.5.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Terms", "shortTitle": null, "number": "10"},
        {"title": "Literals", "shortTitle": null, "number": "5"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"}]},
      "address": "/Terms/Literals/"}],
    "nat-api-predicates":
    [{"id": "nat-api-predicates",
      "data":
      {"title": "Predicates",
       "shortTitle": null,
       "sectionNum": "19.1.4.5.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Comparisons", "shortTitle": null, "number": "5"},
        {"title": "Predicates", "shortTitle": null, "number": "3"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-api-pow2":
    [{"id": "nat-api-pow2",
      "data":
      {"title": "Powers of Two",
       "shortTitle": null,
       "sectionNum": "19.1.4.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Powers of Two", "shortTitle": null, "number": "4"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-api-minmax":
    [{"id": "nat-api-minmax",
      "data":
      {"title": "Minimum and Maximum",
       "shortTitle": null,
       "sectionNum": "19.1.4.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Minimum and Maximum", "shortTitle": null, "number": "2"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-api-iteration":
    [{"id": "nat-api-iteration",
      "data":
      {"title": "Iteration",
       "shortTitle": null,
       "sectionNum": "19.1.4.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Iteration", "shortTitle": null, "number": "6"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-api-induction":
    [{"id": "nat-api-induction",
      "data":
      {"title": "Alternative Induction Principles",
       "shortTitle": null,
       "sectionNum": "19.1.4.8.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Elimination", "shortTitle": null, "number": "8"},
        {"title": "Alternative Induction Principles",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-api-gcd-lcm":
    [{"id": "nat-api-gcd-lcm",
      "data":
      {"title": "GCD and LCM",
       "shortTitle": null,
       "sectionNum": "19.1.4.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "GCD and LCM", "shortTitle": null, "number": "3"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-api-elim":
    [{"id": "nat-api-elim",
      "data":
      {"title": "Elimination",
       "shortTitle": null,
       "sectionNum": "19.1.4.8.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Elimination", "shortTitle": null, "number": "8"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-api-deceq":
    [{"id": "nat-api-deceq",
      "data":
      {"title": "Decidable Equality",
       "shortTitle": null,
       "sectionNum": "19.1.4.5.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Comparisons", "shortTitle": null, "number": "5"},
        {"title": "Decidable Equality", "shortTitle": null, "number": "2"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-api-conversion":
    [{"id": "nat-api-conversion",
      "data":
      {"title": "Conversion",
       "shortTitle": null,
       "sectionNum": "19.1.4.7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Conversion", "shortTitle": null, "number": "7"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-api-comparison-bool":
    [{"id": "nat-api-comparison-bool",
      "data":
      {"title": "Boolean Comparisons",
       "shortTitle": null,
       "sectionNum": "19.1.4.5.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Comparisons", "shortTitle": null, "number": "5"},
        {"title": "Boolean Comparisons", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-api-comparison":
    [{"id": "nat-api-comparison",
      "data":
      {"title": "Comparisons",
       "shortTitle": null,
       "sectionNum": "19.1.4.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Comparisons", "shortTitle": null, "number": "5"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-api-cast":
    [{"id": "nat-api-cast",
      "data":
      {"title": "Coercions from Natural Numbers and Integers",
       "shortTitle": null,
       "sectionNum": "12.2.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Coercions", "shortTitle": null, "number": "12"},
        {"title": "Coercing Between Types",
         "shortTitle": null,
         "number": "2"},
        {"title": "Coercions from Natural Numbers and Integers",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "nat-api-bitwise":
    [{"id": "nat-api-bitwise",
      "data":
      {"title": "Bitwise Operations",
       "shortTitle": null,
       "sectionNum": "19.1.4.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Arithmetic", "shortTitle": null, "number": "1"},
        {"title": "Bitwise Operations", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-api-arithmetic":
    [{"id": "nat-api-arithmetic",
      "data":
      {"title": "Arithmetic",
       "shortTitle": null,
       "sectionNum": "19.1.4.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Arithmetic", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nat-api":
    [{"id": "nat-api",
      "data":
      {"title": "API Reference",
       "shortTitle": null,
       "sectionNum": "19.1.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"},
        {"title": "API Reference", "shortTitle": null, "number": "4"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "namespaces-sections":
    [{"id": "namespaces-sections",
      "data":
      {"title": "Namespaces and Sections",
       "shortTitle": null,
       "sectionNum": "6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Namespaces and Sections",
         "shortTitle": null,
         "number": "6"}]},
      "address": "/Namespaces-and-Sections/"}],
    "namespaces":
    [{"id": "namespaces",
      "data":
      {"title": "Namespaces",
       "shortTitle": null,
       "sectionNum": "6.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Namespaces and Sections",
         "shortTitle": null,
         "number": "6"},
        {"title": "Namespaces", "shortTitle": null, "number": "1"}]},
      "address": "/Namespaces-and-Sections/"}],
    "mutual-well-founded-recursion":
    [{"id": "mutual-well-founded-recursion",
      "data":
      {"title": "Mutual Well-Founded Recursion",
       "shortTitle": null,
       "sectionNum": "7.6.3.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Well-Founded Recursion",
         "shortTitle": null,
         "number": "3"},
        {"title": "Mutual Well-Founded Recursion",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "mutual-syntax":
    [{"id": "mutual-syntax",
      "data":
      {"title": "Mutual Recursion",
       "shortTitle": null,
       "sectionNum": "7.6.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Mutual Recursion", "shortTitle": null, "number": "1"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "mutual-structural-recursion":
    [{"id": "mutual-structural-recursion",
      "data":
      {"title": "Mutual Structural Recursion",
       "shortTitle": null,
       "sectionNum": "7.6.2.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Structural Recursion", "shortTitle": null, "number": "2"},
        {"title": "Mutual Structural Recursion",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "mutual-partial-fixpoint":
    [{"id": "mutual-partial-fixpoint",
      "data":
      {"title": "Mutual Recursion with Partial Fixpoints",
       "shortTitle": null,
       "sectionNum": "7.6.4.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Partial Fixpoint Recursion",
         "shortTitle": null,
         "number": "4"},
        {"title": "Mutual Recursion with Partial Fixpoints",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "mutual-inductive-types-same-universe":
    [{"id": "mutual-inductive-types-same-universe",
      "data":
      {"title": "Universe Levels",
       "shortTitle": null,
       "sectionNum": "4.4.5.1.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Mutual Inductive Types",
         "shortTitle": null,
         "number": "5"},
        {"title": "Requirements", "shortTitle": null, "number": "1"},
        {"title": "Universe Levels", "shortTitle": null, "number": "3"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "mutual-inductive-types-same-parameters":
    [{"id": "mutual-inductive-types-same-parameters",
      "data":
      {"title": "Parameters Must Match",
       "shortTitle": null,
       "sectionNum": "4.4.5.1.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Mutual Inductive Types",
         "shortTitle": null,
         "number": "5"},
        {"title": "Requirements", "shortTitle": null, "number": "1"},
        {"title": "Parameters Must Match",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "mutual-inductive-types-run-time":
    [{"id": "mutual-inductive-types-run-time",
      "data":
      {"title": "Run-Time Representation",
       "shortTitle": null,
       "sectionNum": "4.4.5.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Mutual Inductive Types",
         "shortTitle": null,
         "number": "5"},
        {"title": "Run-Time Representation",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "mutual-inductive-types-requirements":
    [{"id": "mutual-inductive-types-requirements",
      "data":
      {"title": "Requirements",
       "shortTitle": null,
       "sectionNum": "4.4.5.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Mutual Inductive Types",
         "shortTitle": null,
         "number": "5"},
        {"title": "Requirements", "shortTitle": null, "number": "1"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "mutual-inductive-types-recursors":
    [{"id": "mutual-inductive-types-recursors",
      "data":
      {"title": "Recursors",
       "shortTitle": null,
       "sectionNum": "4.4.5.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Mutual Inductive Types",
         "shortTitle": null,
         "number": "5"},
        {"title": "Recursors", "shortTitle": null, "number": "2"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "mutual-inductive-types-positivity":
    [{"id": "mutual-inductive-types-positivity",
      "data":
      {"title": "Positivity",
       "shortTitle": null,
       "sectionNum": "4.4.5.1.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Mutual Inductive Types",
         "shortTitle": null,
         "number": "5"},
        {"title": "Requirements", "shortTitle": null, "number": "1"},
        {"title": "Positivity", "shortTitle": null, "number": "4"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "mutual-inductive-types-dependencies":
    [{"id": "mutual-inductive-types-dependencies",
      "data":
      {"title": "Mutual Dependencies",
       "shortTitle": null,
       "sectionNum": "4.4.5.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Mutual Inductive Types",
         "shortTitle": null,
         "number": "5"},
        {"title": "Requirements", "shortTitle": null, "number": "1"},
        {"title": "Mutual Dependencies", "shortTitle": null, "number": "1"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "mutual-inductive-types":
    [{"id": "mutual-inductive-types",
      "data":
      {"title": "Mutual Inductive Types",
       "shortTitle": null,
       "sectionNum": "4.4.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Mutual Inductive Types",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "mutable-st-references":
    [{"id": "mutable-st-references",
      "data":
      {"title": "State Transformers",
       "shortTitle": null,
       "sectionNum": "15.4.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "IO", "shortTitle": null, "number": "15"},
        {"title": "Mutable References", "shortTitle": null, "number": "4"},
        {"title": "State Transformers", "shortTitle": null, "number": "1"}]},
      "address": "/IO/Mutable-References/"}],
    "monads-and-do":
    [{"id": "monads-and-do",
      "data":
      {"title": "Functors, Monads and  do -Notation",
       "shortTitle": null,
       "sectionNum": "14.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Functors, Monads and  do -Notation",
         "shortTitle": null,
         "number": "14"}]},
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "monad-varieties":
    [{"id": "monad-varieties",
      "data":
      {"title": "Varieties of Monads",
       "shortTitle": null,
       "sectionNum": "14.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Functors, Monads and  do -Notation",
         "shortTitle": null,
         "number": "14"},
        {"title": "Varieties of Monads", "shortTitle": null, "number": "5"}]},
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "monad-transformers":
    [{"id": "monad-transformers",
      "data":
      {"title": "Monad Transformers",
       "shortTitle": null,
       "sectionNum": "14.5.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Functors, Monads and  do -Notation",
         "shortTitle": null,
         "number": "14"},
        {"title": "Varieties of Monads", "shortTitle": null, "number": "5"},
        {"title": "Monad Transformers", "shortTitle": null, "number": "2"}]},
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "monad-laws":
    [{"id": "monad-laws",
      "data":
      {"title": "Laws",
       "shortTitle": null,
       "sectionNum": "14.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Functors, Monads and  do -Notation",
         "shortTitle": null,
         "number": "14"},
        {"title": "Laws", "shortTitle": null, "number": "1"}]},
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "monad-iteration-syntax":
    [{"id": "monad-iteration-syntax",
      "data":
      {"title": "Iteration",
       "shortTitle": null,
       "sectionNum": "14.3.2.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Functors, Monads and  do -Notation",
         "shortTitle": null,
         "number": "14"},
        {"title": "Syntax", "shortTitle": null, "number": "3"},
        {"title": "do -Notation", "shortTitle": null, "number": "2"},
        {"title": "Iteration", "shortTitle": null, "number": "5"}]},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "module-system":
    [{"id": "module-system",
      "data":
      {"title": "The Module System",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Module System", "shortTitle": null, "number": null}]},
      "address": "/The-Module-System/"}],
    "module-syntax":
    [{"id": "module-syntax",
      "data":
      {"title": "Concrete Syntax",
       "shortTitle": null,
       "sectionNum": "5.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Source Files and Modules",
         "shortTitle": null,
         "number": "5"},
        {"title": "Concrete Syntax", "shortTitle": null, "number": "2"}]},
      "address": "/Source-Files-and-Modules/"}],
    "module-structure":
    [{"id": "module-structure",
      "data":
      {"title": "Structure",
       "shortTitle": null,
       "sectionNum": "5.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Source Files and Modules",
         "shortTitle": null,
         "number": "5"},
        {"title": "Structure", "shortTitle": null, "number": "3"}]},
      "address": "/Source-Files-and-Modules/"}],
    "module-headers":
    [{"id": "module-headers",
      "data":
      {"title": "Module Headers",
       "shortTitle": null,
       "sectionNum": "5.3.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Source Files and Modules",
         "shortTitle": null,
         "number": "5"},
        {"title": "Structure", "shortTitle": null, "number": "3"},
        {"title": "Module Headers", "shortTitle": null, "number": "1"}]},
      "address": "/Source-Files-and-Modules/"}],
    "module-encoding":
    [{"id": "module-encoding",
      "data":
      {"title": "Encoding and Representation",
       "shortTitle": null,
       "sectionNum": "5.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Source Files and Modules",
         "shortTitle": null,
         "number": "5"},
        {"title": "Encoding and Representation",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Source-Files-and-Modules/"}],
    "module-contents":
    [{"id": "module-contents",
      "data":
      {"title": "Elaborated Modules",
       "shortTitle": null,
       "sectionNum": "5.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Source Files and Modules",
         "shortTitle": null,
         "number": "5"},
        {"title": "Elaborated Modules", "shortTitle": null, "number": "4"}]},
      "address": "/Source-Files-and-Modules/"}],
    "metavariables-in-proofs":
    [{"id": "metavariables-in-proofs",
      "data":
      {"title": "Metavariables",
       "shortTitle": null,
       "sectionNum": "13.2.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Reading Proof States", "shortTitle": null, "number": "2"},
        {"title": "Metavariables", "shortTitle": null, "number": "2"}]},
      "address": "/Tactic-Proofs/Reading-Proof-States/"}],
    "match_pattern-functions":
    [{"id": "match_pattern-functions",
      "data":
      {"title": "Custom Pattern Functions",
       "shortTitle": null,
       "sectionNum": "10.8.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Terms", "shortTitle": null, "number": "10"},
        {"title": "Pattern Matching", "shortTitle": null, "number": "8"},
        {"title": "Custom Pattern Functions",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Terms/Pattern-Matching/"}],
    "match-generalization":
    [{"id": "match-generalization",
      "data":
      {"title": "Generalization",
       "shortTitle": null,
       "sectionNum": "10.8.1.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Terms", "shortTitle": null, "number": "10"},
        {"title": "Pattern Matching", "shortTitle": null, "number": "8"},
        {"title": "Types", "shortTitle": null, "number": "1"},
        {"title": "Generalization", "shortTitle": null, "number": "4"}]},
      "address": "/Terms/Pattern-Matching/"}],
    "maps":
    [{"id": "maps",
      "data":
      {"title": "Maps and Sets",
       "shortTitle": null,
       "sectionNum": "19.17.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Maps and Sets", "shortTitle": null, "number": "17"}]},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "macros":
    [{"id": "macros",
      "data":
      {"title": "Macros",
       "shortTitle": null,
       "sectionNum": "20.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Macros", "shortTitle": null, "number": "5"}]},
      "address": "/Notations-and-Macros/Macros/"}],
    "macro_rules":
    [{"id": "macro_rules",
      "data":
      {"title": "The  macro_rules  Command",
       "shortTitle": null,
       "sectionNum": "20.5.5.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Macros", "shortTitle": null, "number": "5"},
        {"title": "Defining Macros", "shortTitle": null, "number": "5"},
        {"title": "The  macro_rules  Command",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Notations-and-Macros/Macros/"}],
    "macro-monad-hygiene":
    [{"id": "macro-monad-hygiene",
      "data":
      {"title": "Hygiene-Related Operations",
       "shortTitle": null,
       "sectionNum": "20.5.2.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Macros", "shortTitle": null, "number": "5"},
        {"title": "The Macro Monad", "shortTitle": null, "number": "2"},
        {"title": "Hygiene-Related Operations",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Notations-and-Macros/Macros/"}],
    "macro-monad":
    [{"id": "macro-monad",
      "data":
      {"title": "The Macro Monad",
       "shortTitle": null,
       "sectionNum": "20.5.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Macros", "shortTitle": null, "number": "5"},
        {"title": "The Macro Monad", "shortTitle": null, "number": "2"}]},
      "address": "/Notations-and-Macros/Macros/"}],
    "macro-hygiene":
    [{"id": "macro-hygiene",
      "data":
      {"title": "Hygiene",
       "shortTitle": null,
       "sectionNum": "20.5.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Macros", "shortTitle": null, "number": "5"},
        {"title": "Hygiene", "shortTitle": null, "number": "1"}]},
      "address": "/Notations-and-Macros/Macros/"}],
    "macro-exceptions":
    [{"id": "macro-exceptions",
      "data":
      {"title": "Exceptions and Errors",
       "shortTitle": null,
       "sectionNum": "20.5.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Macros", "shortTitle": null, "number": "5"},
        {"title": "The Macro Monad", "shortTitle": null, "number": "2"},
        {"title": "Exceptions and Errors",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Notations-and-Macros/Macros/"}],
    "macro-environment":
    [{"id": "macro-environment",
      "data":
      {"title": "Querying the Environment",
       "shortTitle": null,
       "sectionNum": "20.5.2.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Macros", "shortTitle": null, "number": "5"},
        {"title": "The Macro Monad", "shortTitle": null, "number": "2"},
        {"title": "Querying the Environment",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/Notations-and-Macros/Macros/"}],
    "macro-command":
    [{"id": "macro-command",
      "data":
      {"title": "The  macro  Command",
       "shortTitle": null,
       "sectionNum": "20.5.5.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Macros", "shortTitle": null, "number": "5"},
        {"title": "Defining Macros", "shortTitle": null, "number": "5"},
        {"title": "The  macro  Command", "shortTitle": null, "number": "2"}]},
      "address": "/Notations-and-Macros/Macros/"}],
    "macro-attribute":
    [{"id": "macro-attribute",
      "data":
      {"title": "The Macro Attribute",
       "shortTitle": null,
       "sectionNum": "20.5.5.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Macros", "shortTitle": null, "number": "5"},
        {"title": "Defining Macros", "shortTitle": null, "number": "5"},
        {"title": "The Macro Attribute", "shortTitle": null, "number": "3"}]},
      "address": "/Notations-and-Macros/Macros/"}],
    "macro-and-elab":
    [{"id": "macro-and-elab",
      "data":
      {"title": "Macro Expansion and Elaboration",
       "shortTitle": null,
       "sectionNum": "2.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Elaboration and Compilation",
         "shortTitle": null,
         "number": "2"},
        {"title": "Macro Expansion and Elaboration",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Elaboration-and-Compilation/"}],
    "list-syntax":
    [{"id": "list-syntax",
      "data":
      {"title": "Syntax",
       "shortTitle": null,
       "sectionNum": "19.15.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Linked Lists", "shortTitle": null, "number": "15"},
        {"title": "Syntax", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Linked-Lists/"}],
    "list-performance":
    [{"id": "list-performance",
      "data":
      {"title": "Performance Notes",
       "shortTitle": null,
       "sectionNum": "19.15.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Linked Lists", "shortTitle": null, "number": "15"},
        {"title": "Performance Notes", "shortTitle": null, "number": "2"}]},
      "address": "/Basic-Types/Linked-Lists/"}],
    "list-api-reference":
    [{"id": "list-api-reference",
      "data":
      {"title": "API Reference",
       "shortTitle": null,
       "sectionNum": "19.15.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Linked Lists", "shortTitle": null, "number": "15"},
        {"title": "API Reference", "shortTitle": null, "number": "3"}]},
      "address": "/Basic-Types/Linked-Lists/"}],
    "lifting-monads":
    [{"id": "lifting-monads",
      "data":
      {"title": "Lifting Monads",
       "shortTitle": null,
       "sectionNum": "14.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Functors, Monads and  do -Notation",
         "shortTitle": null,
         "number": "14"},
        {"title": "Lifting Monads", "shortTitle": null, "number": "2"}]},
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "level-expressions":
    [{"id": "level-expressions",
      "data":
      {"title": "Level Expressions",
       "shortTitle": null,
       "sectionNum": "4.3.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Universes", "shortTitle": null, "number": "3"},
        {"title": "Polymorphism", "shortTitle": null, "number": "2"},
        {"title": "Level Expressions", "shortTitle": null, "number": "1"}]},
      "address": "/The-Type-System/Universes/"}],
    "lean-language-reference":
    [{"id": "lean-language-reference",
      "data":
      {"title": "The Lean Language Reference",
       "shortTitle": null,
       "sectionNum": "",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null}]},
      "address": "//"}],
    "language-extension":
    [{"id": "language-extension",
      "data":
      {"title": "Notations and Macros",
       "shortTitle": null,
       "sectionNum": "20.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros",
         "shortTitle": null,
         "number": "20"}]},
      "address": "/Notations-and-Macros/"}],
    "lake-vocab":
    [{"id": "lake-vocab",
      "data":
      {"title": "Concepts and Terminology",
       "shortTitle": null,
       "sectionNum": "22.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Lake", "shortTitle": null, "number": "1"},
        {"title": "Concepts and Terminology",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "lake-scripts":
    [{"id": "lake-scripts",
      "data":
      {"title": "Scripts",
       "shortTitle": null,
       "sectionNum": "22.1.1.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Lake", "shortTitle": null, "number": "1"},
        {"title": "Concepts and Terminology",
         "shortTitle": null,
         "number": "1"},
        {"title": "Scripts", "shortTitle": null, "number": "3"}]},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "lake-github":
    [{"id": "lake-github",
      "data":
      {"title": "GitHub Release Builds",
       "shortTitle": null,
       "sectionNum": "22.1.1.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Lake", "shortTitle": null, "number": "1"},
        {"title": "Concepts and Terminology",
         "shortTitle": null,
         "number": "1"},
        {"title": "GitHub Release Builds",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "lake-facets":
    [{"id": "lake-facets",
      "data":
      {"title": "Facets",
       "shortTitle": null,
       "sectionNum": "22.1.1.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Lake", "shortTitle": null, "number": "1"},
        {"title": "Concepts and Terminology",
         "shortTitle": null,
         "number": "1"},
        {"title": "Facets", "shortTitle": null, "number": "2"}]},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "lake-environment":
    [{"id": "lake-environment",
      "data":
      {"title": "Environment Variables",
       "shortTitle": null,
       "sectionNum": "22.1.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Lake", "shortTitle": null, "number": "1"},
        {"title": "Command-Line Interface",
         "shortTitle": null,
         "number": "2"},
        {"title": "Environment Variables",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "lake-config-toml":
    [{"id": "lake-config-toml",
      "data":
      {"title": "Declarative TOML Format",
       "shortTitle": null,
       "sectionNum": "22.1.3.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Lake", "shortTitle": null, "number": "1"},
        {"title": "Configuration File Format",
         "shortTitle": null,
         "number": "3"},
        {"title": "Declarative TOML Format",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "lake-config-lean":
    [{"id": "lake-config-lean",
      "data":
      {"title": "Lean Format",
       "shortTitle": null,
       "sectionNum": "22.1.3.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Lake", "shortTitle": null, "number": "1"},
        {"title": "Configuration File Format",
         "shortTitle": null,
         "number": "3"},
        {"title": "Lean Format", "shortTitle": null, "number": "2"}]},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "lake-config":
    [{"id": "lake-config",
      "data":
      {"title": "Configuration File Format",
       "shortTitle": null,
       "sectionNum": "22.1.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Lake", "shortTitle": null, "number": "1"},
        {"title": "Configuration File Format",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "lake-cli":
    [{"id": "lake-cli",
      "data":
      {"title": "Command-Line Interface",
       "shortTitle": null,
       "sectionNum": "22.1.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Lake", "shortTitle": null, "number": "1"},
        {"title": "Command-Line Interface",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "lake-api":
    [{"id": "lake-api",
      "data":
      {"title": "Script API Reference",
       "shortTitle": null,
       "sectionNum": "22.1.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Lake", "shortTitle": null, "number": "1"},
        {"title": "Script API Reference",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "lake":
    [{"id": "lake",
      "data":
      {"title": "Lake",
       "shortTitle": null,
       "sectionNum": "22.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Lake", "shortTitle": null, "number": "1"}]},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "keywords-and-identifiers":
    [{"id": "keywords-and-identifiers",
      "data":
      {"title": "Keywords and Identifiers",
       "shortTitle": null,
       "sectionNum": "5.2.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Source Files and Modules",
         "shortTitle": null,
         "number": "5"},
        {"title": "Concrete Syntax", "shortTitle": null, "number": "2"},
        {"title": "Keywords and Identifiers",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/Source-Files-and-Modules/"}],
    "iota-reduction":
    [{"id": "iota-reduction",
      "data":
      {"title": "Reduction",
       "shortTitle": null,
       "sectionNum": "4.4.3.1.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Logical Model", "shortTitle": null, "number": "3"},
        {"title": "Recursors", "shortTitle": null, "number": "1"},
        {"title": "Reduction", "shortTitle": null, "number": "2"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "io-timing":
    [{"id": "io-timing",
      "data":
      {"title": "Timing",
       "shortTitle": null,
       "sectionNum": "15.8.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "IO", "shortTitle": null, "number": "15"},
        {"title": "Timing", "shortTitle": null, "number": "8"}]},
      "address": "/IO/Timing/"}],
    "io-processes":
    [{"id": "io-processes",
      "data":
      {"title": "Processes",
       "shortTitle": null,
       "sectionNum": "15.9.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "IO", "shortTitle": null, "number": "15"},
        {"title": "Processes", "shortTitle": null, "number": "9"}]},
      "address": "/IO/Processes/"}],
    "io-monad-getenv":
    [{"id": "io-monad-getenv",
      "data":
      {"title": "Environment Variables",
       "shortTitle": null,
       "sectionNum": "15.7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "IO", "shortTitle": null, "number": "15"},
        {"title": "Environment Variables",
         "shortTitle": null,
         "number": "7"}]},
      "address": "/IO/Environment-Variables/"}],
    "io-monad-errors":
    [{"id": "io-monad-errors",
      "data":
      {"title": "Errors and Error Handling in  IO",
       "shortTitle": null,
       "sectionNum": "15.1.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "IO", "shortTitle": null, "number": "15"},
        {"title": "Logical Model", "shortTitle": null, "number": "1"},
        {"title": "Errors and Error Handling in  IO",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/IO/Logical-Model/"}],
    "io-monad-control":
    [{"id": "io-monad-control",
      "data":
      {"title": "Control Structures",
       "shortTitle": null,
       "sectionNum": "15.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "IO", "shortTitle": null, "number": "15"},
        {"title": "Control Structures", "shortTitle": null, "number": "2"}]},
      "address": "/IO/Control-Structures/"}],
    "io-monad":
    [{"id": "io-monad",
      "data":
      {"title": "The  IO ,  EIO  and  BaseIO  Monads",
       "shortTitle": null,
       "sectionNum": "15.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "IO", "shortTitle": null, "number": "15"},
        {"title": "Logical Model", "shortTitle": null, "number": "1"},
        {"title": "The  IO ,  EIO  and  BaseIO  Monads",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/IO/Logical-Model/"}],
    "io":
    [{"id": "io",
      "data":
      {"title": "IO",
       "shortTitle": null,
       "sectionNum": "15.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "IO", "shortTitle": null, "number": "15"}]},
      "address": "/IO/"}],
    "introduction":
    [{"id": "introduction",
      "data":
      {"title": "Introduction",
       "shortTitle": null,
       "sectionNum": "1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Introduction", "shortTitle": null, "number": "1"}]},
      "address": "/Introduction/"}],
    "interaction":
    [{"id": "interaction",
      "data":
      {"title": "Interacting with Lean",
       "shortTitle": null,
       "sectionNum": "3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/Interacting-with-Lean/"}],
    "int-syntax":
    [{"id": "int-syntax",
      "data":
      {"title": "Syntax",
       "shortTitle": null,
       "sectionNum": "19.2.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Integers", "shortTitle": null, "number": "2"},
        {"title": "Syntax", "shortTitle": null, "number": "3"}]},
      "address": "/Basic-Types/Integers/"}],
    "int-runtime":
    [{"id": "int-runtime",
      "data":
      {"title": "Run-Time Representation",
       "shortTitle": null,
       "sectionNum": "19.2.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Integers", "shortTitle": null, "number": "2"},
        {"title": "Run-Time Representation",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Basic-Types/Integers/"}],
    "int-model":
    [{"id": "int-model",
      "data":
      {"title": "Logical Model",
       "shortTitle": null,
       "sectionNum": "19.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Integers", "shortTitle": null, "number": "2"},
        {"title": "Logical Model", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Integers/"}],
    "int-div":
    [{"id": "int-div",
      "data":
      {"title": "Division",
       "shortTitle": null,
       "sectionNum": "19.2.4.3.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Integers", "shortTitle": null, "number": "2"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Arithmetic", "shortTitle": null, "number": "3"},
        {"title": "Division", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Integers/"}],
    "instance-synth-parameters":
    [{"id": "instance-synth-parameters",
      "data":
      {"title": "Instance Parameters and Synthesis",
       "shortTitle": null,
       "sectionNum": "11.3.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Instance Synthesis", "shortTitle": null, "number": "3"},
        {"title": "Instance Parameters and Synthesis",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "instance-synth":
    [{"id": "instance-synth",
      "data":
      {"title": "Instance Synthesis",
       "shortTitle": null,
       "sectionNum": "11.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Instance Synthesis", "shortTitle": null, "number": "3"}]},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "instance-priorities":
    [{"id": "instance-priorities",
      "data":
      {"title": "Instance Priorities",
       "shortTitle": null,
       "sectionNum": "11.2.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Instance Declarations", "shortTitle": null, "number": "2"},
        {"title": "Instance Priorities", "shortTitle": null, "number": "3"}]},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "instance-declarations":
    [{"id": "instance-declarations",
      "data":
      {"title": "Instance Declarations",
       "shortTitle": null,
       "sectionNum": "11.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Instance Declarations",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "instance-attribute":
    [{"id": "instance-attribute",
      "data":
      {"title": "The Instance Attribute",
       "shortTitle": null,
       "sectionNum": "11.2.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Instance Declarations", "shortTitle": null, "number": "2"},
        {"title": "The Instance Attribute",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "initialization":
    [{"id": "initialization",
      "data":
      {"title": "Initialization",
       "shortTitle": null,
       "sectionNum": "2.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Elaboration and Compilation",
         "shortTitle": null,
         "number": "2"},
        {"title": "Initialization", "shortTitle": null, "number": "5"}]},
      "address": "/Elaboration-and-Compilation/"}],
    "inferring-well-founded-recursion":
    [{"id": "inferring-well-founded-recursion",
      "data":
      {"title": "Inferring Well-Founded Recursion",
       "shortTitle": null,
       "sectionNum": "7.6.3.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Well-Founded Recursion",
         "shortTitle": null,
         "number": "3"},
        {"title": "Inferring Well-Founded Recursion",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "inferring-structural-recursion":
    [{"id": "inferring-structural-recursion",
      "data":
      {"title": "Inferring Structural Recursion",
       "shortTitle": null,
       "sectionNum": "7.6.2.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Structural Recursion", "shortTitle": null, "number": "2"},
        {"title": "Inferring Structural Recursion",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "inductive-types-trivial-wrappers":
    [{"id": "inductive-types-trivial-wrappers",
      "data":
      {"title": "Trivial Wrappers",
       "shortTitle": null,
       "sectionNum": "4.4.4.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Run-Time Representation",
         "shortTitle": null,
         "number": "4"},
        {"title": "Trivial Wrappers", "shortTitle": null, "number": "3"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "inductive-types-standard-representation":
    [{"id": "inductive-types-standard-representation",
      "data":
      {"title": "Other Inductive Types",
       "shortTitle": null,
       "sectionNum": "4.4.4.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Run-Time Representation",
         "shortTitle": null,
         "number": "4"},
        {"title": "Other Inductive Types",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "inductive-types-runtime-special-support":
    [{"id": "inductive-types-runtime-special-support",
      "data":
      {"title": "Exceptions",
       "shortTitle": null,
       "sectionNum": "4.4.4.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Run-Time Representation",
         "shortTitle": null,
         "number": "4"},
        {"title": "Exceptions", "shortTitle": null, "number": "1"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "inductive-types-runtime-relevance":
    [{"id": "inductive-types-runtime-relevance",
      "data":
      {"title": "Relevance",
       "shortTitle": null,
       "sectionNum": "4.4.4.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Run-Time Representation",
         "shortTitle": null,
         "number": "4"},
        {"title": "Relevance", "shortTitle": null, "number": "2"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "inductive-types-logical-model":
    [{"id": "inductive-types-logical-model",
      "data":
      {"title": "Logical Model",
       "shortTitle": null,
       "sectionNum": "4.4.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Logical Model", "shortTitle": null, "number": "3"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "inductive-types-ffi":
    [{"id": "inductive-types-ffi",
      "data":
      {"title": "FFI",
       "shortTitle": null,
       "sectionNum": "4.4.4.4.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Run-Time Representation",
         "shortTitle": null,
         "number": "4"},
        {"title": "Other Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "FFI", "shortTitle": null, "number": "1"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "inductive-types":
    [{"id": "inductive-types",
      "data":
      {"title": "Inductive Types",
       "shortTitle": null,
       "sectionNum": "4.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "inductive-type-universe-levels":
    [{"id": "inductive-type-universe-levels",
      "data":
      {"title": "Universe Levels",
       "shortTitle": null,
       "sectionNum": "4.4.3.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Logical Model", "shortTitle": null, "number": "3"},
        {"title": "Well-Formedness Requirements",
         "shortTitle": null,
         "number": "2"},
        {"title": "Universe Levels", "shortTitle": null, "number": "1"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "inductive-declarations-deriving-instances":
    [{"id": "inductive-declarations-deriving-instances",
      "data":
      {"title": "Deriving Instances",
       "shortTitle": null,
       "sectionNum": "4.4.1.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Inductive Type Declarations",
         "shortTitle": null,
         "number": "1"},
        {"title": "Deriving Instances", "shortTitle": null, "number": "4"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "inductive-declarations":
    [{"id": "inductive-declarations",
      "data":
      {"title": "Inductive Type Declarations",
       "shortTitle": null,
       "sectionNum": "4.4.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Inductive Type Declarations",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "inductive-datatypes-parameters-and-indices":
    [{"id": "inductive-datatypes-parameters-and-indices",
      "data":
      {"title": "Parameters and Indices",
       "shortTitle": null,
       "sectionNum": "4.4.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Inductive Type Declarations",
         "shortTitle": null,
         "number": "1"},
        {"title": "Parameters and Indices",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "implicit-functions":
    [{"id": "implicit-functions",
      "data":
      {"title": "Implicit Parameters",
       "shortTitle": null,
       "sectionNum": "10.3.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Terms", "shortTitle": null, "number": "10"},
        {"title": "Functions", "shortTitle": null, "number": "3"},
        {"title": "Implicit Parameters", "shortTitle": null, "number": "1"}]},
      "address": "/Terms/Functions/"}],
    "if-then-else":
    [{"id": "if-then-else",
      "data":
      {"title": "Conditionals",
       "shortTitle": null,
       "sectionNum": "10.7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Terms", "shortTitle": null, "number": "10"},
        {"title": "Conditionals", "shortTitle": null, "number": "7"}]},
      "address": "/Terms/Conditionals/"}],
    "identifiers-and-resolution":
    [{"id": "identifiers-and-resolution",
      "data":
      {"title": "Identifiers",
       "shortTitle": null,
       "sectionNum": "10.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Terms", "shortTitle": null, "number": "10"},
        {"title": "Identifiers", "shortTitle": null, "number": "1"}]},
      "address": "/Terms/Identifiers/"}],
    "history-of-lean":
    [{"id": "history-of-lean",
      "data":
      {"title": "History",
       "shortTitle": null,
       "sectionNum": "1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Introduction", "shortTitle": null, "number": "1"},
        {"title": "History", "shortTitle": null, "number": "1"}]},
      "address": "/Introduction/"}],
    "hiding-terms-in-proof-states":
    [{"id": "hiding-terms-in-proof-states",
      "data":
      {"title": "Hiding Proofs and Large Terms",
       "shortTitle": null,
       "sectionNum": "13.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Reading Proof States", "shortTitle": null, "number": "2"},
        {"title": "Hiding Proofs and Large Terms",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Tactic-Proofs/Reading-Proof-States/"}],
    "hash-synth":
    [{"id": "hash-synth",
      "data":
      {"title": "Synthesizing Instances",
       "shortTitle": null,
       "sectionNum": "3.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Synthesizing Instances",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Interacting-with-Lean/"}],
    "hash-reduce":
    [{"id": "hash-reduce",
      "data":
      {"title": "Reducing Terms",
       "shortTitle": null,
       "sectionNum": "3.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Reducing Terms", "shortTitle": null, "number": "2"}]},
      "address": "/Interacting-with-Lean/"}],
    "hash-print":
    [{"id": "hash-print",
      "data":
      {"title": "Querying the Context",
       "shortTitle": null,
       "sectionNum": "3.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Querying the Context",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/Interacting-with-Lean/"}],
    "hash-guard_msgs":
    [{"id": "hash-guard_msgs",
      "data":
      {"title": "Testing Output with  #guard_msgs",
       "shortTitle": null,
       "sectionNum": "3.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Testing Output with  #guard_msgs",
         "shortTitle": null,
         "number": "6"}]},
      "address": "/Interacting-with-Lean/"}],
    "hash-eval":
    [{"id": "hash-eval",
      "data":
      {"title": "Evaluating Terms",
       "shortTitle": null,
       "sectionNum": "3.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Evaluating Terms", "shortTitle": null, "number": "1"}]},
      "address": "/Interacting-with-Lean/"}],
    "hash-check":
    [{"id": "hash-check",
      "data":
      {"title": "Checking Types",
       "shortTitle": null,
       "sectionNum": "3.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Checking Types", "shortTitle": null, "number": "3"}]},
      "address": "/Interacting-with-Lean/"}],
    "grind-tactic":
    [{"id": "grind-tactic",
      "data":
      {"title": "The  grind  tactic",
       "shortTitle": null,
       "sectionNum": "17.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"}]},
      "address": "/The--grind--tactic/"}],
    "grind-split":
    [{"id": "grind-split",
      "data":
      {"title": "Case Analysis",
       "shortTitle": null,
       "sectionNum": "17.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Case Analysis", "shortTitle": null, "number": "5"}]},
      "address": "/The--grind--tactic/Case-Analysis/"}],
    "grind-ring-field":
    [{"id": "grind-ring-field",
      "data":
      {"title": "Fields",
       "shortTitle": null,
       "sectionNum": "17.8.1.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Algebraic Solver (Commutative Rings, Fields)",
         "shortTitle": null,
         "number": "8"},
        {"title": "Solver Type Classes", "shortTitle": null, "number": "1"},
        {"title": "Algebraic Structures", "shortTitle": null, "number": "1"},
        {"title": "Fields", "shortTitle": null, "number": "1"}]},
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "grind-ring-classes":
    [{"id": "grind-ring-classes",
      "data":
      {"title": "Solver Type Classes",
       "shortTitle": null,
       "sectionNum": "17.8.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Algebraic Solver (Commutative Rings, Fields)",
         "shortTitle": null,
         "number": "8"},
        {"title": "Solver Type Classes", "shortTitle": null, "number": "1"}]},
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "grind-ring":
    [{"id": "grind-ring",
      "data":
      {"title": "Algebraic Solver (Commutative Rings, Fields)",
       "shortTitle": null,
       "sectionNum": "17.8.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Algebraic Solver (Commutative Rings, Fields)",
         "shortTitle": null,
         "number": "8"}]},
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "grind-propagation":
    [{"id": "grind-propagation",
      "data":
      {"title": "Constraint Propagation",
       "shortTitle": null,
       "sectionNum": "17.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Constraint Propagation",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/The--grind--tactic/Constraint-Propagation/"}],
    "grind-linarith-classes":
    [{"id": "grind-linarith-classes",
      "data":
      {"title": "Supporting  linarith",
       "shortTitle": null,
       "sectionNum": "17.9.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Linear Arithmetic Solver",
         "shortTitle": null,
         "number": "9"},
        {"title": "Supporting  linarith",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "grind-linarith":
    [{"id": "grind-linarith",
      "data":
      {"title": "Linear Arithmetic Solver",
       "shortTitle": null,
       "sectionNum": "17.9.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Linear Arithmetic Solver",
         "shortTitle": null,
         "number": "9"}]},
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "grind-limits":
    [{"id": "grind-limits",
      "data":
      {"title": "Resource Limits",
       "shortTitle": null,
       "sectionNum": "17.6.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "E‑matching", "shortTitle": null, "number": "6"},
        {"title": "Resource Limits", "shortTitle": null, "number": "3"}]},
      "address": "/The--grind--tactic/E___matching/"}],
    "grind-if-then-else-norm":
    [{"id": "grind-if-then-else-norm",
      "data":
      {"title": "if - then - else  Normalization",
       "shortTitle": null,
       "sectionNum": "17.10.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Bigger Examples", "shortTitle": null, "number": "10"},
        {"title": "if - then - else  Normalization",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "grind-errors":
    [{"id": "grind-errors",
      "data":
      {"title": "Error Messages",
       "shortTitle": null,
       "sectionNum": "17.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Error Messages", "shortTitle": null, "number": "1"}]},
      "address": "/The--grind--tactic/Error-Messages/"}],
    "grind-bigger-examples":
    [{"id": "grind-bigger-examples",
      "data":
      {"title": "Bigger Examples",
       "shortTitle": null,
       "sectionNum": "17.10.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Bigger Examples", "shortTitle": null, "number": "10"}]},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "generalized-field-notation":
    [{"id": "generalized-field-notation",
      "data":
      {"title": "Generalized Field Notation",
       "shortTitle": null,
       "sectionNum": "10.4.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Terms", "shortTitle": null, "number": "10"},
        {"title": "Function Application", "shortTitle": null, "number": "4"},
        {"title": "Generalized Field Notation",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Terms/Function-Application/"}],
    "functions":
    [{"id": "functions",
      "data":
      {"title": "Functions",
       "shortTitle": null,
       "sectionNum": "4.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Functions", "shortTitle": null, "number": "1"}]},
      "address": "/The-Type-System/Functions/"}],
    "function-types":
    [{"id": "function-types",
      "data":
      {"title": "Function Types",
       "shortTitle": null,
       "sectionNum": "10.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Terms", "shortTitle": null, "number": "10"},
        {"title": "Function Types", "shortTitle": null, "number": "2"}]},
      "address": "/Terms/Function-Types/"}],
    "function-terms":
    [{"id": "function-terms",
      "data":
      {"title": "Functions",
       "shortTitle": null,
       "sectionNum": "10.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Terms", "shortTitle": null, "number": "10"},
        {"title": "Functions", "shortTitle": null, "number": "3"}]},
      "address": "/Terms/Functions/"}],
    "function-extensionality":
    [{"id": "function-extensionality",
      "data":
      {"title": "Extensionality",
       "shortTitle": null,
       "sectionNum": "4.1.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Functions", "shortTitle": null, "number": "1"},
        {"title": "Extensionality", "shortTitle": null, "number": "3"}]},
      "address": "/The-Type-System/Functions/"}],
    "function-application":
    [{"id": "function-application",
      "data":
      {"title": "Function Application",
       "shortTitle": null,
       "sectionNum": "10.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Terms", "shortTitle": null, "number": "10"},
        {"title": "Function Application",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Terms/Function-Application/"}],
    "function-api":
    [{"id": "function-api",
      "data":
      {"title": "API Reference",
       "shortTitle": null,
       "sectionNum": "4.1.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Functions", "shortTitle": null, "number": "1"},
        {"title": "API Reference", "shortTitle": null, "number": "5"}]},
      "address": "/The-Type-System/Functions/"}],
    "fun-coercion":
    [{"id": "fun-coercion",
      "data":
      {"title": "Coercing to Function Types",
       "shortTitle": null,
       "sectionNum": "12.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Coercions", "shortTitle": null, "number": "12"},
        {"title": "Coercing to Function Types",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "format-repr":
    [{"id": "format-repr",
      "data":
      {"title": "Formatted Output",
       "shortTitle": null,
       "sectionNum": "3.7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Formatted Output", "shortTitle": null, "number": "7"}]},
      "address": "/Interacting-with-Lean/"}],
    "format-render":
    [{"id": "format-render",
      "data":
      {"title": "Rendering",
       "shortTitle": null,
       "sectionNum": "3.7.1.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Formatted Output", "shortTitle": null, "number": "7"},
        {"title": "Format", "shortTitle": null, "number": "1"},
        {"title": "Rendering", "shortTitle": null, "number": "6"}]},
      "address": "/Interacting-with-Lean/"}],
    "format-join":
    [{"id": "format-join",
      "data":
      {"title": "Sequences",
       "shortTitle": null,
       "sectionNum": "3.7.1.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Formatted Output", "shortTitle": null, "number": "7"},
        {"title": "Format", "shortTitle": null, "number": "1"},
        {"title": "Sequences", "shortTitle": null, "number": "3"}]},
      "address": "/Interacting-with-Lean/"}],
    "format-indent":
    [{"id": "format-indent",
      "data":
      {"title": "Indentation",
       "shortTitle": null,
       "sectionNum": "3.7.1.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Formatted Output", "shortTitle": null, "number": "7"},
        {"title": "Format", "shortTitle": null, "number": "1"},
        {"title": "Indentation", "shortTitle": null, "number": "4"}]},
      "address": "/Interacting-with-Lean/"}],
    "format-empty":
    [{"id": "format-empty",
      "data":
      {"title": "Empty Documents",
       "shortTitle": null,
       "sectionNum": "3.7.1.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Formatted Output", "shortTitle": null, "number": "7"},
        {"title": "Format", "shortTitle": null, "number": "1"},
        {"title": "Empty Documents", "shortTitle": null, "number": "2"}]},
      "address": "/Interacting-with-Lean/"}],
    "format-brackets":
    [{"id": "format-brackets",
      "data":
      {"title": "Brackets and Parentheses",
       "shortTitle": null,
       "sectionNum": "3.7.1.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Formatted Output", "shortTitle": null, "number": "7"},
        {"title": "Format", "shortTitle": null, "number": "1"},
        {"title": "Brackets and Parentheses",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/Interacting-with-Lean/"}],
    "format-api":
    [{"id": "format-api",
      "data":
      {"title": "Documents",
       "shortTitle": null,
       "sectionNum": "3.7.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Formatted Output", "shortTitle": null, "number": "7"},
        {"title": "Format", "shortTitle": null, "number": "1"},
        {"title": "Documents", "shortTitle": null, "number": "1"}]},
      "address": "/Interacting-with-Lean/"}],
    "fixed-ints":
    [{"id": "fixed-ints",
      "data":
      {"title": "Fixed-Precision Integers",
       "shortTitle": null,
       "sectionNum": "19.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Fixed-Precision Integers",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "fixed-int-runtime":
    [{"id": "fixed-int-runtime",
      "data":
      {"title": "Run-Time Representation",
       "shortTitle": null,
       "sectionNum": "19.4.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Fixed-Precision Integers",
         "shortTitle": null,
         "number": "4"},
        {"title": "Run-Time Representation",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "fixed-int-comparisons":
    [{"id": "fixed-int-comparisons",
      "data":
      {"title": "Comparisons",
       "shortTitle": null,
       "sectionNum": "19.4.4.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Fixed-Precision Integers",
         "shortTitle": null,
         "number": "4"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Comparisons", "shortTitle": null, "number": "4"}]},
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "fixed-int-arithmetic":
    [{"id": "fixed-int-arithmetic",
      "data":
      {"title": "Arithmetic",
       "shortTitle": null,
       "sectionNum": "19.4.4.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Fixed-Precision Integers",
         "shortTitle": null,
         "number": "4"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Arithmetic", "shortTitle": null, "number": "5"}]},
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "files":
    [{"id": "files",
      "data":
      {"title": "Source Files and Modules",
       "shortTitle": null,
       "sectionNum": "5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Source Files and Modules",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/Source-Files-and-Modules/"}],
    "ffi-types":
    [{"id": "ffi-types",
      "data":
      {"title": "Translating Types from Lean to C",
       "shortTitle": null,
       "sectionNum": "21.4.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Run-Time Code", "shortTitle": null, "number": "21"},
        {"title": "Foreign Function Interface",
         "shortTitle": null,
         "number": "4"},
        {"title": "The Lean ABI", "shortTitle": null, "number": "1"},
        {"title": "Translating Types from Lean to C",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Run-Time-Code/Foreign-Function-Interface/"}],
    "ffi-initialization":
    [{"id": "ffi-initialization",
      "data":
      {"title": "Initialization",
       "shortTitle": null,
       "sectionNum": "21.4.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Run-Time Code", "shortTitle": null, "number": "21"},
        {"title": "Foreign Function Interface",
         "shortTitle": null,
         "number": "4"},
        {"title": "Initialization", "shortTitle": null, "number": "2"}]},
      "address": "/Run-Time-Code/Foreign-Function-Interface/"}],
    "ffi-borrowing":
    [{"id": "ffi-borrowing",
      "data":
      {"title": "Borrowing",
       "shortTitle": null,
       "sectionNum": "21.4.1.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Run-Time Code", "shortTitle": null, "number": "21"},
        {"title": "Foreign Function Interface",
         "shortTitle": null,
         "number": "4"},
        {"title": "The Lean ABI", "shortTitle": null, "number": "1"},
        {"title": "Borrowing", "shortTitle": null, "number": "2"}]},
      "address": "/Run-Time-Code/Foreign-Function-Interface/"}],
    "ffi":
    [{"id": "ffi",
      "data":
      {"title": "Foreign Function Interface",
       "shortTitle": null,
       "sectionNum": "21.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Run-Time Code", "shortTitle": null, "number": "21"},
        {"title": "Foreign Function Interface",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Run-Time-Code/Foreign-Function-Interface/"}],
    "exception-monads":
    [{"id": "exception-monads",
      "data":
      {"title": "Exceptions",
       "shortTitle": null,
       "sectionNum": "14.5.7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Functors, Monads and  do -Notation",
         "shortTitle": null,
         "number": "14"},
        {"title": "Varieties of Monads", "shortTitle": null, "number": "5"},
        {"title": "Exceptions", "shortTitle": null, "number": "7"}]},
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "example-inductive-types":
    [{"id": "example-inductive-types",
      "data":
      {"title": "Example Inductive Types",
       "shortTitle": null,
       "sectionNum": "4.4.1.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Inductive Type Declarations",
         "shortTitle": null,
         "number": "1"},
        {"title": "Example Inductive Types",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "example-boxes":
    [{"id": "example-boxes",
      "data":
      {"title": "Examples",
       "shortTitle": null,
       "sectionNum": "1.2.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Introduction", "shortTitle": null, "number": "1"},
        {"title": "Typographical Conventions",
         "shortTitle": null,
         "number": "2"},
        {"title": "Examples", "shortTitle": null, "number": "2"}]},
      "address": "/Introduction/"}],
    "equivalence-relations":
    [{"id": "equivalence-relations",
      "data":
      {"title": "Equivalence Relations",
       "shortTitle": null,
       "sectionNum": "4.5.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Quotients", "shortTitle": null, "number": "5"},
        {"title": "Equivalence Relations",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/The-Type-System/Quotients/"}],
    "empty":
    [{"id": "empty",
      "data":
      {"title": "The Empty Type",
       "shortTitle": null,
       "sectionNum": "19.10.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "The Empty Type", "shortTitle": null, "number": "10"}]},
      "address": "/Basic-Types/The-Empty-Type/"}],
    "elan-toolchain-versions":
    [{"id": "elan-toolchain-versions",
      "data":
      {"title": "Selecting Toolchains",
       "shortTitle": null,
       "sectionNum": "22.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Managing Toolchains with Elan",
         "shortTitle": null,
         "number": "2"},
        {"title": "Selecting Toolchains",
         "shortTitle": null,
         "number": "1"}]},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "elan-toolchain-config":
    [{"id": "elan-toolchain-config",
      "data":
      {"title": "Determining the Current Toolchain",
       "shortTitle": null,
       "sectionNum": "22.2.1.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Managing Toolchains with Elan",
         "shortTitle": null,
         "number": "2"},
        {"title": "Selecting Toolchains", "shortTitle": null, "number": "1"},
        {"title": "Determining the Current Toolchain",
         "shortTitle": null,
         "number": "2"}]},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "elan-toolchain":
    [{"id": "elan-toolchain",
      "data":
      {"title": "Managing Installed Toolchains",
       "shortTitle": null,
       "sectionNum": "22.2.3.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Managing Toolchains with Elan",
         "shortTitle": null,
         "number": "2"},
        {"title": "Command-Line Interface",
         "shortTitle": null,
         "number": "3"},
        {"title": "Managing Installed Toolchains",
         "shortTitle": null,
         "number": "3"}]},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "elan-show":
    [{"id": "elan-show",
      "data":
      {"title": "Querying Toolchains",
       "shortTitle": null,
       "sectionNum": "22.2.3.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Managing Toolchains with Elan",
         "shortTitle": null,
         "number": "2"},
        {"title": "Command-Line Interface",
         "shortTitle": null,
         "number": "3"},
        {"title": "Querying Toolchains", "shortTitle": null, "number": "1"}]},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "elan-self":
    [{"id": "elan-self",
      "data":
      {"title": "Managing Elan",
       "shortTitle": null,
       "sectionNum": "22.2.3.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Managing Toolchains with Elan",
         "shortTitle": null,
         "number": "2"},
        {"title": "Command-Line Interface",
         "shortTitle": null,
         "number": "3"},
        {"title": "Managing Elan", "shortTitle": null, "number": "6"}]},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "elan-run":
    [{"id": "elan-run",
      "data":
      {"title": "Running Tools and Commands",
       "shortTitle": null,
       "sectionNum": "22.2.3.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Managing Toolchains with Elan",
         "shortTitle": null,
         "number": "2"},
        {"title": "Command-Line Interface",
         "shortTitle": null,
         "number": "3"},
        {"title": "Running Tools and Commands",
         "shortTitle": null,
         "number": "5"}]},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "elan-override":
    [{"id": "elan-override",
      "data":
      {"title": "Managing Directory Overrides",
       "shortTitle": null,
       "sectionNum": "22.2.3.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Managing Toolchains with Elan",
         "shortTitle": null,
         "number": "2"},
        {"title": "Command-Line Interface",
         "shortTitle": null,
         "number": "3"},
        {"title": "Managing Directory Overrides",
         "shortTitle": null,
         "number": "4"}]},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "elan-dir":
    [{"id": "elan-dir",
      "data":
      {"title": "Toolchain Locations",
       "shortTitle": null,
       "sectionNum": "22.2.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Managing Toolchains with Elan",
         "shortTitle": null,
         "number": "2"},
        {"title": "Toolchain Locations", "shortTitle": null, "number": "2"}]},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "elan-default":
    [{"id": "elan-default",
      "data":
      {"title": "Setting the Default Toolchain",
       "shortTitle": null,
       "sectionNum": "22.2.3.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Managing Toolchains with Elan",
         "shortTitle": null,
         "number": "2"},
        {"title": "Command-Line Interface",
         "shortTitle": null,
         "number": "3"},
        {"title": "Setting the Default Toolchain",
         "shortTitle": null,
         "number": "2"}]},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "elan-cli":
    [{"id": "elan-cli",
      "data":
      {"title": "Command-Line Interface",
       "shortTitle": null,
       "sectionNum": "22.2.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Managing Toolchains with Elan",
         "shortTitle": null,
         "number": "2"},
        {"title": "Command-Line Interface",
         "shortTitle": null,
         "number": "3"}]},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "elan-channels":
    [{"id": "elan-channels",
      "data":
      {"title": "Toolchain Identifiers",
       "shortTitle": null,
       "sectionNum": "22.2.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Managing Toolchains with Elan",
         "shortTitle": null,
         "number": "2"},
        {"title": "Selecting Toolchains", "shortTitle": null, "number": "1"},
        {"title": "Toolchain Identifiers",
         "shortTitle": null,
         "number": "1"}]},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "elan":
    [{"id": "elan",
      "data":
      {"title": "Managing Toolchains with Elan",
       "shortTitle": null,
       "sectionNum": "22.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Managing Toolchains with Elan",
         "shortTitle": null,
         "number": "2"}]},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "elaborators":
    [{"id": "elaborators",
      "data":
      {"title": "Elaborators",
       "shortTitle": null,
       "sectionNum": "20.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Elaborators", "shortTitle": null, "number": "6"}]},
      "address": "/Notations-and-Macros/Elaborators/"}],
    "elaboration-results":
    [{"id": "elaboration-results",
      "data":
      {"title": "Elaboration Results",
       "shortTitle": null,
       "sectionNum": "2.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Elaboration and Compilation",
         "shortTitle": null,
         "number": "2"},
        {"title": "Elaboration Results", "shortTitle": null, "number": "4"}]},
      "address": "/Elaboration-and-Compilation/"}],
    "elab-as-course-of-values":
    [{"id": "elab-as-course-of-values",
      "data":
      {"title": "Elaboration Using Course-of-Values Recursion",
       "shortTitle": null,
       "sectionNum": "7.6.2.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Recursive Definitions", "shortTitle": null, "number": "6"},
        {"title": "Structural Recursion", "shortTitle": null, "number": "2"},
        {"title": "Elaboration Using Course-of-Values Recursion",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Definitions/Recursive-Definitions/"}],
    "e-matching-patterns":
    [{"id": "e-matching-patterns",
      "data":
      {"title": "Patterns",
       "shortTitle": null,
       "sectionNum": "17.6.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "E‑matching", "shortTitle": null, "number": "6"},
        {"title": "Patterns", "shortTitle": null, "number": "1"}]},
      "address": "/The--grind--tactic/E___matching/"}],
    "e-matching":
    [{"id": "e-matching",
      "data":
      {"title": "E‑matching",
       "shortTitle": null,
       "sectionNum": "17.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "E‑matching", "shortTitle": null, "number": "6"}]},
      "address": "/The--grind--tactic/E___matching/"}],
    "do-notation":
    [{"id": "do-notation",
      "data":
      {"title": "do -Notation",
       "shortTitle": null,
       "sectionNum": "14.3.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Functors, Monads and  do -Notation",
         "shortTitle": null,
         "number": "14"},
        {"title": "Syntax", "shortTitle": null, "number": "3"},
        {"title": "do -Notation", "shortTitle": null, "number": "2"}]},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "do-control-structures":
    [{"id": "do-control-structures",
      "data":
      {"title": "Control Structures",
       "shortTitle": null,
       "sectionNum": "14.3.2.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Functors, Monads and  do -Notation",
         "shortTitle": null,
         "number": "14"},
        {"title": "Syntax", "shortTitle": null, "number": "3"},
        {"title": "do -Notation", "shortTitle": null, "number": "2"},
        {"title": "Control Structures", "shortTitle": null, "number": "4"}]},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "deriving-instances":
    [{"id": "deriving-instances",
      "data":
      {"title": "Deriving Instances",
       "shortTitle": null,
       "sectionNum": "11.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Deriving Instances", "shortTitle": null, "number": "4"}]},
      "address": "/Type-Classes/Deriving-Instances/"}],
    "deriving-handlers":
    [{"id": "deriving-handlers",
      "data":
      {"title": "Deriving Handlers",
       "shortTitle": null,
       "sectionNum": "11.4.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Deriving Instances", "shortTitle": null, "number": "4"},
        {"title": "Deriving Handlers", "shortTitle": null, "number": "1"}]},
      "address": "/Type-Classes/Deriving-Instances/"}],
    "dependency-licenses":
    [{"id": "dependency-licenses",
      "data":
      {"title": "Open-Source Licenses",
       "shortTitle": null,
       "sectionNum": null,
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Introduction", "shortTitle": null, "number": "1"},
        {"title": "Open-Source Licenses",
         "shortTitle": null,
         "number": null}]},
      "address": "/Introduction/"}],
    "delaborators":
    [{"id": "delaborators",
      "data":
      {"title": "Delaborators",
       "shortTitle": null,
       "sectionNum": "20.7.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Extending Lean's Output",
         "shortTitle": null,
         "number": "7"},
        {"title": "Delaborators", "shortTitle": null, "number": "2"}]},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "definitions":
    [{"id": "definitions",
      "data":
      {"title": "Definitions",
       "shortTitle": null,
       "sectionNum": "7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"}]},
      "address": "/Definitions/"}],
    "defining-macros":
    [{"id": "defining-macros",
      "data":
      {"title": "Defining Macros",
       "shortTitle": null,
       "sectionNum": "20.5.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Macros", "shortTitle": null, "number": "5"},
        {"title": "Defining Macros", "shortTitle": null, "number": "5"}]},
      "address": "/Notations-and-Macros/Macros/"}],
    "default-instances":
    [{"id": "default-instances",
      "data":
      {"title": "Default Instances",
       "shortTitle": null,
       "sectionNum": "11.2.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Instance Declarations", "shortTitle": null, "number": "2"},
        {"title": "Default Instances", "shortTitle": null, "number": "4"}]},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "default-instance-synth":
    [{"id": "default-instance-synth",
      "data":
      {"title": "Default Instances",
       "shortTitle": null,
       "sectionNum": "11.3.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Instance Synthesis", "shortTitle": null, "number": "3"},
        {"title": "Default Instances", "shortTitle": null, "number": "6"}]},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "declaration-modifiers":
    [{"id": "declaration-modifiers",
      "data":
      {"title": "Modifiers",
       "shortTitle": null,
       "sectionNum": "7.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Modifiers", "shortTitle": null, "number": "1"}]},
      "address": "/Definitions/Modifiers/"}],
    "decidable-propositions":
    [{"id": "decidable-propositions",
      "data":
      {"title": "Decidability",
       "shortTitle": null,
       "sectionNum": "11.5.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Basic Classes", "shortTitle": null, "number": "5"},
        {"title": "Decidability", "shortTitle": null, "number": "4"}]},
      "address": "/Type-Classes/Basic-Classes/"}],
    "cutsat-qlia":
    [{"id": "cutsat-qlia",
      "data":
      {"title": "Rational Solutions",
       "shortTitle": null,
       "sectionNum": "17.7.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Linear Integer Arithmetic",
         "shortTitle": null,
         "number": "7"},
        {"title": "Rational Solutions", "shortTitle": null, "number": "1"}]},
      "address": "/The--grind--tactic/Linear-Integer-Arithmetic/"}],
    "cutsat-mbtc":
    [{"id": "cutsat-mbtc",
      "data":
      {"title": "Propagating Information",
       "shortTitle": null,
       "sectionNum": "17.7.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Linear Integer Arithmetic",
         "shortTitle": null,
         "number": "7"},
        {"title": "Propagating Information",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/The--grind--tactic/Linear-Integer-Arithmetic/"}],
    "cutsat-ToInt":
    [{"id": "cutsat-ToInt",
      "data":
      {"title": "Other Types",
       "shortTitle": null,
       "sectionNum": "17.7.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Linear Integer Arithmetic",
         "shortTitle": null,
         "number": "7"},
        {"title": "Other Types", "shortTitle": null, "number": "6"}]},
      "address": "/The--grind--tactic/Linear-Integer-Arithmetic/"}],
    "cutsat":
    [{"id": "cutsat",
      "data":
      {"title": "Linear Integer Arithmetic",
       "shortTitle": null,
       "sectionNum": "17.7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Linear Integer Arithmetic",
         "shortTitle": null,
         "number": "7"}]},
      "address": "/The--grind--tactic/Linear-Integer-Arithmetic/"}],
    "custom-tactics":
    [{"id": "custom-tactics",
      "data":
      {"title": "Custom Tactics",
       "shortTitle": null,
       "sectionNum": "13.8.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Custom Tactics", "shortTitle": null, "number": "8"}]},
      "address": "/Tactic-Proofs/Custom-Tactics/"}],
    "currying":
    [{"id": "currying",
      "data":
      {"title": "Currying",
       "shortTitle": null,
       "sectionNum": "4.1.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Functions", "shortTitle": null, "number": "1"},
        {"title": "Currying", "shortTitle": null, "number": "2"}]},
      "address": "/The-Type-System/Functions/"}],
    "conv-simp":
    [{"id": "conv-simp",
      "data":
      {"title": "Simplification",
       "shortTitle": null,
       "sectionNum": "13.6.4.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Targeted Rewriting with  conv",
         "shortTitle": null,
         "number": "6"},
        {"title": "Changing the Goal", "shortTitle": null, "number": "4"},
        {"title": "Simplification", "shortTitle": null, "number": "2"}]},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "conv-rw":
    [{"id": "conv-rw",
      "data":
      {"title": "Rewriting",
       "shortTitle": null,
       "sectionNum": "13.6.4.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Targeted Rewriting with  conv",
         "shortTitle": null,
         "number": "6"},
        {"title": "Changing the Goal", "shortTitle": null, "number": "4"},
        {"title": "Rewriting", "shortTitle": null, "number": "3"}]},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "conv-reduction":
    [{"id": "conv-reduction",
      "data":
      {"title": "Reduction",
       "shortTitle": null,
       "sectionNum": "13.6.4.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Targeted Rewriting with  conv",
         "shortTitle": null,
         "number": "6"},
        {"title": "Changing the Goal", "shortTitle": null, "number": "4"},
        {"title": "Reduction", "shortTitle": null, "number": "1"}]},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "conv-other":
    [{"id": "conv-other",
      "data":
      {"title": "Other",
       "shortTitle": null,
       "sectionNum": "13.6.7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Targeted Rewriting with  conv",
         "shortTitle": null,
         "number": "6"},
        {"title": "Other", "shortTitle": null, "number": "7"}]},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "conv-nested":
    [{"id": "conv-nested",
      "data":
      {"title": "Nested Tactics",
       "shortTitle": null,
       "sectionNum": "13.6.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Targeted Rewriting with  conv",
         "shortTitle": null,
         "number": "6"},
        {"title": "Nested Tactics", "shortTitle": null, "number": "5"}]},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "conv-nav":
    [{"id": "conv-nav",
      "data":
      {"title": "Navigation",
       "shortTitle": null,
       "sectionNum": "13.6.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Targeted Rewriting with  conv",
         "shortTitle": null,
         "number": "6"},
        {"title": "Navigation", "shortTitle": null, "number": "3"}]},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "conv-goals":
    [{"id": "conv-goals",
      "data":
      {"title": "Goal Selection",
       "shortTitle": null,
       "sectionNum": "13.6.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Targeted Rewriting with  conv",
         "shortTitle": null,
         "number": "6"},
        {"title": "Goal Selection", "shortTitle": null, "number": "2"}]},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "conv-debug":
    [{"id": "conv-debug",
      "data":
      {"title": "Debugging Utilities",
       "shortTitle": null,
       "sectionNum": "13.6.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Targeted Rewriting with  conv",
         "shortTitle": null,
         "number": "6"},
        {"title": "Debugging Utilities", "shortTitle": null, "number": "6"}]},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "conv-control":
    [{"id": "conv-control",
      "data":
      {"title": "Control Structures",
       "shortTitle": null,
       "sectionNum": "13.6.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Targeted Rewriting with  conv",
         "shortTitle": null,
         "number": "6"},
        {"title": "Control Structures", "shortTitle": null, "number": "1"}]},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "conv-change":
    [{"id": "conv-change",
      "data":
      {"title": "Changing the Goal",
       "shortTitle": null,
       "sectionNum": "13.6.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Targeted Rewriting with  conv",
         "shortTitle": null,
         "number": "6"},
        {"title": "Changing the Goal", "shortTitle": null, "number": "4"}]},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "conv":
    [{"id": "conv",
      "data":
      {"title": "Targeted Rewriting with  conv",
       "shortTitle": null,
       "sectionNum": "13.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Targeted Rewriting with  conv",
         "shortTitle": null,
         "number": "6"}]},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "congruence-closure":
    [{"id": "congruence-closure",
      "data":
      {"title": "Congruence Closure",
       "shortTitle": null,
       "sectionNum": "17.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Congruence Closure", "shortTitle": null, "number": "3"}]},
      "address": "/The--grind--tactic/Congruence-Closure/"}],
    "concurrency":
    [{"id": "concurrency",
      "data":
      {"title": "Tasks and Threads",
       "shortTitle": null,
       "sectionNum": "15.11.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "IO", "shortTitle": null, "number": "15"},
        {"title": "Tasks and Threads", "shortTitle": null, "number": "11"}]},
      "address": "/IO/Tasks-and-Threads/"}],
    "comments":
    [{"id": "comments",
      "data":
      {"title": "Comments",
       "shortTitle": null,
       "sectionNum": "5.2.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Source Files and Modules",
         "shortTitle": null,
         "number": "5"},
        {"title": "Concrete Syntax", "shortTitle": null, "number": "2"},
        {"title": "Comments", "shortTitle": null, "number": "2"}]},
      "address": "/Source-Files-and-Modules/"}],
    "commands":
    [{"id": "commands",
      "data":
      {"title": "Commands",
       "shortTitle": null,
       "sectionNum": "5.3.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Source Files and Modules",
         "shortTitle": null,
         "number": "5"},
        {"title": "Structure", "shortTitle": null, "number": "3"},
        {"title": "Commands", "shortTitle": null, "number": "2"}]},
      "address": "/Source-Files-and-Modules/"}],
    "coercions":
    [{"id": "coercions",
      "data":
      {"title": "Coercions",
       "shortTitle": null,
       "sectionNum": "12.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Coercions", "shortTitle": null, "number": "12"}]},
      "address": "/Coercions/"}],
    "coercion-unfold-impl":
    [{"id": "coercion-unfold-impl",
      "data":
      {"title": "Unfolding Coercions",
       "shortTitle": null,
       "sectionNum": "12.5.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Coercions", "shortTitle": null, "number": "12"},
        {"title": "Implementation Details",
         "shortTitle": null,
         "number": "5"},
        {"title": "Unfolding Coercions", "shortTitle": null, "number": "1"}]},
      "address": "/Coercions/Implementation-Details/"}],
    "coercion-insertion":
    [{"id": "coercion-insertion",
      "data":
      {"title": "Coercion Insertion",
       "shortTitle": null,
       "sectionNum": "12.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Coercions", "shortTitle": null, "number": "12"},
        {"title": "Coercion Insertion", "shortTitle": null, "number": "1"}]},
      "address": "/Coercions/Coercion-Insertion/"}],
    "coercion-impl-details":
    [{"id": "coercion-impl-details",
      "data":
      {"title": "Implementation Details",
       "shortTitle": null,
       "sectionNum": "12.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Coercions", "shortTitle": null, "number": "12"},
        {"title": "Implementation Details",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/Coercions/Implementation-Details/"}],
    "coercion-impl":
    [{"id": "coercion-impl",
      "data":
      {"title": "Implementing Coercions",
       "shortTitle": null,
       "sectionNum": "12.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Coercions", "shortTitle": null, "number": "12"},
        {"title": "Coercing Between Types",
         "shortTitle": null,
         "number": "2"},
        {"title": "Implementing Coercions",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "coercion-chain-impl":
    [{"id": "coercion-chain-impl",
      "data":
      {"title": "Coercion Chaining",
       "shortTitle": null,
       "sectionNum": "12.5.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Coercions", "shortTitle": null, "number": "12"},
        {"title": "Implementation Details",
         "shortTitle": null,
         "number": "5"},
        {"title": "Coercion Chaining", "shortTitle": null, "number": "2"}]},
      "address": "/Coercions/Implementation-Details/"}],
    "code-samples":
    [{"id": "code-samples",
      "data":
      {"title": "Lean Code",
       "shortTitle": null,
       "sectionNum": "1.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Introduction", "shortTitle": null, "number": "1"},
        {"title": "Typographical Conventions",
         "shortTitle": null,
         "number": "2"},
        {"title": "Lean Code", "shortTitle": null, "number": "1"}]},
      "address": "/Introduction/"}],
    "code-distribution":
    [{"id": "code-distribution",
      "data":
      {"title": "Packages, Libraries, and Targets",
       "shortTitle": null,
       "sectionNum": "5.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Source Files and Modules",
         "shortTitle": null,
         "number": "5"},
        {"title": "Packages, Libraries, and Targets",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/Source-Files-and-Modules/"}],
    "closest-do-block":
    [{"id": "closest-do-block",
      "data":
      {"title": "Identifying  do  Blocks",
       "shortTitle": null,
       "sectionNum": "14.3.2.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Functors, Monads and  do -Notation",
         "shortTitle": null,
         "number": "14"},
        {"title": "Syntax", "shortTitle": null, "number": "3"},
        {"title": "do -Notation", "shortTitle": null, "number": "2"},
        {"title": "Identifying  do  Blocks",
         "shortTitle": null,
         "number": "6"}]},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "class-output-parameters":
    [{"id": "class-output-parameters",
      "data":
      {"title": "Output Parameters",
       "shortTitle": null,
       "sectionNum": "11.3.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Instance Synthesis", "shortTitle": null, "number": "3"},
        {"title": "Output Parameters", "shortTitle": null, "number": "5"}]},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "class-inductive-instances":
    [{"id": "class-inductive-instances",
      "data":
      {"title": "Instances of  class inductive s",
       "shortTitle": null,
       "sectionNum": "11.2.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Instance Declarations", "shortTitle": null, "number": "2"},
        {"title": "Instances of  class inductive s",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "class-abbrev":
    [{"id": "class-abbrev",
      "data":
      {"title": "Class Abbreviations",
       "shortTitle": null,
       "sectionNum": "11.1.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Class Declarations", "shortTitle": null, "number": "1"},
        {"title": "Class Abbreviations", "shortTitle": null, "number": "2"}]},
      "address": "/Type-Classes/Class-Declarations/"}],
    "class inductive":
    [{"id": "class-inductive",
      "data":
      {"title": "Sum Types as Classes",
       "shortTitle": null,
       "sectionNum": "11.1.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Class Declarations", "shortTitle": null, "number": "1"},
        {"title": "Sum Types as Classes",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Type-Classes/Class-Declarations/"}],
    "class":
    [{"id": "class",
      "data":
      {"title": "Class Declarations",
       "shortTitle": null,
       "sectionNum": "11.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Class Declarations", "shortTitle": null, "number": "1"}]},
      "address": "/Type-Classes/Class-Declarations/"}],
    "char-syntax":
    [{"id": "char-syntax",
      "data":
      {"title": "Syntax",
       "shortTitle": null,
       "sectionNum": "19.7.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Characters", "shortTitle": null, "number": "7"},
        {"title": "Syntax", "shortTitle": null, "number": "3"}]},
      "address": "/Basic-Types/Characters/"}],
    "char-runtime":
    [{"id": "char-runtime",
      "data":
      {"title": "Run-Time Representation",
       "shortTitle": null,
       "sectionNum": "19.7.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Characters", "shortTitle": null, "number": "7"},
        {"title": "Run-Time Representation",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Basic-Types/Characters/"}],
    "char-model":
    [{"id": "char-model",
      "data":
      {"title": "Logical Model",
       "shortTitle": null,
       "sectionNum": "19.7.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Characters", "shortTitle": null, "number": "7"},
        {"title": "Logical Model", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Characters/"}],
    "char-api-classes":
    [{"id": "char-api-classes",
      "data":
      {"title": "Character Classes",
       "shortTitle": null,
       "sectionNum": "19.7.4.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Characters", "shortTitle": null, "number": "7"},
        {"title": "API Reference", "shortTitle": null, "number": "4"},
        {"title": "Character Classes", "shortTitle": null, "number": "2"}]},
      "address": "/Basic-Types/Characters/"}],
    "char-api":
    [{"id": "char-api",
      "data":
      {"title": "API Reference",
       "shortTitle": null,
       "sectionNum": "19.7.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Characters", "shortTitle": null, "number": "7"},
        {"title": "API Reference", "shortTitle": null, "number": "4"}]},
      "address": "/Basic-Types/Characters/"}],
    "by":
    [{"id": "by",
      "data":
      {"title": "Running Tactics",
       "shortTitle": null,
       "sectionNum": "13.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Running Tactics", "shortTitle": null, "number": "1"}]},
      "address": "/Tactic-Proofs/Running-Tactics/"}],
    "build-tools-and-distribution":
    [{"id": "build-tools-and-distribution",
      "data":
      {"title": "Build Tools and Distribution",
       "shortTitle": null,
       "sectionNum": "22.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"}]},
      "address": "/Build-Tools-and-Distribution/"}],
    "bracketed-parameter-syntax":
    [{"id": "bracketed-parameter-syntax",
      "data":
      {"title": "Bracketed Parameter Bindings",
       "shortTitle": null,
       "sectionNum": "7.2.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Headers and Signatures",
         "shortTitle": null,
         "number": "2"},
        {"title": "Bracketed Parameter Bindings",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "boxing":
    [{"id": "boxing",
      "data":
      {"title": "Boxing",
       "shortTitle": null,
       "sectionNum": "21.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Run-Time Code", "shortTitle": null, "number": "21"},
        {"title": "Boxing", "shortTitle": null, "number": "1"}]},
      "address": "/Run-Time-Code/Boxing/"}],
    "bound-variable-name-hints":
    [{"id": "bound-variable-name-hints",
      "data":
      {"title": "Naming Bound Variables",
       "shortTitle": null,
       "sectionNum": "13.7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Tactic Proofs", "shortTitle": null, "number": "13"},
        {"title": "Naming Bound Variables",
         "shortTitle": null,
         "number": "7"}]},
      "address": "/Tactic-Proofs/Naming-Bound-Variables/"}],
    "basic-types":
    [{"id": "basic-types",
      "data":
      {"title": "Basic Types",
       "shortTitle": null,
       "sectionNum": "19.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"}]},
      "address": "/Basic-Types/"}],
    "basic-props":
    [{"id": "basic-props",
      "data":
      {"title": "Basic Propositions",
       "shortTitle": null,
       "sectionNum": "18.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Propositions", "shortTitle": null, "number": "18"}]},
      "address": "/Basic-Propositions/"}],
    "basic-classes":
    [{"id": "basic-classes",
      "data":
      {"title": "Basic Classes",
       "shortTitle": null,
       "sectionNum": "11.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Type Classes", "shortTitle": null, "number": "11"},
        {"title": "Basic Classes", "shortTitle": null, "number": "5"}]},
      "address": "/Type-Classes/Basic-Classes/"}],
    "axioms":
    [{"id": "axioms",
      "data":
      {"title": "Axioms",
       "shortTitle": null,
       "sectionNum": "8.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Axioms", "shortTitle": null, "number": "8"}]},
      "address": "/Axioms/"}],
    "axiom-reduction":
    [{"id": "axiom-reduction",
      "data":
      {"title": "Reduction",
       "shortTitle": null,
       "sectionNum": "8.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Axioms", "shortTitle": null, "number": "8"},
        {"title": "Reduction", "shortTitle": null, "number": "3"}]},
      "address": "/Axioms/"}],
    "axiom-declarations":
    [{"id": "axiom-declarations",
      "data":
      {"title": "Axiom Declarations",
       "shortTitle": null,
       "sectionNum": "8.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Axioms", "shortTitle": null, "number": "8"},
        {"title": "Axiom Declarations", "shortTitle": null, "number": "1"}]},
      "address": "/Axioms/"}],
    "axiom-consistency":
    [{"id": "axiom-consistency",
      "data":
      {"title": "Consistency",
       "shortTitle": null,
       "sectionNum": "8.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Axioms", "shortTitle": null, "number": "8"},
        {"title": "Consistency", "shortTitle": null, "number": "2"}]},
      "address": "/Axioms/"}],
    "automatic-toolchain-updates":
    [{"id": "automatic-toolchain-updates",
      "data":
      {"title": "Automatic Toolchain Updates",
       "shortTitle": null,
       "sectionNum": "22.1.2.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Build Tools and Distribution",
         "shortTitle": null,
         "number": "22"},
        {"title": "Lake", "shortTitle": null, "number": "1"},
        {"title": "Command-Line Interface",
         "shortTitle": null,
         "number": "2"},
        {"title": "Automatic Toolchain Updates",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "automatic-implicit-parameters":
    [{"id": "automatic-implicit-parameters",
      "data":
      {"title": "Automatic Implicit Parameters",
       "shortTitle": null,
       "sectionNum": "7.2.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Definitions", "shortTitle": null, "number": "7"},
        {"title": "Headers and Signatures",
         "shortTitle": null,
         "number": "2"},
        {"title": "Automatic Implicit Parameters",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "attributes":
    [{"id": "attributes",
      "data":
      {"title": "Attributes",
       "shortTitle": null,
       "sectionNum": "9.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Attributes", "shortTitle": null, "number": "9"}]},
      "address": "/Attributes/"}],
    "array-syntax":
    [{"id": "array-syntax",
      "data":
      {"title": "Syntax",
       "shortTitle": null,
       "sectionNum": "19.16.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Arrays", "shortTitle": null, "number": "16"},
        {"title": "Syntax", "shortTitle": null, "number": "3"}]},
      "address": "/Basic-Types/Arrays/"}],
    "array-runtime":
    [{"id": "array-runtime",
      "data":
      {"title": "Run-Time Representation",
       "shortTitle": null,
       "sectionNum": "19.16.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Arrays", "shortTitle": null, "number": "16"},
        {"title": "Run-Time Representation",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Basic-Types/Arrays/"}],
    "array-performance":
    [{"id": "array-performance",
      "data":
      {"title": "Performance Notes",
       "shortTitle": null,
       "sectionNum": "19.16.2.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Arrays", "shortTitle": null, "number": "16"},
        {"title": "Run-Time Representation",
         "shortTitle": null,
         "number": "2"},
        {"title": "Performance Notes", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Arrays/"}],
    "array-ffi":
    [{"id": "array-ffi",
      "data":
      {"title": "FFI",
       "shortTitle": null,
       "sectionNum": "19.16.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Arrays", "shortTitle": null, "number": "16"},
        {"title": "FFI", "shortTitle": null, "number": "6"}]},
      "address": "/Basic-Types/Arrays/"}],
    "array-api":
    [{"id": "array-api",
      "data":
      {"title": "API Reference",
       "shortTitle": null,
       "sectionNum": "19.16.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Arrays", "shortTitle": null, "number": "16"},
        {"title": "API Reference", "shortTitle": null, "number": "4"}]},
      "address": "/Basic-Types/Arrays/"}],
    "anonymous-constructor-syntax":
    [{"id": "anonymous-constructor-syntax",
      "data":
      {"title": "Anonymous Constructor Syntax",
       "shortTitle": null,
       "sectionNum": "4.4.1.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The Type System", "shortTitle": null, "number": "4"},
        {"title": "Inductive Types", "shortTitle": null, "number": "4"},
        {"title": "Inductive Type Declarations",
         "shortTitle": null,
         "number": "1"},
        {"title": "Anonymous Constructor Syntax",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Unexpanders":
    [{"id": "Unexpanders",
      "data":
      {"title": "Unexpanders",
       "shortTitle": null,
       "sectionNum": "20.7.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Notations and Macros", "shortTitle": null, "number": "20"},
        {"title": "Extending Lean's Output",
         "shortTitle": null,
         "number": "7"},
        {"title": "Unexpanders", "shortTitle": null, "number": "1"}]},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "UIP":
    [{"id": "UIP",
      "data":
      {"title": "Uniqueness of Equality Proofs",
       "shortTitle": null,
       "sectionNum": "18.4.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Propositions", "shortTitle": null, "number": "18"},
        {"title": "Propositional Equality",
         "shortTitle": null,
         "number": "4"},
        {"title": "Uniqueness of Equality Proofs",
         "shortTitle": null,
         "number": "1"}]},
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "TreeSet":
    [{"id": "TreeSet",
      "data":
      {"title": "Tree-Based Sets",
       "shortTitle": null,
       "sectionNum": "19.17.10.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Maps and Sets", "shortTitle": null, "number": "17"},
        {"title": "Tree-Based Sets", "shortTitle": null, "number": "10"}]},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "TreeMap":
    [{"id": "TreeMap",
      "data":
      {"title": "Tree-Based Maps",
       "shortTitle": null,
       "sectionNum": "19.17.8.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Maps and Sets", "shortTitle": null, "number": "17"},
        {"title": "Tree-Based Maps", "shortTitle": null, "number": "8"}]},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Thunk-runtime":
    [{"id": "Thunk-runtime",
      "data":
      {"title": "Runtime Representation",
       "shortTitle": null,
       "sectionNum": "19.19.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Lazy Computations", "shortTitle": null, "number": "19"},
        {"title": "Runtime Representation",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "Thunk-model":
    [{"id": "Thunk-model",
      "data":
      {"title": "Logical Model",
       "shortTitle": null,
       "sectionNum": "19.19.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Lazy Computations", "shortTitle": null, "number": "19"},
        {"title": "Logical Model", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "Thunk-coercions":
    [{"id": "Thunk-coercions",
      "data":
      {"title": "Coercions",
       "shortTitle": null,
       "sectionNum": "19.19.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Lazy Computations", "shortTitle": null, "number": "19"},
        {"title": "Coercions", "shortTitle": null, "number": "3"}]},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "Thunk-api":
    [{"id": "Thunk-api",
      "data":
      {"title": "API Reference",
       "shortTitle": null,
       "sectionNum": "19.19.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Lazy Computations", "shortTitle": null, "number": "19"},
        {"title": "API Reference", "shortTitle": null, "number": "4"}]},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "Thunk":
    [{"id": "Thunk",
      "data":
      {"title": "Lazy Computations",
       "shortTitle": null,
       "sectionNum": "19.19.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Lazy Computations", "shortTitle": null, "number": "19"}]},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "Subtype":
    [{"id": "Subtype",
      "data":
      {"title": "Subtypes",
       "shortTitle": null,
       "sectionNum": "19.18.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Subtypes", "shortTitle": null, "number": "18"}]},
      "address": "/Basic-Types/Subtypes/"}],
    "String":
    [{"id": "String",
      "data":
      {"title": "Strings",
       "shortTitle": null,
       "sectionNum": "19.8.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Strings", "shortTitle": null, "number": "8"}]},
      "address": "/Basic-Types/Strings/"}],
    "ReprAtom":
    [{"id": "ReprAtom",
      "data":
      {"title": "Atomic Types",
       "shortTitle": null,
       "sectionNum": "3.7.2.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Formatted Output", "shortTitle": null, "number": "7"},
        {"title": "Repr", "shortTitle": null, "number": "2"},
        {"title": "Atomic Types", "shortTitle": null, "number": "2"}]},
      "address": "/Interacting-with-Lean/"}],
    "NoNatZeroDivisors":
    [{"id": "NoNatZeroDivisors",
      "data":
      {"title": "Natural Number Zero Divisors",
       "shortTitle": null,
       "sectionNum": "17.8.1.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Algebraic Solver (Commutative Rings, Fields)",
         "shortTitle": null,
         "number": "8"},
        {"title": "Solver Type Classes", "shortTitle": null, "number": "1"},
        {"title": "Natural Number Zero Divisors",
         "shortTitle": null,
         "number": "3"}]},
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Nat":
    [{"id": "Nat",
      "data":
      {"title": "Natural Numbers",
       "shortTitle": null,
       "sectionNum": "19.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Natural Numbers", "shortTitle": null, "number": "1"}]},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "List":
    [{"id": "List",
      "data":
      {"title": "Linked Lists",
       "shortTitle": null,
       "sectionNum": "19.15.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Linked Lists", "shortTitle": null, "number": "15"}]},
      "address": "/Basic-Types/Linked-Lists/"}],
    "Int":
    [{"id": "Int",
      "data":
      {"title": "Integers",
       "shortTitle": null,
       "sectionNum": "19.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Integers", "shortTitle": null, "number": "2"}]},
      "address": "/Basic-Types/Integers/"}],
    "HashSet":
    [{"id": "HashSet",
      "data":
      {"title": "Hash Sets",
       "shortTitle": null,
       "sectionNum": "19.17.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Maps and Sets", "shortTitle": null, "number": "17"},
        {"title": "Hash Sets", "shortTitle": null, "number": "6"}]},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "HashMap":
    [{"id": "HashMap",
      "data":
      {"title": "Hash Maps",
       "shortTitle": null,
       "sectionNum": "19.17.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Maps and Sets", "shortTitle": null, "number": "17"},
        {"title": "Hash Maps", "shortTitle": null, "number": "2"}]},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "HEq":
    [{"id": "HEq",
      "data":
      {"title": "Heterogeneous Equality",
       "shortTitle": null,
       "sectionNum": "18.4.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Propositions", "shortTitle": null, "number": "18"},
        {"title": "Propositional Equality",
         "shortTitle": null,
         "number": "4"},
        {"title": "Heterogeneous Equality",
         "shortTitle": null,
         "number": "2"}]},
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "Format":
    [{"id": "Format",
      "data":
      {"title": "Format",
       "shortTitle": null,
       "sectionNum": "3.7.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Interacting with Lean", "shortTitle": null, "number": "3"},
        {"title": "Formatted Output", "shortTitle": null, "number": "7"},
        {"title": "Format", "shortTitle": null, "number": "1"}]},
      "address": "/Interacting-with-Lean/"}],
    "Float-api":
    [{"id": "Float-api",
      "data":
      {"title": "API Reference",
       "shortTitle": null,
       "sectionNum": "19.6.2.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Floating-Point Numbers",
         "shortTitle": null,
         "number": "6"},
        {"title": "API Reference", "shortTitle": null, "number": "2"}]},
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float":
    [{"id": "Float",
      "data":
      {"title": "Floating-Point Numbers",
       "shortTitle": null,
       "sectionNum": "19.6.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Floating-Point Numbers",
         "shortTitle": null,
         "number": "6"}]},
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Fin":
    [{"id": "Fin",
      "data":
      {"title": "Finite Natural Numbers",
       "shortTitle": null,
       "sectionNum": "19.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Finite Natural Numbers",
         "shortTitle": null,
         "number": "3"}]},
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "ExtHashSet":
    [{"id": "ExtHashSet",
      "data":
      {"title": "Extensional Hash Sets",
       "shortTitle": null,
       "sectionNum": "19.17.7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Maps and Sets", "shortTitle": null, "number": "17"},
        {"title": "Extensional Hash Sets",
         "shortTitle": null,
         "number": "7"}]},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "ExtHashMap":
    [{"id": "ExtHashMap",
      "data":
      {"title": "Extensional Hash Maps",
       "shortTitle": null,
       "sectionNum": "19.17.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Maps and Sets", "shortTitle": null, "number": "17"},
        {"title": "Extensional Hash Maps",
         "shortTitle": null,
         "number": "4"}]},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "ExtDHashMap":
    [{"id": "ExtDHashMap",
      "data":
      {"title": "Extensional Dependent Hash Maps",
       "shortTitle": null,
       "sectionNum": "19.17.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Maps and Sets", "shortTitle": null, "number": "17"},
        {"title": "Extensional Dependent Hash Maps",
         "shortTitle": null,
         "number": "5"}]},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "DTreeMap":
    [{"id": "DTreeMap",
      "data":
      {"title": "Dependent Tree-Based Maps",
       "shortTitle": null,
       "sectionNum": "19.17.9.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Maps and Sets", "shortTitle": null, "number": "17"},
        {"title": "Dependent Tree-Based Maps",
         "shortTitle": null,
         "number": "9"}]},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "DHashMap":
    [{"id": "DHashMap",
      "data":
      {"title": "Dependent Hash Maps",
       "shortTitle": null,
       "sectionNum": "19.17.3.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Maps and Sets", "shortTitle": null, "number": "17"},
        {"title": "Dependent Hash Maps", "shortTitle": null, "number": "3"}]},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Char":
    [{"id": "Char",
      "data":
      {"title": "Characters",
       "shortTitle": null,
       "sectionNum": "19.7.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Characters", "shortTitle": null, "number": "7"}]},
      "address": "/Basic-Types/Characters/"}],
    "BitVec-automation":
    [{"id": "BitVec-automation",
      "data":
      {"title": "Automation",
       "shortTitle": null,
       "sectionNum": "19.5.4.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Bitvectors", "shortTitle": null, "number": "5"},
        {"title": "Automation", "shortTitle": null, "number": "4"}]},
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec-api":
    [{"id": "BitVec-api",
      "data":
      {"title": "API Reference",
       "shortTitle": null,
       "sectionNum": "19.5.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Bitvectors", "shortTitle": null, "number": "5"},
        {"title": "API Reference", "shortTitle": null, "number": "5"}]},
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec":
    [{"id": "BitVec",
      "data":
      {"title": "Bitvectors",
       "shortTitle": null,
       "sectionNum": "19.5.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Bitvectors", "shortTitle": null, "number": "5"}]},
      "address": "/Basic-Types/Bitvectors/"}],
    "Array":
    [{"id": "Array",
      "data":
      {"title": "Arrays",
       "shortTitle": null,
       "sectionNum": "19.16.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "Basic Types", "shortTitle": null, "number": "19"},
        {"title": "Arrays", "shortTitle": null, "number": "16"}]},
      "address": "/Basic-Types/Arrays/"}],
    "AddRightCancel":
    [{"id": "AddRightCancel",
      "data":
      {"title": "Right-Cancellative Addition",
       "shortTitle": null,
       "sectionNum": "17.8.1.3.1.",
       "context":
       [{"title": "The Lean Language Reference",
         "shortTitle": null,
         "number": null},
        {"title": "The  grind  tactic", "shortTitle": null, "number": "17"},
        {"title": "Algebraic Solver (Commutative Rings, Fields)",
         "shortTitle": null,
         "number": "8"},
        {"title": "Solver Type Classes", "shortTitle": null, "number": "1"},
        {"title": "Natural Number Zero Divisors",
         "shortTitle": null,
         "number": "3"},
        {"title": "Right-Cancellative Addition",
         "shortTitle": null,
         "number": "1"}]},
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}]}},
  "Verso.Genre.Manual.example":
  {"title": "Verso.Genre.Manual.example",
   "description": "Verso.Genre.Manual.example",
   "contents":
   {"α (in Mutual Block Scope and Automatic Implicit Parameters)":
    [{"id":
      "___-_LPAR_in-Mutual-Block-Scope-and-Automatic-Implicit-Parameters_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#___-_LPAR_in-Mutual-Block-Scope-and-Automatic-Implicit-Parameters_RPAR_-next":
       {"display": "α",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Mutual Recursion",
         "Mutual Block Scope and Automatic Implicit Parameters"]},
       "/Definitions/Recursive-Definitions/#___-_LPAR_in-Mutual-Block-Scope-and-Automatic-Implicit-Parameters_RPAR_":
       {"display": "α",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Mutual Recursion",
         "Mutual Block Scope and Automatic Implicit Parameters"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id":
      "___-_LPAR_in-Mutual-Block-Scope-and-Automatic-Implicit-Parameters_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#___-_LPAR_in-Mutual-Block-Scope-and-Automatic-Implicit-Parameters_RPAR_-next":
       {"display": "α",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Mutual Recursion",
         "Mutual Block Scope and Automatic Implicit Parameters"]},
       "/Definitions/Recursive-Definitions/#___-_LPAR_in-Mutual-Block-Scope-and-Automatic-Implicit-Parameters_RPAR_":
       {"display": "α",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Mutual Recursion",
         "Mutual Block Scope and Automatic Implicit Parameters"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "ys (in Lazy Lists)":
    [{"id": "ys-_LPAR_in-Lazy-Lists_RPAR_",
      "data":
      {"/Basic-Types/Lazy-Computations/#ys-_LPAR_in-Lazy-Lists_RPAR_":
       {"display": "ys",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Lazy Computations",
         "Coercions",
         "Lazy Lists"]}},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "y.y (in Longer Identifier Prefixes Take Precedence)":
    [{"id": "y___y-_LPAR_in-Longer-Identifier-Prefixes-Take-Precedence_RPAR_",
      "data":
      {"/Terms/Identifiers/#y___y-_LPAR_in-Longer-Identifier-Prefixes-Take-Precedence_RPAR_":
       {"display": "y.y",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Identifiers",
         "Longer Identifier Prefixes Take Precedence"]}},
      "address": "/Terms/Identifiers/"}],
    "y (in Sort Coercions as Ordinary Coercions)":
    [{"id": "y-_LPAR_in-Sort-Coercions-as-Ordinary-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Sorts/#y-_LPAR_in-Sort-Coercions-as-Ordinary-Coercions_RPAR_":
       {"display": "y",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Sorts",
         "Sort Coercions as Ordinary Coercions"]}},
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "y (in Longer Identifier Prefixes Take Precedence)":
    [{"id": "y-_LPAR_in-Longer-Identifier-Prefixes-Take-Precedence_RPAR_",
      "data":
      {"/Terms/Identifiers/#y-_LPAR_in-Longer-Identifier-Prefixes-Take-Precedence_RPAR_":
       {"display": "y",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Identifiers",
         "Longer Identifier Prefixes Take Precedence"]}},
      "address": "/Terms/Identifiers/"}],
    "xs (in Lazy Lists)":
    [{"id": "xs-_LPAR_in-Lazy-Lists_RPAR_",
      "data":
      {"/Basic-Types/Lazy-Computations/#xs-_LPAR_in-Lazy-Lists_RPAR_":
       {"display": "xs",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Lazy Computations",
         "Coercions",
         "Lazy Lists"]}},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "x (in Sort Coercions as Ordinary Coercions)":
    [{"id": "x-_LPAR_in-Sort-Coercions-as-Ordinary-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Sorts/#x-_LPAR_in-Sort-Coercions-as-Ordinary-Coercions_RPAR_":
       {"display": "x",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Sorts",
         "Sort Coercions as Ordinary Coercions"]}},
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "x (in Opening Scoped Declarations)":
    [{"id": "x-_LPAR_in-Opening-Scoped-Declarations_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#x-_LPAR_in-Opening-Scoped-Declarations_RPAR_":
       {"display": "x",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Opening Scoped Declarations"]}},
      "address": "/Namespaces-and-Sections/"}],
    "x (in Local Names Take Precedence)":
    [{"id": "x-_LPAR_in-Local-Names-Take-Precedence_RPAR_",
      "data":
      {"/Terms/Identifiers/#x-_LPAR_in-Local-Names-Take-Precedence_RPAR_":
       {"display": "x",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Identifiers",
         "Local Names Take Precedence"]}},
      "address": "/Terms/Identifiers/"}],
    "wednesday (in Implementing Coercions)":
    [{"id": "wednesday-_LPAR_in-Implementing-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#wednesday-_LPAR_in-Implementing-Coercions_RPAR_":
       {"display": "wednesday",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Implementing Coercions",
         "Implementing Coercions"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "values (in Monadic Collection Operations)":
    [{"id": "values-_LPAR_in-Monadic-Collection-Operations_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/API-Reference/#values-_LPAR_in-Monadic-Collection-Operations_RPAR_":
       {"display": "values",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "API Reference",
         "Monadic Collection Operations"]}},
      "address": "/Functors___-Monads-and--do--Notation/API-Reference/"}],
    "useWitness (in Extracting the witness from an existential proof)":
    [{"id":
      "useWitness-_LPAR_in-Extracting-the-witness-from-an-existential-proof_RPAR_",
      "data":
      {"/Error-Explanations/lean___propRecLargeElim/#useWitness-_LPAR_in-Extracting-the-witness-from-an-existential-proof_RPAR_":
       {"display": "useWitness",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.propRecLargeElim",
         "Examples",
         "Extracting the witness from an existential proof"]}},
      "address": "/Error-Explanations/lean___propRecLargeElim/"}],
    "unit_not_nat (in Inconsistencies From Axioms)":
    [{"id": "unit_not_nat-_LPAR_in-Inconsistencies-From-Axioms_RPAR_",
      "data":
      {"/Axioms/#unit_not_nat-_LPAR_in-Inconsistencies-From-Axioms_RPAR_":
       {"display": "unit_not_nat",
        "context":
        ["The Lean Language Reference",
         "Axioms",
         "Consistency",
         "Inconsistencies From Axioms"]}},
      "address": "/Axioms/"}],
    "unexpandSolo (in Custom Unit Type)":
    [{"id": "unexpandSolo-_LPAR_in-Custom-Unit-Type_RPAR_",
      "data":
      {"/Notations-and-Macros/Extending-Lean___s-Output/#unexpandSolo-_LPAR_in-Custom-Unit-Type_RPAR_":
       {"display": "unexpandSolo",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Extending Lean's Output",
         "Unexpanders",
         "Custom Unit Type"]}},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "unexpandListCursor (in Unexpansion and Arguments)":
    [{"id": "unexpandListCursor-_LPAR_in-Unexpansion-and-Arguments_RPAR_",
      "data":
      {"/Notations-and-Macros/Extending-Lean___s-Output/#unexpandListCursor-_LPAR_in-Unexpansion-and-Arguments_RPAR_":
       {"display": "unexpandListCursor",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Extending Lean's Output",
         "Unexpanders",
         "Unexpansion and Arguments"]}},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "unFin_length_eq_length (in Taking Advantage of Run-Time Representations)":
    [{"id":
      "unFin_length_eq_length-_LPAR_in-Taking-Advantage-of-Run-Time-Representations_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#unFin_length_eq_length-_LPAR_in-Taking-Advantage-of-Run-Time-Representations_RPAR_":
       {"display": "unFin_length_eq_length",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial and Unsafe Definitions",
         "Unsafe Definitions",
         "Taking Advantage of Run-Time Representations"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "unFinImpl (in Taking Advantage of Run-Time Representations)":
    [{"id":
      "unFinImpl-_LPAR_in-Taking-Advantage-of-Run-Time-Representations_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#unFinImpl-_LPAR_in-Taking-Advantage-of-Run-Time-Representations_RPAR_":
       {"display": "unFinImpl",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial and Unsafe Definitions",
         "Unsafe Definitions",
         "Taking Advantage of Run-Time Representations"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "unFin (in Taking Advantage of Run-Time Representations)":
    [{"id":
      "unFin-_LPAR_in-Taking-Advantage-of-Run-Time-Representations_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#unFin-_LPAR_in-Taking-Advantage-of-Run-Time-Representations_RPAR_":
       {"display": "unFin",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial and Unsafe Definitions",
         "Unsafe Definitions",
         "Taking Advantage of Run-Time Representations"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "two_eq_five (in Inconsistencies From Axioms)":
    [{"id": "two_eq_five-_LPAR_in-Inconsistencies-From-Axioms_RPAR_",
      "data":
      {"/Axioms/#two_eq_five-_LPAR_in-Inconsistencies-From-Axioms_RPAR_":
       {"display": "two_eq_five",
        "context":
        ["The Lean Language Reference",
         "Axioms",
         "Consistency",
         "Inconsistencies From Axioms"]}},
      "address": "/Axioms/"}],
    "twoHundredThirteen (in Defining Coercions: Decimal Numbers)":
    [{"id":
      "twoHundredThirteen-_LPAR_in-Defining-Coercions___-Decimal-Numbers_RPAR_",
      "data":
      {"/Coercions/#twoHundredThirteen-_LPAR_in-Defining-Coercions___-Decimal-Numbers_RPAR_":
       {"display": "twoHundredThirteen",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Defining Coercions: Decimal Numbers"]}},
      "address": "/Coercions/"}],
    "two'' (in Updating arrays)":
    [{"id": "two______-_LPAR_in-Updating-arrays_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#two______-_LPAR_in-Updating-arrays_RPAR_":
       {"display": "two''",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Updating arrays"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "two' (in Updating arrays)":
    [{"id": "two___-_LPAR_in-Updating-arrays_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#two___-_LPAR_in-Updating-arrays_RPAR_":
       {"display": "two'",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Updating arrays"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "two (in Updating arrays)":
    [{"id": "two-_LPAR_in-Updating-arrays_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#two-_LPAR_in-Updating-arrays_RPAR_":
       {"display": "two",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Updating arrays"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "two (in No structure subtyping)":
    [{"id": "two-_LPAR_in-No-structure-subtyping_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#two-_LPAR_in-No-structure-subtyping_RPAR_":
       {"display": "two",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "No structure subtyping"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "two (in Dependent Function Types)":
    [{"id": "two-_LPAR_in-Dependent-Function-Types_RPAR_",
      "data":
      {"/The-Type-System/Functions/#two-_LPAR_in-Dependent-Function-Types_RPAR_":
       {"display": "two",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Functions",
         "Dependent Function Types"]}},
      "address": "/The-Type-System/Functions/"}],
    "twice (in Duplicate Evaluation in Coercions)":
    [{"id": "twice-_LPAR_in-Duplicate-Evaluation-in-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercion-Insertion/#twice-_LPAR_in-Duplicate-Evaluation-in-Coercions_RPAR_":
       {"display": "twice",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercion Insertion",
         "Duplicate Evaluation in Coercions"]}},
      "address": "/Coercions/Coercion-Insertion/"}],
    "truth_functional_imp (in Truth-Functional Implication)":
    [{"id":
      "truth_functional_imp-_LPAR_in-Truth-Functional-Implication_RPAR_",
      "data":
      {"/Basic-Propositions/Logical-Connectives/#truth_functional_imp-_LPAR_in-Truth-Functional-Implication_RPAR_":
       {"display": "truth_functional_imp",
        "context":
        ["The Lean Language Reference",
         "Basic Propositions",
         "Logical Connectives",
         "Truth-Functional Implication"]}},
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "trig_identity":
    [{"id": "trig_identity",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#trig_identity":
       {"display": "trig_identity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "Integrating  grind 's Features"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "transformIfZero (in Necessarily noncomputable function not appropriately marked)":
    [{"id":
      "transformIfZero-_LPAR_in-Necessarily-noncomputable-function-not-appropriately-marked_RPAR_",
      "data":
      {"/Error-Explanations/lean___dependsOnNoncomputable/#transformIfZero-_LPAR_in-Necessarily-noncomputable-function-not-appropriately-marked_RPAR_":
       {"display": "transformIfZero",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.dependsOnNoncomputable",
         "Examples",
         "Necessarily noncomputable function not appropriately marked"]}},
      "address": "/Error-Explanations/lean___dependsOnNoncomputable/"}],
    "transform (in Necessarily noncomputable function not appropriately marked)":
    [{"id":
      "transform-_LPAR_in-Necessarily-noncomputable-function-not-appropriately-marked_RPAR_",
      "data":
      {"/Error-Explanations/lean___dependsOnNoncomputable/#transform-_LPAR_in-Necessarily-noncomputable-function-not-appropriately-marked_RPAR_-next":
       {"display": "transform",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.dependsOnNoncomputable",
         "Examples",
         "Necessarily noncomputable function not appropriately marked"]},
       "/Error-Explanations/lean___dependsOnNoncomputable/#transform-_LPAR_in-Necessarily-noncomputable-function-not-appropriately-marked_RPAR_":
       {"display": "transform",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.dependsOnNoncomputable",
         "Examples",
         "Necessarily noncomputable function not appropriately marked"]}},
      "address": "/Error-Explanations/lean___dependsOnNoncomputable/"},
     {"id":
      "transform-_LPAR_in-Necessarily-noncomputable-function-not-appropriately-marked_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___dependsOnNoncomputable/#transform-_LPAR_in-Necessarily-noncomputable-function-not-appropriately-marked_RPAR_-next":
       {"display": "transform",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.dependsOnNoncomputable",
         "Examples",
         "Necessarily noncomputable function not appropriately marked"]},
       "/Error-Explanations/lean___dependsOnNoncomputable/#transform-_LPAR_in-Necessarily-noncomputable-function-not-appropriately-marked_RPAR_":
       {"display": "transform",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.dependsOnNoncomputable",
         "Examples",
         "Necessarily noncomputable function not appropriately marked"]}},
      "address": "/Error-Explanations/lean___dependsOnNoncomputable/"}],
    "tomorrow (in Controlling Evaluation with Coercions)":
    [{"id": "tomorrow-_LPAR_in-Controlling-Evaluation-with-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercion-Insertion/#tomorrow-_LPAR_in-Controlling-Evaluation-with-Coercions_RPAR_":
       {"display": "tomorrow",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercion Insertion",
         "Controlling Evaluation with Coercions"]}},
      "address": "/Coercions/Coercion-Insertion/"}],
    "toInt_sound (in Built-In Integers as Quotients)":
    [{"id": "toInt_sound-_LPAR_in-Built-In-Integers-as-Quotients_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#toInt_sound-_LPAR_in-Built-In-Integers-as-Quotients_RPAR_":
       {"display": "toInt_sound",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Alternatives to Quotient Types",
         "Built-In Integers as Quotients"]}},
      "address": "/The-Type-System/Quotients/"}],
    "toInt (in Built-In Integers as Quotients)":
    [{"id": "toInt-_LPAR_in-Built-In-Integers-as-Quotients_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#toInt-_LPAR_in-Built-In-Integers-as-Quotients_RPAR_":
       {"display": "toInt",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Alternatives to Quotient Types",
         "Built-In Integers as Quotients"]}},
      "address": "/The-Type-System/Quotients/"}],
    "toAcademicWork (in Structure type inheritance with overlapping fields)":
    [{"id":
      "toAcademicWork-_LPAR_in-Structure-type-inheritance-with-overlapping-fields_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#toAcademicWork-_LPAR_in-Structure-type-inheritance-with-overlapping-fields_RPAR_":
       {"display": "toAcademicWork",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "Structure type inheritance with overlapping fields"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "thirdOfFive (in Equational Lemmas)":
    [{"id": "thirdOfFive-_LPAR_in-Equational-Lemmas_RPAR_",
      "data":
      {"/Elaboration-and-Compilation/#thirdOfFive-_LPAR_in-Equational-Lemmas_RPAR_":
       {"display": "thirdOfFive",
        "context":
        ["The Lean Language Reference",
         "Elaboration and Compilation",
         "Elaboration Results",
         "Equational Lemmas"]}},
      "address": "/Elaboration-and-Compilation/"}],
    "thirdChar (in Panic)":
    [{"id": "thirdChar-_LPAR_in-Panic_RPAR_",
      "data":
      {"/The-Type-System/Functions/#thirdChar-_LPAR_in-Panic_RPAR_":
       {"display": "thirdChar",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Functions",
         "Totality and Termination",
         "Panic"]}},
      "address": "/The-Type-System/Functions/"}],
    "the (in Filling Holes with Unification)":
    [{"id": "the-_LPAR_in-Filling-Holes-with-Unification_RPAR_",
      "data":
      {"/Terms/Holes/#the-_LPAR_in-Filling-Holes-with-Unification_RPAR_":
       {"display": "the",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Holes",
         "Filling Holes with Unification"]}},
      "address": "/Terms/Holes/"}],
    "th (in Coercions)":
    [{"id": "th-_LPAR_in-Coercions_RPAR_",
      "data":
      {"/Coercions/#th-_LPAR_in-Coercions_RPAR_":
       {"display": "th",
        "context":
        ["The Lean Language Reference", "Coercions", "Coercions"]}},
      "address": "/Coercions/"}],
    "test (in Nested  do  and Branches)":
    [{"id": "test-_LPAR_in-Nested--do--and-Branches_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Syntax/#test-_LPAR_in-Nested--do--and-Branches_RPAR_":
       {"display": "test",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Syntax",
         "do -Notation",
         "Identifying  do  Blocks",
         "Nested  do  and Branches"]}},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "ten (in Sub-Array Syntax)":
    [{"id": "ten-_LPAR_in-Sub-Array-Syntax_RPAR_",
      "data":
      {"/Basic-Types/Arrays/#ten-_LPAR_in-Sub-Array-Syntax_RPAR_":
       {"display": "ten",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Arrays",
         "Syntax",
         "Sub-Array Syntax"]}},
      "address": "/Basic-Types/Arrays/"}],
    "tally_eq_add (in Reducibility and Tactics)":
    [{"id": "tally_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#tally_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_-next-next":
       {"display": "tally_eq_add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]},
       "/Definitions/Recursive-Definitions/#tally_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_-next":
       {"display": "tally_eq_add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]},
       "/Definitions/Recursive-Definitions/#tally_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_":
       {"display": "tally_eq_add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "tally_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_-next-next",
      "data":
      {"/Definitions/Recursive-Definitions/#tally_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_-next-next":
       {"display": "tally_eq_add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]},
       "/Definitions/Recursive-Definitions/#tally_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_-next":
       {"display": "tally_eq_add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]},
       "/Definitions/Recursive-Definitions/#tally_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_":
       {"display": "tally_eq_add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "tally_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#tally_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_-next-next":
       {"display": "tally_eq_add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]},
       "/Definitions/Recursive-Definitions/#tally_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_-next":
       {"display": "tally_eq_add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]},
       "/Definitions/Recursive-Definitions/#tally_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_":
       {"display": "tally_eq_add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "tally (in Reducibility and Tactics)":
    [{"id": "tally-_LPAR_in-Reducibility-and-Tactics_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#tally-_LPAR_in-Reducibility-and-Tactics_RPAR_":
       {"display": "tally",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "synack (in No Backtracking of Lexicographic Order)":
    [{"id": "synack-_LPAR_in-No-Backtracking-of-Lexicographic-Order_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#synack-_LPAR_in-No-Backtracking-of-Lexicographic-Order_RPAR_-next":
       {"display": "synack",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Default Termination Proof Tactic",
         "No Backtracking of Lexicographic Order"]},
       "/Definitions/Recursive-Definitions/#synack-_LPAR_in-No-Backtracking-of-Lexicographic-Order_RPAR_":
       {"display": "synack",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Default Termination Proof Tactic",
         "No Backtracking of Lexicographic Order"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id":
      "synack-_LPAR_in-No-Backtracking-of-Lexicographic-Order_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#synack-_LPAR_in-No-Backtracking-of-Lexicographic-Order_RPAR_-next":
       {"display": "synack",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Default Termination Proof Tactic",
         "No Backtracking of Lexicographic Order"]},
       "/Definitions/Recursive-Definitions/#synack-_LPAR_in-No-Backtracking-of-Lexicographic-Order_RPAR_":
       {"display": "synack",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Default Termination Proof Tactic",
         "No Backtracking of Lexicographic Order"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "sweetPotato (in Using  Ord  Instances for  LT  and  LE  Instances)":
    [{"id":
      "sweetPotato-_LPAR_in-Using--Ord--Instances-for--LT--and--LE--Instances_RPAR_",
      "data":
      {"/Type-Classes/Basic-Classes/#sweetPotato-_LPAR_in-Using--Ord--Instances-for--LT--and--LE--Instances_RPAR_":
       {"display": "sweetPotato",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Basic Classes",
         "Ordering",
         "Using  Ord  Instances for  LT  and  LE  Instances"]}},
      "address": "/Type-Classes/Basic-Classes/"}],
    "swap_swap_eq_id' (in The  @[grind ext]  Attribute)":
    [{"id":
      "swap_swap_eq_id___-_LPAR_in-The--____LSQ_grind-ext_RSQ_--Attribute_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#swap_swap_eq_id___-_LPAR_in-The--____LSQ_grind-ext_RSQ_--Attribute_RPAR_":
       {"display": "swap_swap_eq_id'",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Patterns",
         "The  @[grind ext]  Attribute"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "swap_swap_eq_id (in The  @[grind ext]  Attribute)":
    [{"id":
      "swap_swap_eq_id-_LPAR_in-The--____LSQ_grind-ext_RSQ_--Attribute_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#swap_swap_eq_id-_LPAR_in-The--____LSQ_grind-ext_RSQ_--Attribute_RPAR_":
       {"display": "swap_swap_eq_id",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Patterns",
         "The  @[grind ext]  Attribute"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "swap_eq_swap' (in Printing Axioms)":
    [{"id": "swap_eq_swap___-_LPAR_in-Printing-Axioms_RPAR_",
      "data":
      {"/Interacting-with-Lean/#swap_eq_swap___-_LPAR_in-Printing-Axioms_RPAR_":
       {"display": "swap_eq_swap'",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Querying the Context",
         "Printing Axioms"]}},
      "address": "/Interacting-with-Lean/"}],
    "swap' (in Printing Axioms)":
    [{"id": "swap___-_LPAR_in-Printing-Axioms_RPAR_",
      "data":
      {"/Interacting-with-Lean/#swap___-_LPAR_in-Printing-Axioms_RPAR_":
       {"display": "swap'",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Querying the Context",
         "Printing Axioms"]}},
      "address": "/Interacting-with-Lean/"}],
    "swap (in Printing Axioms)":
    [{"id": "swap-_LPAR_in-Printing-Axioms_RPAR_",
      "data":
      {"/Interacting-with-Lean/#swap-_LPAR_in-Printing-Axioms_RPAR_":
       {"display": "swap",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Querying the Context",
         "Printing Axioms"]}},
      "address": "/Interacting-with-Lean/"}],
    "sum_eq_add (in Reducibility and Tactics)":
    [{"id": "sum_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#sum_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_-next":
       {"display": "sum_eq_add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]},
       "/Definitions/Recursive-Definitions/#sum_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_":
       {"display": "sum_eq_add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "sum_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#sum_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_-next":
       {"display": "sum_eq_add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]},
       "/Definitions/Recursive-Definitions/#sum_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_":
       {"display": "sum_eq_add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "sumUntilFive (in Effect Ordering)":
    [{"id": "sumUntilFive-_LPAR_in-Effect-Ordering_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Varieties-of-Monads/#sumUntilFive-_LPAR_in-Effect-Ordering_RPAR_":
       {"display": "sumUntilFive",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Varieties of Monads",
         "Monad Type Classes",
         "Effect Ordering"]}},
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "sumNonFives (in Effect Ordering)":
    [{"id": "sumNonFives-_LPAR_in-Effect-Ordering_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Varieties-of-Monads/#sumNonFives-_LPAR_in-Effect-Ordering_RPAR_":
       {"display": "sumNonFives",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Varieties of Monads",
         "Monad Type Classes",
         "Effect Ordering"]}},
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "sum3 (in Named Arguments)":
    [{"id": "sum3-_LPAR_in-Named-Arguments_RPAR_",
      "data":
      {"/Terms/Function-Application/#sum3-_LPAR_in-Named-Arguments_RPAR_":
       {"display": "sum3",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Function Application",
         "Named Arguments"]}},
      "address": "/Terms/Function-Application/"}],
    "sum (in Reducibility and Tactics)":
    [{"id": "sum-_LPAR_in-Reducibility-and-Tactics_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#sum-_LPAR_in-Reducibility-and-Tactics_RPAR_":
       {"display": "sum",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "succ_not_zero":
    [{"id": "succ_not_zero",
      "data":
      {"/Basic-Types/Natural-Numbers/#succ_not_zero":
       {"display": "succ_not_zero",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Natural Numbers",
         "Logical Model",
         "Peano Axioms"]}},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "succ_injective":
    [{"id": "succ_injective",
      "data":
      {"/Basic-Types/Natural-Numbers/#succ_injective":
       {"display": "succ_injective",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Natural Numbers",
         "Logical Model",
         "Peano Axioms"]}},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "succ (in Coercing Decorated Functions to Function Types)":
    [{"id":
      "succ-_LPAR_in-Coercing-Decorated-Functions-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#succ-_LPAR_in-Coercing-Decorated-Functions-to-Function-Types_RPAR_":
       {"display": "succ",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing Decorated Functions to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "sub' (in Controlling Coercion Insertion)":
    [{"id": "sub___-_LPAR_in-Controlling-Coercion-Insertion_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#sub___-_LPAR_in-Controlling-Coercion-Insertion_RPAR_":
       {"display": "sub'",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Controlling Coercion Insertion"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "sub (in Controlling Coercion Insertion)":
    [{"id": "sub-_LPAR_in-Controlling-Coercion-Insertion_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#sub-_LPAR_in-Controlling-Coercion-Insertion_RPAR_":
       {"display": "sub",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Controlling Coercion Insertion"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "stringWriter (in Dependent Coercion to Functions)":
    [{"id": "stringWriter-_LPAR_in-Dependent-Coercion-to-Functions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#stringWriter-_LPAR_in-Dependent-Coercion-to-Functions_RPAR_":
       {"display": "stringWriter",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Dependent Coercion to Functions"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "str2":
    [{"id": "str2",
      "data":
      {"/Basic-Types/Strings/#str2":
       {"display": "str2",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Strings",
         "Syntax",
         "String Literals"]}},
      "address": "/Basic-Types/Strings/"}],
    "str1":
    [{"id": "str1",
      "data":
      {"/Basic-Types/Strings/#str1":
       {"display": "str1",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Strings",
         "Syntax",
         "String Literals"]}},
      "address": "/Basic-Types/Strings/"}],
    "str (in Newline Characters in Strings)":
    [{"id": "str-_LPAR_in-Newline-Characters-in-Strings_RPAR_",
      "data":
      {"/Interacting-with-Lean/#str-_LPAR_in-Newline-Characters-in-Strings_RPAR_":
       {"display": "str",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Format",
         "Newline Characters in Strings"]}},
      "address": "/Interacting-with-Lean/"}],
    "split'' (in Pattern Matching and Lists)":
    [{"id": "split______-_LPAR_in-Pattern-Matching-and-Lists_RPAR_",
      "data":
      {"/Basic-Types/Linked-Lists/#split______-_LPAR_in-Pattern-Matching-and-Lists_RPAR_":
       {"display": "split''",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Linked Lists",
         "Syntax",
         "Pattern Matching and Lists"]}},
      "address": "/Basic-Types/Linked-Lists/"}],
    "split' (in Pattern Matching and Lists)":
    [{"id": "split___-_LPAR_in-Pattern-Matching-and-Lists_RPAR_",
      "data":
      {"/Basic-Types/Linked-Lists/#split___-_LPAR_in-Pattern-Matching-and-Lists_RPAR_":
       {"display": "split'",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Linked Lists",
         "Syntax",
         "Pattern Matching and Lists"]}},
      "address": "/Basic-Types/Linked-Lists/"}],
    "split (in Pattern Matching and Lists)":
    [{"id": "split-_LPAR_in-Pattern-Matching-and-Lists_RPAR_",
      "data":
      {"/Basic-Types/Linked-Lists/#split-_LPAR_in-Pattern-Matching-and-Lists_RPAR_":
       {"display": "split",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Linked Lists",
         "Syntax",
         "Pattern Matching and Lists"]}},
      "address": "/Basic-Types/Linked-Lists/"}],
    "sin":
    [{"id": "sin",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#sin":
       {"display": "sin",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "Integrating  grind 's Features"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "select (in Relaxed vs Non-Relaxed Automatic Implicit Parameters)":
    [{"id":
      "select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_-next-next-next",
      "data":
      {"/Definitions/Headers-and-Signatures/#select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_-next-next-next":
       {"display": "select",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]},
       "/Definitions/Headers-and-Signatures/#select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_-next-next":
       {"display": "select",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]},
       "/Definitions/Headers-and-Signatures/#select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_-next":
       {"display": "select",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]},
       "/Definitions/Headers-and-Signatures/#select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_":
       {"display": "select",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]}},
      "address": "/Definitions/Headers-and-Signatures/"},
     {"id":
      "select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_-next-next",
      "data":
      {"/Definitions/Headers-and-Signatures/#select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_-next-next-next":
       {"display": "select",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]},
       "/Definitions/Headers-and-Signatures/#select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_-next-next":
       {"display": "select",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]},
       "/Definitions/Headers-and-Signatures/#select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_-next":
       {"display": "select",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]},
       "/Definitions/Headers-and-Signatures/#select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_":
       {"display": "select",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]}},
      "address": "/Definitions/Headers-and-Signatures/"},
     {"id":
      "select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_",
      "data":
      {"/Definitions/Headers-and-Signatures/#select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_-next-next-next":
       {"display": "select",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]},
       "/Definitions/Headers-and-Signatures/#select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_-next-next":
       {"display": "select",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]},
       "/Definitions/Headers-and-Signatures/#select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_-next":
       {"display": "select",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]},
       "/Definitions/Headers-and-Signatures/#select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_":
       {"display": "select",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]}},
      "address": "/Definitions/Headers-and-Signatures/"},
     {"id":
      "select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_-next",
      "data":
      {"/Definitions/Headers-and-Signatures/#select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_-next-next-next":
       {"display": "select",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]},
       "/Definitions/Headers-and-Signatures/#select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_-next-next":
       {"display": "select",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]},
       "/Definitions/Headers-and-Signatures/#select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_-next":
       {"display": "select",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]},
       "/Definitions/Headers-and-Signatures/#select-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_":
       {"display": "select",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]}},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "seconds (in Incorrect ordering of pattern matches)":
    [{"id": "seconds-_LPAR_in-Incorrect-ordering-of-pattern-matches_RPAR_",
      "data":
      {"/Error-Explanations/lean___redundantMatchAlt/#seconds-_LPAR_in-Incorrect-ordering-of-pattern-matches_RPAR_-next":
       {"display": "seconds",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.redundantMatchAlt",
         "Examples",
         "Incorrect ordering of pattern matches"]},
       "/Error-Explanations/lean___redundantMatchAlt/#seconds-_LPAR_in-Incorrect-ordering-of-pattern-matches_RPAR_":
       {"display": "seconds",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.redundantMatchAlt",
         "Examples",
         "Incorrect ordering of pattern matches"]}},
      "address": "/Error-Explanations/lean___redundantMatchAlt/"},
     {"id":
      "seconds-_LPAR_in-Incorrect-ordering-of-pattern-matches_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___redundantMatchAlt/#seconds-_LPAR_in-Incorrect-ordering-of-pattern-matches_RPAR_-next":
       {"display": "seconds",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.redundantMatchAlt",
         "Examples",
         "Incorrect ordering of pattern matches"]},
       "/Error-Explanations/lean___redundantMatchAlt/#seconds-_LPAR_in-Incorrect-ordering-of-pattern-matches_RPAR_":
       {"display": "seconds",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.redundantMatchAlt",
         "Examples",
         "Incorrect ordering of pattern matches"]}},
      "address": "/Error-Explanations/lean___redundantMatchAlt/"}],
    "satisfyingIndices (in Iteration over Array Indices with  for)":
    [{"id":
      "satisfyingIndices-_LPAR_in-Iteration-over-Array-Indices-with--for_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Syntax/#satisfyingIndices-_LPAR_in-Iteration-over-Array-Indices-with--for_RPAR_":
       {"display": "satisfyingIndices",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Syntax",
         "do -Notation",
         "Iteration",
         "Iteration over Array Indices with  for"]}},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "s_eq (in Too Many Instances)":
    [{"id": "s_eq-_LPAR_in-Too-Many-Instances_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#s_eq-_LPAR_in-Too-Many-Instances_RPAR_":
       {"display": "s_eq",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Resource Limits",
         "Too Many Instances"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "s2 (in Extensional Equality of Subtypes)":
    [{"id": "s2-_LPAR_in-Extensional-Equality-of-Subtypes_RPAR_",
      "data":
      {"/Basic-Types/Subtypes/#s2-_LPAR_in-Extensional-Equality-of-Subtypes_RPAR_":
       {"display": "s2",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Subtypes",
         "Extensional Equality of Subtypes"]}},
      "address": "/Basic-Types/Subtypes/"}],
    "s2 (in Definitional Equality of Subtypes)":
    [{"id": "s2-_LPAR_in-Definitional-Equality-of-Subtypes_RPAR_",
      "data":
      {"/Basic-Types/Subtypes/#s2-_LPAR_in-Definitional-Equality-of-Subtypes_RPAR_":
       {"display": "s2",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Subtypes",
         "Definitional Equality of Subtypes"]}},
      "address": "/Basic-Types/Subtypes/"}],
    "s1_eq_s2 (in Extensional Equality of Subtypes)":
    [{"id": "s1_eq_s2-_LPAR_in-Extensional-Equality-of-Subtypes_RPAR_",
      "data":
      {"/Basic-Types/Subtypes/#s1_eq_s2-_LPAR_in-Extensional-Equality-of-Subtypes_RPAR_":
       {"display": "s1_eq_s2",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Subtypes",
         "Extensional Equality of Subtypes"]}},
      "address": "/Basic-Types/Subtypes/"}],
    "s1_eq_s2 (in Definitional Equality of Subtypes)":
    [{"id": "s1_eq_s2-_LPAR_in-Definitional-Equality-of-Subtypes_RPAR_",
      "data":
      {"/Basic-Types/Subtypes/#s1_eq_s2-_LPAR_in-Definitional-Equality-of-Subtypes_RPAR_":
       {"display": "s1_eq_s2",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Subtypes",
         "Definitional Equality of Subtypes"]}},
      "address": "/Basic-Types/Subtypes/"}],
    "s1 (in Extensional Equality of Subtypes)":
    [{"id": "s1-_LPAR_in-Extensional-Equality-of-Subtypes_RPAR_",
      "data":
      {"/Basic-Types/Subtypes/#s1-_LPAR_in-Extensional-Equality-of-Subtypes_RPAR_":
       {"display": "s1",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Subtypes",
         "Extensional Equality of Subtypes"]}},
      "address": "/Basic-Types/Subtypes/"}],
    "s1 (in Definitional Equality of Subtypes)":
    [{"id": "s1-_LPAR_in-Definitional-Equality-of-Subtypes_RPAR_",
      "data":
      {"/Basic-Types/Subtypes/#s1-_LPAR_in-Definitional-Equality-of-Subtypes_RPAR_":
       {"display": "s1",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Subtypes",
         "Definitional Equality of Subtypes"]}},
      "address": "/Basic-Types/Subtypes/"}],
    "s (in Too Many Instances)":
    [{"id": "s-_LPAR_in-Too-Many-Instances_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#s-_LPAR_in-Too-Many-Instances_RPAR_":
       {"display": "s",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Resource Limits",
         "Too Many Instances"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "runCountdown (in Redirecting Standard I/O to Strings)":
    [{"id":
      "runCountdown-_LPAR_in-Redirecting-Standard-I___O-to-Strings_RPAR_",
      "data":
      {"/IO/Files___-File-Handles___-and-Streams/#runCountdown-_LPAR_in-Redirecting-Standard-I___O-to-Strings_RPAR_":
       {"display": "runCountdown",
        "context":
        ["The Lean Language Reference",
         "IO",
         "Files, File Handles, and Streams",
         "Standard I/O",
         "Redirecting Standard I/O to Strings"]}},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "root (in Generalized Field Notation)":
    [{"id": "root-_LPAR_in-Generalized-Field-Notation_RPAR_",
      "data":
      {"/Terms/Function-Application/#root-_LPAR_in-Generalized-Field-Notation_RPAR_":
       {"display": "root",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Function Application",
         "Generalized Field Notation",
         "Generalized Field Notation"]}},
      "address": "/Terms/Function-Application/"}],
    "reverseDuplicate (in Insufficient type information)":
    [{"id": "reverseDuplicate-_LPAR_in-Insufficient-type-information_RPAR_",
      "data":
      {"/Error-Explanations/lean___invalidDottedIdent/#reverseDuplicate-_LPAR_in-Insufficient-type-information_RPAR_":
       {"display": "reverseDuplicate",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.invalidDottedIdent",
         "Examples",
         "Insufficient type information"]}},
      "address": "/Error-Explanations/lean___invalidDottedIdent/"}],
    "reverse (in Testing Return Values)":
    [{"id": "reverse-_LPAR_in-Testing-Return-Values_RPAR_",
      "data":
      {"/Interacting-with-Lean/#reverse-_LPAR_in-Testing-Return-Values_RPAR_":
       {"display": "reverse",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Testing Output with  #guard_msgs",
         "Testing Return Values"]}},
      "address": "/Interacting-with-Lean/"}],
    "repeatAccessControl (in Throwing and Catching Errors)":
    [{"id": "repeatAccessControl-_LPAR_in-Throwing-and-Catching-Errors_RPAR_",
      "data":
      {"/IO/Logical-Model/#repeatAccessControl-_LPAR_in-Throwing-and-Catching-Errors_RPAR_":
       {"display": "repeatAccessControl",
        "context":
        ["The Lean Language Reference",
         "IO",
         "Logical Model",
         "Errors and Error Handling in  IO",
         "Throwing and Catching Errors"]}},
      "address": "/IO/Logical-Model/"}],
    "removeSourceInfo (in Representing Syntax as Constructors)":
    [{"id":
      "removeSourceInfo-_LPAR_in-Representing-Syntax-as-Constructors_RPAR_",
      "data":
      {"/Notations-and-Macros/Defining-New-Syntax/#removeSourceInfo-_LPAR_in-Representing-Syntax-as-Constructors_RPAR_":
       {"display": "removeSourceInfo",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Defining New Syntax",
         "Inspecting Syntax",
         "Representing Syntax as Constructors"]}},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "red (in Missing namespace)":
    [{"id": "red-_LPAR_in-Missing-namespace_RPAR_-next-next",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#red-_LPAR_in-Missing-namespace_RPAR_-next-next":
       {"display": "red",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#red-_LPAR_in-Missing-namespace_RPAR_-next":
       {"display": "red",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#red-_LPAR_in-Missing-namespace_RPAR_":
       {"display": "red",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"},
     {"id": "red-_LPAR_in-Missing-namespace_RPAR_",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#red-_LPAR_in-Missing-namespace_RPAR_-next-next":
       {"display": "red",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#red-_LPAR_in-Missing-namespace_RPAR_-next":
       {"display": "red",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#red-_LPAR_in-Missing-namespace_RPAR_":
       {"display": "red",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"},
     {"id": "red-_LPAR_in-Missing-namespace_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#red-_LPAR_in-Missing-namespace_RPAR_-next-next":
       {"display": "red",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#red-_LPAR_in-Missing-namespace_RPAR_-next":
       {"display": "red",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#red-_LPAR_in-Missing-namespace_RPAR_":
       {"display": "red",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"}],
    "q (in Forward Pattern Generation)":
    [{"id": "q-_LPAR_in-Forward-Pattern-Generation_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#q-_LPAR_in-Forward-Pattern-Generation_RPAR_":
       {"display": "q",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Inspecting Patterns",
         "Forward Pattern Generation"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "process' (in Reference Counts in IR)":
    [{"id": "process___-_LPAR_in-Reference-Counts-in-IR_RPAR_",
      "data":
      {"/Run-Time-Code/Reference-Counting/#process___-_LPAR_in-Reference-Counts-in-IR_RPAR_":
       {"display": "process'",
        "context":
        ["The Lean Language Reference",
         "Run-Time Code",
         "Reference Counting",
         "Compiler IR",
         "Reference Counts in IR"]}},
      "address": "/Run-Time-Code/Reference-Counting/"}],
    "process (in Reference Counts in IR)":
    [{"id": "process-_LPAR_in-Reference-Counts-in-IR_RPAR_",
      "data":
      {"/Run-Time-Code/Reference-Counting/#process-_LPAR_in-Reference-Counts-in-IR_RPAR_":
       {"display": "process",
        "context":
        ["The Lean Language Reference",
         "Run-Time Code",
         "Reference Counting",
         "Compiler IR",
         "Reference Counts in IR"]}},
      "address": "/Run-Time-Code/Reference-Counting/"}],
    "process (in Observing Uniqueness)":
    [{"id": "process-_LPAR_in-Observing-Uniqueness_RPAR_",
      "data":
      {"/Run-Time-Code/Reference-Counting/#process-_LPAR_in-Observing-Uniqueness_RPAR_-next":
       {"display": "process",
        "context":
        ["The Lean Language Reference",
         "Run-Time Code",
         "Reference Counting",
         "Observing Uniqueness",
         "Observing Uniqueness"]},
       "/Run-Time-Code/Reference-Counting/#process-_LPAR_in-Observing-Uniqueness_RPAR_":
       {"display": "process",
        "context":
        ["The Lean Language Reference",
         "Run-Time Code",
         "Reference Counting",
         "Observing Uniqueness",
         "Observing Uniqueness"]}},
      "address": "/Run-Time-Code/Reference-Counting/"},
     {"id": "process-_LPAR_in-Observing-Uniqueness_RPAR_-next",
      "data":
      {"/Run-Time-Code/Reference-Counting/#process-_LPAR_in-Observing-Uniqueness_RPAR_-next":
       {"display": "process",
        "context":
        ["The Lean Language Reference",
         "Run-Time Code",
         "Reference Counting",
         "Observing Uniqueness",
         "Observing Uniqueness"]},
       "/Run-Time-Code/Reference-Counting/#process-_LPAR_in-Observing-Uniqueness_RPAR_":
       {"display": "process",
        "context":
        ["The Lean Language Reference",
         "Run-Time Code",
         "Reference Counting",
         "Observing Uniqueness",
         "Observing Uniqueness"]}},
      "address": "/Run-Time-Code/Reference-Counting/"}],
    "printEven (in No structure subtyping)":
    [{"id": "printEven-_LPAR_in-No-structure-subtyping_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#printEven-_LPAR_in-No-structure-subtyping_RPAR_":
       {"display": "printEven",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "No structure subtyping"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "postalCodes (in Options as Safe Nullability)":
    [{"id": "postalCodes-_LPAR_in-Options-as-Safe-Nullability_RPAR_",
      "data":
      {"/Basic-Types/Optional-Values/#postalCodes-_LPAR_in-Options-as-Safe-Nullability_RPAR_":
       {"display": "postalCodes",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Optional Values",
         "Options as Safe Nullability"]}},
      "address": "/Basic-Types/Optional-Values/"}],
    "pos0 (in Floating-Point Equality Is Not a Congruence)":
    [{"id": "pos0-_LPAR_in-Floating-Point-Equality-Is-Not-a-Congruence_RPAR_",
      "data":
      {"/Basic-Types/Floating-Point-Numbers/#pos0-_LPAR_in-Floating-Point-Equality-Is-Not-a-Congruence_RPAR_":
       {"display": "pos0",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Floating-Point Numbers",
         "Floating-Point Equality Is Not a Congruence"]}},
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "popcount_spec (in Popcount)":
    [{"id": "popcount_spec-_LPAR_in-Popcount_RPAR_",
      "data":
      {"/Basic-Types/Bitvectors/#popcount_spec-_LPAR_in-Popcount_RPAR_":
       {"display": "popcount_spec",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Bitvectors",
         "Automation",
         "Popcount"]}},
      "address": "/Basic-Types/Bitvectors/"}],
    "popcount_correct (in Popcount)":
    [{"id": "popcount_correct-_LPAR_in-Popcount_RPAR_",
      "data":
      {"/Basic-Types/Bitvectors/#popcount_correct-_LPAR_in-Popcount_RPAR_":
       {"display": "popcount_correct",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Bitvectors",
         "Automation",
         "Popcount"]}},
      "address": "/Basic-Types/Bitvectors/"}],
    "popcount (in Popcount)":
    [{"id": "popcount-_LPAR_in-Popcount_RPAR_",
      "data":
      {"/Basic-Types/Bitvectors/#popcount-_LPAR_in-Popcount_RPAR_":
       {"display": "popcount",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Bitvectors",
         "Automation",
         "Popcount"]}},
      "address": "/Basic-Types/Bitvectors/"}],
    "plus_eq_add (in Reducibility and Tactics)":
    [{"id": "plus_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#plus_eq_add-_LPAR_in-Reducibility-and-Tactics_RPAR_":
       {"display": "plus_eq_add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "plusTwo (in Uninferred binder type due to resulting type annotation)":
    [{"id":
      "plusTwo-_LPAR_in-Uninferred-binder-type-due-to-resulting-type-annotation_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___inferBinderTypeFailed/#plusTwo-_LPAR_in-Uninferred-binder-type-due-to-resulting-type-annotation_RPAR_-next":
       {"display": "plusTwo",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Uninferred binder type due to resulting type annotation"]},
       "/Error-Explanations/lean___inferBinderTypeFailed/#plusTwo-_LPAR_in-Uninferred-binder-type-due-to-resulting-type-annotation_RPAR_":
       {"display": "plusTwo",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Uninferred binder type due to resulting type annotation"]}},
      "address": "/Error-Explanations/lean___inferBinderTypeFailed/"},
     {"id":
      "plusTwo-_LPAR_in-Uninferred-binder-type-due-to-resulting-type-annotation_RPAR_",
      "data":
      {"/Error-Explanations/lean___inferBinderTypeFailed/#plusTwo-_LPAR_in-Uninferred-binder-type-due-to-resulting-type-annotation_RPAR_-next":
       {"display": "plusTwo",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Uninferred binder type due to resulting type annotation"]},
       "/Error-Explanations/lean___inferBinderTypeFailed/#plusTwo-_LPAR_in-Uninferred-binder-type-due-to-resulting-type-annotation_RPAR_":
       {"display": "plusTwo",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Uninferred binder type due to resulting type annotation"]}},
      "address": "/Error-Explanations/lean___inferBinderTypeFailed/"}],
    "plusTimes2 (in Class Abbreviations)":
    [{"id": "plusTimes2-_LPAR_in-Class-Abbreviations_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#plusTimes2-_LPAR_in-Class-Abbreviations_RPAR_":
       {"display": "plusTimes2",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class Abbreviations",
         "Class Abbreviations"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "plusTimes1 (in Class Abbreviations)":
    [{"id": "plusTimes1-_LPAR_in-Class-Abbreviations_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#plusTimes1-_LPAR_in-Class-Abbreviations_RPAR_":
       {"display": "plusTimes1",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class Abbreviations",
         "Class Abbreviations"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "plus (in Reducibility and Tactics)":
    [{"id": "plus-_LPAR_in-Reducibility-and-Tactics_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#plus-_LPAR_in-Reducibility-and-Tactics_RPAR_":
       {"display": "plus",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Tactics",
         "Reducibility and Tactics"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "plus (in Coercing to Function Types)":
    [{"id": "plus-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#plus-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "plus",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "perhapsFactorial (in Custom Operators in Lean's Output)":
    [{"id":
      "perhapsFactorial-_LPAR_in-Custom-Operators-in-Lean___s-Output_RPAR_",
      "data":
      {"/Notations-and-Macros/Custom-Operators/#perhapsFactorial-_LPAR_in-Custom-Operators-in-Lean___s-Output_RPAR_":
       {"display": "perhapsFactorial",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Custom Operators",
         "Custom Operators in Lean's Output"]}},
      "address": "/Notations-and-Macros/Custom-Operators/"}],
    "parenSeq (in Widths and Newlines)":
    [{"id": "parenSeq-_LPAR_in-Widths-and-Newlines_RPAR_",
      "data":
      {"/Interacting-with-Lean/#parenSeq-_LPAR_in-Widths-and-Newlines_RPAR_":
       {"display": "parenSeq",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Format",
         "Widths and Newlines"]}},
      "address": "/Interacting-with-Lean/"}],
    "parenSeq (in Grouping and Filling)":
    [{"id": "parenSeq-_LPAR_in-Grouping-and-Filling_RPAR_",
      "data":
      {"/Interacting-with-Lean/#parenSeq-_LPAR_in-Grouping-and-Filling_RPAR_":
       {"display": "parenSeq",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Format",
         "Grouping and Filling"]}},
      "address": "/Interacting-with-Lean/"}],
    "p_all (in Included and Omitted Section Variables)":
    [{"id": "p_all-_LPAR_in-Included-and-Omitted-Section-Variables_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#p_all-_LPAR_in-Included-and-Omitted-Section-Variables_RPAR_-next-next":
       {"display": "p_all",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Section Scopes",
         "Section Variables",
         "Included and Omitted Section Variables"]},
       "/Namespaces-and-Sections/#p_all-_LPAR_in-Included-and-Omitted-Section-Variables_RPAR_-next":
       {"display": "p_all",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Section Scopes",
         "Section Variables",
         "Included and Omitted Section Variables"]},
       "/Namespaces-and-Sections/#p_all-_LPAR_in-Included-and-Omitted-Section-Variables_RPAR_":
       {"display": "p_all",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Section Scopes",
         "Section Variables",
         "Included and Omitted Section Variables"]}},
      "address": "/Namespaces-and-Sections/"},
     {"id":
      "p_all-_LPAR_in-Included-and-Omitted-Section-Variables_RPAR_-next-next",
      "data":
      {"/Namespaces-and-Sections/#p_all-_LPAR_in-Included-and-Omitted-Section-Variables_RPAR_-next-next":
       {"display": "p_all",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Section Scopes",
         "Section Variables",
         "Included and Omitted Section Variables"]},
       "/Namespaces-and-Sections/#p_all-_LPAR_in-Included-and-Omitted-Section-Variables_RPAR_-next":
       {"display": "p_all",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Section Scopes",
         "Section Variables",
         "Included and Omitted Section Variables"]},
       "/Namespaces-and-Sections/#p_all-_LPAR_in-Included-and-Omitted-Section-Variables_RPAR_":
       {"display": "p_all",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Section Scopes",
         "Section Variables",
         "Included and Omitted Section Variables"]}},
      "address": "/Namespaces-and-Sections/"},
     {"id":
      "p_all-_LPAR_in-Included-and-Omitted-Section-Variables_RPAR_-next",
      "data":
      {"/Namespaces-and-Sections/#p_all-_LPAR_in-Included-and-Omitted-Section-Variables_RPAR_-next-next":
       {"display": "p_all",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Section Scopes",
         "Section Variables",
         "Included and Omitted Section Variables"]},
       "/Namespaces-and-Sections/#p_all-_LPAR_in-Included-and-Omitted-Section-Variables_RPAR_-next":
       {"display": "p_all",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Section Scopes",
         "Section Variables",
         "Included and Omitted Section Variables"]},
       "/Namespaces-and-Sections/#p_all-_LPAR_in-Included-and-Omitted-Section-Variables_RPAR_":
       {"display": "p_all",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Section Scopes",
         "Section Variables",
         "Included and Omitted Section Variables"]}},
      "address": "/Namespaces-and-Sections/"}],
    "p (in Forward Pattern Generation)":
    [{"id": "p-_LPAR_in-Forward-Pattern-Generation_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#p-_LPAR_in-Forward-Pattern-Generation_RPAR_":
       {"display": "p",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Inspecting Patterns",
         "Forward Pattern Generation"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "oneTwoThree' (in Anonymous constructors)":
    [{"id": "oneTwoThree___-_LPAR_in-Anonymous-constructors_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#oneTwoThree___-_LPAR_in-Anonymous-constructors_RPAR_":
       {"display": "oneTwoThree'",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Anonymous Constructor Syntax",
         "Anonymous constructors"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "oneTwoThree (in Dependent Coercion)":
    [{"id": "oneTwoThree-_LPAR_in-Dependent-Coercion_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#oneTwoThree-_LPAR_in-Dependent-Coercion_RPAR_":
       {"display": "oneTwoThree",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Dependent Coercion"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "oneTwoThree (in Array Literals)":
    [{"id": "oneTwoThree-_LPAR_in-Array-Literals_RPAR_",
      "data":
      {"/Basic-Types/Arrays/#oneTwoThree-_LPAR_in-Array-Literals_RPAR_":
       {"display": "oneTwoThree",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Arrays",
         "Syntax",
         "Array Literals"]}},
      "address": "/Basic-Types/Arrays/"}],
    "oneTwoThree (in Anonymous constructors)":
    [{"id": "oneTwoThree-_LPAR_in-Anonymous-constructors_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#oneTwoThree-_LPAR_in-Anonymous-constructors_RPAR_":
       {"display": "oneTwoThree",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Anonymous Constructor Syntax",
         "Anonymous constructors"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "one (in Updating arrays)":
    [{"id": "one-_LPAR_in-Updating-arrays_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#one-_LPAR_in-Updating-arrays_RPAR_":
       {"display": "one",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Updating arrays"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "one (in Defining Coercions: Decimal Numbers)":
    [{"id": "one-_LPAR_in-Defining-Coercions___-Decimal-Numbers_RPAR_",
      "data":
      {"/Coercions/#one-_LPAR_in-Defining-Coercions___-Decimal-Numbers_RPAR_":
       {"display": "one",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Defining Coercions: Decimal Numbers"]}},
      "address": "/Coercions/"}],
    "ofNatEvenPlusTwo (in Default Instances)":
    [{"id": "ofNatEvenPlusTwo-_LPAR_in-Default-Instances_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#ofNatEvenPlusTwo-_LPAR_in-Default-Instances_RPAR_":
       {"display": "ofNatEvenPlusTwo",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Default Instances",
         "Default Instances"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "ofNatEven0 (in Default Instances)":
    [{"id": "ofNatEven0-_LPAR_in-Default-Instances_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#ofNatEven0-_LPAR_in-Default-Instances_RPAR_":
       {"display": "ofNatEven0",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Default Instances",
         "Default Instances"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "odd (in Mutual Structural Recursion Over Non-Mutual Types)":
    [{"id":
      "odd-_LPAR_in-Mutual-Structural-Recursion-Over-Non-Mutual-Types_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#odd-_LPAR_in-Mutual-Structural-Recursion-Over-Non-Mutual-Types_RPAR_":
       {"display": "odd",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Mutual Structural Recursion",
         "Mutual Structural Recursion Over Non-Mutual Types"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "observe (in Lazy Lists)":
    [{"id": "observe-_LPAR_in-Lazy-Lists_RPAR_",
      "data":
      {"/Basic-Types/Lazy-Computations/#observe-_LPAR_in-Lazy-Lists_RPAR_":
       {"display": "observe",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Lazy Computations",
         "Coercions",
         "Lazy Lists"]}},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "nums (in Grouping and Filling)":
    [{"id": "nums-_LPAR_in-Grouping-and-Filling_RPAR_",
      "data":
      {"/Interacting-with-Lean/#nums-_LPAR_in-Grouping-and-Filling_RPAR_":
       {"display": "nums",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Format",
         "Grouping and Filling"]}},
      "address": "/Interacting-with-Lean/"}],
    "notInductive (in Ineligible decreasing parameters)":
    [{"id": "notInductive-_LPAR_in-Ineligible-decreasing-parameters_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#notInductive-_LPAR_in-Ineligible-decreasing-parameters_RPAR_":
       {"display": "notInductive",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Ineligible decreasing parameters"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "notAck (in Inference too powerful)":
    [{"id": "notAck-_LPAR_in-Inference-too-powerful_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#notAck-_LPAR_in-Inference-too-powerful_RPAR_":
       {"display": "notAck",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Inferring Well-Founded Recursion",
         "Inference too powerful"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "nonzero (in Match Patterns Follow Reduction)":
    [{"id": "nonzero-_LPAR_in-Match-Patterns-Follow-Reduction_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#nonzero-_LPAR_in-Match-Patterns-Follow-Reduction_RPAR_":
       {"display": "nonzero",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Custom Pattern Functions",
         "Match Patterns Follow Reduction"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "nonParametric (in Inconsistencies From Axioms)":
    [{"id": "nonParametric-_LPAR_in-Inconsistencies-From-Axioms_RPAR_",
      "data":
      {"/Axioms/#nonParametric-_LPAR_in-Inconsistencies-From-Axioms_RPAR_":
       {"display": "nonParametric",
        "context":
        ["The Lean Language Reference",
         "Axioms",
         "Consistency",
         "Inconsistencies From Axioms"]}},
      "address": "/Axioms/"}],
    "noConfusionDiagonal":
    [{"id": "noConfusionDiagonal",
      "data":
      {"/Basic-Types/Natural-Numbers/#noConfusionDiagonal":
       {"display": "noConfusionDiagonal",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Natural Numbers",
         "Logical Model",
         "Peano Axioms"]}},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "noConfusion":
    [{"id": "noConfusion",
      "data":
      {"/Basic-Types/Natural-Numbers/#noConfusion":
       {"display": "noConfusion",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Natural Numbers",
         "Logical Model",
         "Peano Axioms"]}},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "nine (in Subtype Coercions)":
    [{"id": "nine-_LPAR_in-Subtype-Coercions_RPAR_",
      "data":
      {"/Basic-Types/Subtypes/#nine-_LPAR_in-Subtype-Coercions_RPAR_":
       {"display": "nine",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Subtypes",
         "Subtype Coercions"]}},
      "address": "/Basic-Types/Subtypes/"}],
    "nextPrime (in Partial Functions in Proofs)":
    [{"id": "nextPrime-_LPAR_in-Partial-Functions-in-Proofs_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#nextPrime-_LPAR_in-Partial-Functions-in-Proofs_RPAR_":
       {"display": "nextPrime",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial and Unsafe Definitions",
         "Partial Functions",
         "Partial Functions in Proofs"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "nextOdd (in Axioms and Compilation)":
    [{"id": "nextOdd-_LPAR_in-Axioms-and-Compilation_RPAR_",
      "data":
      {"/Axioms/#nextOdd-_LPAR_in-Axioms-and-Compilation_RPAR_":
       {"display": "nextOdd",
        "context":
        ["The Lean Language Reference",
         "Axioms",
         "Reduction",
         "Axioms and Compilation"]}},
      "address": "/Axioms/"}],
    "neg0 (in Floating-Point Equality Is Not a Congruence)":
    [{"id": "neg0-_LPAR_in-Floating-Point-Equality-Is-Not-a-Congruence_RPAR_",
      "data":
      {"/Basic-Types/Floating-Point-Numbers/#neg0-_LPAR_in-Floating-Point-Equality-Is-Not-a-Congruence_RPAR_":
       {"display": "neg0",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Floating-Point Numbers",
         "Floating-Point Equality Is Not a Congruence"]}},
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "neg' (in Integer Negation and Addition)":
    [{"id": "neg___-_LPAR_in-Integer-Negation-and-Addition_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#neg___-_LPAR_in-Integer-Negation-and-Addition_RPAR_":
       {"display": "neg'",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Quotient API",
         "Eliminating Quotients",
         "Integer Negation and Addition"]}},
      "address": "/The-Type-System/Quotients/"}],
    "natWriter (in Dependent Coercion to Functions)":
    [{"id": "natWriter-_LPAR_in-Dependent-Coercion-to-Functions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#natWriter-_LPAR_in-Dependent-Coercion-to-Functions_RPAR_":
       {"display": "natWriter",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Dependent Coercion to Functions"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "n (in Mutual Block Scope)":
    [{"id": "n-_LPAR_in-Mutual-Block-Scope_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#n-_LPAR_in-Mutual-Block-Scope_RPAR_-next":
       {"display": "n",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Mutual Recursion",
         "Mutual Block Scope"]},
       "/Definitions/Recursive-Definitions/#n-_LPAR_in-Mutual-Block-Scope_RPAR_":
       {"display": "n",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Mutual Recursion",
         "Mutual Block Scope"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "n-_LPAR_in-Mutual-Block-Scope_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#n-_LPAR_in-Mutual-Block-Scope_RPAR_-next":
       {"display": "n",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Mutual Recursion",
         "Mutual Block Scope"]},
       "/Definitions/Recursive-Definitions/#n-_LPAR_in-Mutual-Block-Scope_RPAR_":
       {"display": "n",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Mutual Recursion",
         "Mutual Block Scope"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "n (in Attempting to define multiple opaque constants at once)":
    [{"id":
      "n-_LPAR_in-Attempting-to-define-multiple-opaque-constants-at-once_RPAR_",
      "data":
      {"/Error-Explanations/lean___inferBinderTypeFailed/#n-_LPAR_in-Attempting-to-define-multiple-opaque-constants-at-once_RPAR_":
       {"display": "n",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple opaque constants at once"]}},
      "address": "/Error-Explanations/lean___inferBinderTypeFailed/"}],
    "mustBeEqual (in Parameter Scope)":
    [{"id": "mustBeEqual-_LPAR_in-Parameter-Scope_RPAR_",
      "data":
      {"/Definitions/Headers-and-Signatures/#mustBeEqual-_LPAR_in-Parameter-Scope_RPAR_":
       {"display": "mustBeEqual",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Bracketed Parameter Bindings",
         "Parameter Scope"]}},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "mkStx (in Optional Splices)":
    [{"id": "mkStx-_LPAR_in-Optional-Splices_RPAR_",
      "data":
      {"/Notations-and-Macros/Macros/#mkStx-_LPAR_in-Optional-Splices_RPAR_":
       {"display": "mkStx",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Macros",
         "Quotation",
         "Splices",
         "Optional Splices"]}},
      "address": "/Notations-and-Macros/Macros/"}],
    "min' (in Structural Recursion Under Pairs)":
    [{"id": "min___-_LPAR_in-Structural-Recursion-Under-Pairs_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#min___-_LPAR_in-Structural-Recursion-Under-Pairs_RPAR_-next":
       {"display": "min'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Structural Recursion Under Pairs"]},
       "/Definitions/Recursive-Definitions/#min___-_LPAR_in-Structural-Recursion-Under-Pairs_RPAR_":
       {"display": "min'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Structural Recursion Under Pairs"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "min___-_LPAR_in-Structural-Recursion-Under-Pairs_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#min___-_LPAR_in-Structural-Recursion-Under-Pairs_RPAR_-next":
       {"display": "min'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Structural Recursion Under Pairs"]},
       "/Definitions/Recursive-Definitions/#min___-_LPAR_in-Structural-Recursion-Under-Pairs_RPAR_":
       {"display": "min'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Structural Recursion Under Pairs"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "min' (in Simultaneous Matching vs Matching Pairs for Structural Recursion)":
    [{"id":
      "min___-_LPAR_in-Simultaneous-Matching-vs-Matching-Pairs-for-Structural-Recursion_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#min___-_LPAR_in-Simultaneous-Matching-vs-Matching-Pairs-for-Structural-Recursion_RPAR_-next":
       {"display": "min'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Simultaneous Matching vs Matching Pairs for Structural Recursion"]},
       "/Definitions/Recursive-Definitions/#min___-_LPAR_in-Simultaneous-Matching-vs-Matching-Pairs-for-Structural-Recursion_RPAR_":
       {"display": "min'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Simultaneous Matching vs Matching Pairs for Structural Recursion"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id":
      "min___-_LPAR_in-Simultaneous-Matching-vs-Matching-Pairs-for-Structural-Recursion_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#min___-_LPAR_in-Simultaneous-Matching-vs-Matching-Pairs-for-Structural-Recursion_RPAR_-next":
       {"display": "min'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Simultaneous Matching vs Matching Pairs for Structural Recursion"]},
       "/Definitions/Recursive-Definitions/#min___-_LPAR_in-Simultaneous-Matching-vs-Matching-Pairs-for-Structural-Recursion_RPAR_":
       {"display": "min'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Simultaneous Matching vs Matching Pairs for Structural Recursion"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "map (in No Automatic Implicit Parameters)":
    [{"id": "map-_LPAR_in-No-Automatic-Implicit-Parameters_RPAR_",
      "data":
      {"/Definitions/Headers-and-Signatures/#map-_LPAR_in-No-Automatic-Implicit-Parameters_RPAR_-next":
       {"display": "map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "No Automatic Implicit Parameters"]},
       "/Definitions/Headers-and-Signatures/#map-_LPAR_in-No-Automatic-Implicit-Parameters_RPAR_":
       {"display": "map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "No Automatic Implicit Parameters"]}},
      "address": "/Definitions/Headers-and-Signatures/"},
     {"id": "map-_LPAR_in-No-Automatic-Implicit-Parameters_RPAR_-next",
      "data":
      {"/Definitions/Headers-and-Signatures/#map-_LPAR_in-No-Automatic-Implicit-Parameters_RPAR_-next":
       {"display": "map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "No Automatic Implicit Parameters"]},
       "/Definitions/Headers-and-Signatures/#map-_LPAR_in-No-Automatic-Implicit-Parameters_RPAR_":
       {"display": "map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "No Automatic Implicit Parameters"]}},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "map (in Automatic Implicit Parameters)":
    [{"id": "map-_LPAR_in-Automatic-Implicit-Parameters_RPAR_",
      "data":
      {"/Definitions/Headers-and-Signatures/#map-_LPAR_in-Automatic-Implicit-Parameters_RPAR_":
       {"display": "map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Automatic Implicit Parameters"]}},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "map (in Automatic Implicit Parameters and Universe Polymorphism)":
    [{"id":
      "map-_LPAR_in-Automatic-Implicit-Parameters-and-Universe-Polymorphism_RPAR_-next",
      "data":
      {"/The-Type-System/Universes/#map-_LPAR_in-Automatic-Implicit-Parameters-and-Universe-Polymorphism_RPAR_-next":
       {"display": "map",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe Variable Bindings",
         "Automatic Implicit Parameters and Universe Polymorphism"]},
       "/The-Type-System/Universes/#map-_LPAR_in-Automatic-Implicit-Parameters-and-Universe-Polymorphism_RPAR_":
       {"display": "map",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe Variable Bindings",
         "Automatic Implicit Parameters and Universe Polymorphism"]}},
      "address": "/The-Type-System/Universes/"},
     {"id":
      "map-_LPAR_in-Automatic-Implicit-Parameters-and-Universe-Polymorphism_RPAR_",
      "data":
      {"/The-Type-System/Universes/#map-_LPAR_in-Automatic-Implicit-Parameters-and-Universe-Polymorphism_RPAR_-next":
       {"display": "map",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe Variable Bindings",
         "Automatic Implicit Parameters and Universe Polymorphism"]},
       "/The-Type-System/Universes/#map-_LPAR_in-Automatic-Implicit-Parameters-and-Universe-Polymorphism_RPAR_":
       {"display": "map",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe Variable Bindings",
         "Automatic Implicit Parameters and Universe Polymorphism"]}},
      "address": "/The-Type-System/Universes/"}],
    "main (in Throwing and Catching Errors)":
    [{"id": "main-_LPAR_in-Throwing-and-Catching-Errors_RPAR_",
      "data":
      {"/IO/Logical-Model/#main-_LPAR_in-Throwing-and-Catching-Errors_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "IO",
         "Logical Model",
         "Errors and Error Handling in  IO",
         "Throwing and Catching Errors"]}},
      "address": "/IO/Logical-Model/"}],
    "main (in Running a Program)":
    [{"id": "main-_LPAR_in-Running-a-Program_RPAR_",
      "data":
      {"/IO/Processes/#main-_LPAR_in-Running-a-Program_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "IO",
         "Processes",
         "Running Processes",
         "Running a Program"]}},
      "address": "/IO/Processes/"}],
    "main (in Running a Program on a File)":
    [{"id": "main-_LPAR_in-Running-a-Program-on-a-File_RPAR_",
      "data":
      {"/IO/Processes/#main-_LPAR_in-Running-a-Program-on-a-File_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "IO",
         "Processes",
         "Running Processes",
         "Running a Program on a File"]}},
      "address": "/IO/Processes/"}],
    "main (in Reference Cells as Locks)":
    [{"id": "main-_LPAR_in-Reference-Cells-as-Locks_RPAR_",
      "data":
      {"/IO/Mutable-References/#main-_LPAR_in-Reference-Cells-as-Locks_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "IO",
         "Mutable References",
         "Concurrency",
         "Reference Cells as Locks"]}},
      "address": "/IO/Mutable-References/"}],
    "main (in Reading from Standard Input)":
    [{"id": "main-_LPAR_in-Reading-from-Standard-Input_RPAR_",
      "data":
      {"/IO/Files___-File-Handles___-and-Streams/#main-_LPAR_in-Reading-from-Standard-Input_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "IO",
         "Files, File Handles, and Streams",
         "Standard I/O",
         "Reading from Standard Input"]}},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "main (in Printing)":
    [{"id": "main-_LPAR_in-Printing_RPAR_",
      "data":
      {"/IO/Console-Output/#main-_LPAR_in-Printing_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference", "IO", "Console Output", "Printing"]}},
      "address": "/IO/Console-Output/"}],
    "main (in One File, Multiple Handles)":
    [{"id": "main-_LPAR_in-One-File___-Multiple-Handles_RPAR_",
      "data":
      {"/IO/Files___-File-Handles___-and-Streams/#main-_LPAR_in-One-File___-Multiple-Handles_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "IO",
         "Files, File Handles, and Streams",
         "Low-Level File API",
         "One File, Multiple Handles"]}},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "main (in Observing Uniqueness)":
    [{"id": "main-_LPAR_in-Observing-Uniqueness_RPAR_-next",
      "data":
      {"/Run-Time-Code/Reference-Counting/#main-_LPAR_in-Observing-Uniqueness_RPAR_-next":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "Run-Time Code",
         "Reference Counting",
         "Observing Uniqueness",
         "Observing Uniqueness"]},
       "/Run-Time-Code/Reference-Counting/#main-_LPAR_in-Observing-Uniqueness_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "Run-Time Code",
         "Reference Counting",
         "Observing Uniqueness",
         "Observing Uniqueness"]}},
      "address": "/Run-Time-Code/Reference-Counting/"},
     {"id": "main-_LPAR_in-Observing-Uniqueness_RPAR_",
      "data":
      {"/Run-Time-Code/Reference-Counting/#main-_LPAR_in-Observing-Uniqueness_RPAR_-next":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "Run-Time Code",
         "Reference Counting",
         "Observing Uniqueness",
         "Observing Uniqueness"]},
       "/Run-Time-Code/Reference-Counting/#main-_LPAR_in-Observing-Uniqueness_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "Run-Time Code",
         "Reference Counting",
         "Observing Uniqueness",
         "Observing Uniqueness"]}},
      "address": "/Run-Time-Code/Reference-Counting/"}],
    "main (in Monadic Collection Operations)":
    [{"id": "main-_LPAR_in-Monadic-Collection-Operations_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/API-Reference/#main-_LPAR_in-Monadic-Collection-Operations_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "API Reference",
         "Monadic Collection Operations"]}},
      "address": "/Functors___-Monads-and--do--Notation/API-Reference/"}],
    "main (in Infix  Functor  and  Applicative  Operators)":
    [{"id": "main-_LPAR_in-Infix--Functor--and--Applicative--Operators_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Syntax/#main-_LPAR_in-Infix--Functor--and--Applicative--Operators_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Syntax",
         "Infix Operators",
         "Applicative Functors",
         "Infix  Functor  and  Applicative  Operators"]}},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "main (in Dependent Pairs with Data)":
    [{"id": "main-_LPAR_in-Dependent-Pairs-with-Data_RPAR_",
      "data":
      {"/Basic-Types/Tuples/#main-_LPAR_in-Dependent-Pairs-with-Data_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Tuples",
         "Dependent Pairs",
         "Dependent Pairs with Data"]}},
      "address": "/Basic-Types/Tuples/"}],
    "main (in Data races with  get  and  set)":
    [{"id": "main-_LPAR_in-Data-races-with--get--and--set_RPAR_",
      "data":
      {"/IO/Mutable-References/#main-_LPAR_in-Data-races-with--get--and--set_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "IO",
         "Mutable References",
         "State Transformers",
         "Reading and Writing",
         "Data races with  get  and  set"]}},
      "address": "/IO/Mutable-References/"}],
    "main (in Closing a Subprocess's Standard Input)":
    [{"id": "main-_LPAR_in-Closing-a-Subprocess___s-Standard-Input_RPAR_",
      "data":
      {"/IO/Processes/#main-_LPAR_in-Closing-a-Subprocess___s-Standard-Input_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "IO",
         "Processes",
         "Running Processes",
         "Closing a Subprocess's Standard Input"]}},
      "address": "/IO/Processes/"}],
    "main (in Checking Exit Codes)":
    [{"id": "main-_LPAR_in-Checking-Exit-Codes_RPAR_",
      "data":
      {"/IO/Processes/#main-_LPAR_in-Checking-Exit-Codes_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "IO",
         "Processes",
         "Running Processes",
         "Checking Exit Codes"]}},
      "address": "/IO/Processes/"}],
    "main (in Avoiding data races with  modify)":
    [{"id": "main-_LPAR_in-Avoiding-data-races-with--modify_RPAR_",
      "data":
      {"/IO/Mutable-References/#main-_LPAR_in-Avoiding-data-races-with--modify_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "IO",
         "Mutable References",
         "State Transformers",
         "Reading and Writing",
         "Avoiding data races with  modify"]}},
      "address": "/IO/Mutable-References/"}],
    "main (in Asynchronous Subprocesses)":
    [{"id": "main-_LPAR_in-Asynchronous-Subprocesses_RPAR_",
      "data":
      {"/IO/Processes/#main-_LPAR_in-Asynchronous-Subprocesses_RPAR_":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "IO",
         "Processes",
         "Running Processes",
         "Asynchronous Subprocesses"]}},
      "address": "/IO/Processes/"}],
    "main":
    [{"id": "main",
      "data":
      {"/Functors___-Monads-and--do--Notation/Syntax/#main":
       {"display": "main",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Syntax",
         "Infix Operators",
         "Applicative Functors"]}},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "m (in Attempting to define multiple opaque constants at once)":
    [{"id":
      "m-_LPAR_in-Attempting-to-define-multiple-opaque-constants-at-once_RPAR_",
      "data":
      {"/Error-Explanations/lean___inferBinderTypeFailed/#m-_LPAR_in-Attempting-to-define-multiple-opaque-constants-at-once_RPAR_":
       {"display": "m",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple opaque constants at once"]}},
      "address": "/Error-Explanations/lean___inferBinderTypeFailed/"}],
    "lsts (in Widths and Newlines)":
    [{"id": "lsts-_LPAR_in-Widths-and-Newlines_RPAR_",
      "data":
      {"/Interacting-with-Lean/#lsts-_LPAR_in-Widths-and-Newlines_RPAR_":
       {"display": "lsts",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Format",
         "Widths and Newlines"]}},
      "address": "/Interacting-with-Lean/"}],
    "lst (in Widths and Newlines)":
    [{"id": "lst-_LPAR_in-Widths-and-Newlines_RPAR_",
      "data":
      {"/Interacting-with-Lean/#lst-_LPAR_in-Widths-and-Newlines_RPAR_":
       {"display": "lst",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Format",
         "Widths and Newlines"]}},
      "address": "/Interacting-with-Lean/"}],
    "loop (in Loops are Tail Recursive Functions)":
    [{"id": "loop-_LPAR_in-Loops-are-Tail-Recursive-Functions_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#loop-_LPAR_in-Loops-are-Tail-Recursive-Functions_RPAR_":
       {"display": "loop",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial Fixpoint Recursion",
         "Tail-Recursive Functions",
         "Loops are Tail Recursive Functions"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "location (in where  for structures)":
    [{"id": "location-_LPAR_in-where--for-structures_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#location-_LPAR_in-where--for-structures_RPAR_":
       {"display": "location",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "where  for structures"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "listLen (in Matching on Complex Expressions Can Prevent Elaboration)":
    [{"id":
      "listLen-_LPAR_in-Matching-on-Complex-Expressions-Can-Prevent-Elaboration_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#listLen-_LPAR_in-Matching-on-Complex-Expressions-Can-Prevent-Elaboration_RPAR_":
       {"display": "listLen",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Matching on Complex Expressions Can Prevent Elaboration"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "last?' (in Pattern Equality Proofs)":
    [{"id": "last______-_LPAR_in-Pattern-Equality-Proofs_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#last______-_LPAR_in-Pattern-Equality-Proofs_RPAR_":
       {"display": "last?'",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Pattern Equality Proofs",
         "Pattern Equality Proofs"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "last? (in Pattern Equality Proofs)":
    [{"id": "last___-_LPAR_in-Pattern-Equality-Proofs_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#last___-_LPAR_in-Pattern-Equality-Proofs_RPAR_":
       {"display": "last?",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Pattern Equality Proofs",
         "Pattern Equality Proofs"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "isZero' (in Pattern-Matching Functions)":
    [{"id": "isZero___-_LPAR_in-Pattern-Matching-Functions_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#isZero___-_LPAR_in-Pattern-Matching-Functions_RPAR_":
       {"display": "isZero'",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Pattern Matching Functions",
         "Pattern-Matching Functions"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "isZero (in Pattern-Matching Functions)":
    [{"id": "isZero-_LPAR_in-Pattern-Matching-Functions_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#isZero-_LPAR_in-Pattern-Matching-Functions_RPAR_":
       {"display": "isZero",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Pattern Matching Functions",
         "Pattern-Matching Functions"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "isPrime (in Partial Functions in Proofs)":
    [{"id": "isPrime-_LPAR_in-Partial-Functions-in-Proofs_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#isPrime-_LPAR_in-Partial-Functions-in-Proofs_RPAR_":
       {"display": "isPrime",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial and Unsafe Definitions",
         "Partial Functions",
         "Partial Functions in Proofs"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "iota_succ (in Increasing E-matching Limits)":
    [{"id": "iota_succ-_LPAR_in-Increasing-E-matching-Limits_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#iota_succ-_LPAR_in-Increasing-E-matching-Limits_RPAR_":
       {"display": "iota_succ",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Resource Limits",
         "Increasing E-matching Limits"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "iota (in Increasing E-matching Limits)":
    [{"id": "iota-_LPAR_in-Increasing-E-matching-Limits_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#iota-_LPAR_in-Increasing-E-matching-Limits_RPAR_":
       {"display": "iota",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Resource Limits",
         "Increasing E-matching Limits"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "inv_eq (in The  @[grind ←=]  Attribute)":
    [{"id": "inv_eq-_LPAR_in-The--____LSQ_grind-_______RSQ_--Attribute_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#inv_eq-_LPAR_in-The--____LSQ_grind-_______RSQ_--Attribute_RPAR_":
       {"display": "inv_eq",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Patterns",
         "The  @[grind ←=]  Attribute"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "intersperse (in Printing Equations)":
    [{"id": "intersperse-_LPAR_in-Printing-Equations_RPAR_",
      "data":
      {"/Interacting-with-Lean/#intersperse-_LPAR_in-Printing-Equations_RPAR_":
       {"display": "intersperse",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Querying the Context",
         "Printing Equations"]}},
      "address": "/Interacting-with-Lean/"}],
    "interestingName (in Querying the Environment)":
    [{"id": "interestingName-_LPAR_in-Querying-the-Environment_RPAR_",
      "data":
      {"/Notations-and-Macros/Elaborators/#interestingName-_LPAR_in-Querying-the-Environment_RPAR_":
       {"display": "interestingName",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Elaborators",
         "Command Elaborators",
         "Querying the Environment"]}},
      "address": "/Notations-and-Macros/Elaborators/"}],
    "instDecidableEqStringList (in A recursive instance for a sum class)":
    [{"id":
      "instDecidableEqStringList-_LPAR_in-A-recursive-instance-for-a-sum-class_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#instDecidableEqStringList-_LPAR_in-A-recursive-instance-for-a-sum-class_RPAR_":
       {"display": "instDecidableEqStringList",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Instances of  class inductive s",
         "A recursive instance for a sum class"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "instCommRingR":
    [{"id": "instCommRingR",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#instCommRingR":
       {"display": "instCommRingR",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "Integrating  grind 's Features"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "instBeqNatWrapper (in Variations in Instance Definitions)":
    [{"id":
      "instBeqNatWrapper-_LPAR_in-Variations-in-Instance-Definitions_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#instBeqNatWrapper-_LPAR_in-Variations-in-Instance-Definitions_RPAR_":
       {"display": "instBeqNatWrapper",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Variations in Instance Definitions"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "incrOrFail (in Lifting Transformed Monads)":
    [{"id": "incrOrFail-_LPAR_in-Lifting-Transformed-Monads_RPAR_-next",
      "data":
      {"/Functors___-Monads-and--do--Notation/Lifting-Monads/#incrOrFail-_LPAR_in-Lifting-Transformed-Monads_RPAR_-next":
       {"display": "incrOrFail",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lifting Monads",
         "Lifting Transformed Monads"]},
       "/Functors___-Monads-and--do--Notation/Lifting-Monads/#incrOrFail-_LPAR_in-Lifting-Transformed-Monads_RPAR_":
       {"display": "incrOrFail",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lifting Monads",
         "Lifting Transformed Monads"]}},
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"},
     {"id": "incrOrFail-_LPAR_in-Lifting-Transformed-Monads_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Lifting-Monads/#incrOrFail-_LPAR_in-Lifting-Transformed-Monads_RPAR_-next":
       {"display": "incrOrFail",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lifting Monads",
         "Lifting Transformed Monads"]},
       "/Functors___-Monads-and--do--Notation/Lifting-Monads/#incrOrFail-_LPAR_in-Lifting-Transformed-Monads_RPAR_":
       {"display": "incrOrFail",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lifting Monads",
         "Lifting Transformed Monads"]}},
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "incrBy (in Lifting Transformed Monads)":
    [{"id": "incrBy-_LPAR_in-Lifting-Transformed-Monads_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Lifting-Monads/#incrBy-_LPAR_in-Lifting-Transformed-Monads_RPAR_-next":
       {"display": "incrBy",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lifting Monads",
         "Lifting Transformed Monads"]},
       "/Functors___-Monads-and--do--Notation/Lifting-Monads/#incrBy-_LPAR_in-Lifting-Transformed-Monads_RPAR_":
       {"display": "incrBy",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lifting Monads",
         "Lifting Transformed Monads"]}},
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"},
     {"id": "incrBy-_LPAR_in-Lifting-Transformed-Monads_RPAR_-next",
      "data":
      {"/Functors___-Monads-and--do--Notation/Lifting-Monads/#incrBy-_LPAR_in-Lifting-Transformed-Monads_RPAR_-next":
       {"display": "incrBy",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lifting Monads",
         "Lifting Transformed Monads"]},
       "/Functors___-Monads-and--do--Notation/Lifting-Monads/#incrBy-_LPAR_in-Lifting-Transformed-Monads_RPAR_":
       {"display": "incrBy",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lifting Monads",
         "Lifting Transformed Monads"]}},
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "id₃ (in The  universe  command when  autoImplicit  is  false)":
    [{"id":
      "id___-_LPAR_in-The--universe--command-when--autoImplicit--is--false_RPAR_",
      "data":
      {"/The-Type-System/Universes/#id___-_LPAR_in-The--universe--command-when--autoImplicit--is--false_RPAR_":
       {"display": "id₃",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe Variable Bindings",
         "The  universe  command when  autoImplicit  is  false"]}},
      "address": "/The-Type-System/Universes/"}],
    "identity (in Mutual Block Scope and Automatic Implicit Parameters)":
    [{"id":
      "identity-_LPAR_in-Mutual-Block-Scope-and-Automatic-Implicit-Parameters_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#identity-_LPAR_in-Mutual-Block-Scope-and-Automatic-Implicit-Parameters_RPAR_-next":
       {"display": "identity",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Mutual Recursion",
         "Mutual Block Scope and Automatic Implicit Parameters"]},
       "/Definitions/Recursive-Definitions/#identity-_LPAR_in-Mutual-Block-Scope-and-Automatic-Implicit-Parameters_RPAR_":
       {"display": "identity",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Mutual Recursion",
         "Mutual Block Scope and Automatic Implicit Parameters"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id":
      "identity-_LPAR_in-Mutual-Block-Scope-and-Automatic-Implicit-Parameters_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#identity-_LPAR_in-Mutual-Block-Scope-and-Automatic-Implicit-Parameters_RPAR_-next":
       {"display": "identity",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Mutual Recursion",
         "Mutual Block Scope and Automatic Implicit Parameters"]},
       "/Definitions/Recursive-Definitions/#identity-_LPAR_in-Mutual-Block-Scope-and-Automatic-Implicit-Parameters_RPAR_":
       {"display": "identity",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Mutual Recursion",
         "Mutual Block Scope and Automatic Implicit Parameters"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "identity (in Definition type uninferrable due to unknown parameter type)":
    [{"id":
      "identity-_LPAR_in-Definition-type-uninferrable-due-to-unknown-parameter-type_RPAR_",
      "data":
      {"/Error-Explanations/lean___inferDefTypeFailed/#identity-_LPAR_in-Definition-type-uninferrable-due-to-unknown-parameter-type_RPAR_":
       {"display": "identity",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferDefTypeFailed",
         "Examples",
         "Definition type uninferrable due to unknown parameter type"]}},
      "address": "/Error-Explanations/lean___inferDefTypeFailed/"}],
    "identity (in Binder type requires new type variable)":
    [{"id": "identity-_LPAR_in-Binder-type-requires-new-type-variable_RPAR_",
      "data":
      {"/Error-Explanations/lean___inferBinderTypeFailed/#identity-_LPAR_in-Binder-type-requires-new-type-variable_RPAR_":
       {"display": "identity",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Binder type requires new type variable"]}},
      "address": "/Error-Explanations/lean___inferBinderTypeFailed/"}],
    "id'":
    [{"id": "id___",
      "data":
      {"/The-Type-System/Universes/#id___":
       {"display": "id'",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism"]}},
      "address": "/The-Type-System/Universes/"}],
    "h₆ (in Left-to-Right Generation)":
    [{"id": "h___-_LPAR_in-Left-to-Right-Generation_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#h___-_LPAR_in-Left-to-Right-Generation_RPAR_":
       {"display": "h₆",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Inspecting Patterns",
         "Left-to-Right Generation"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "h₅ (in Failing Backward Pattern Generation)":
    [{"id": "h___-_LPAR_in-Failing-Backward-Pattern-Generation_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#h___-_LPAR_in-Failing-Backward-Pattern-Generation_RPAR_":
       {"display": "h₅",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Inspecting Patterns",
         "Failing Backward Pattern Generation"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "h₄ (in Patterns from Conclusion and Hypotheses)":
    [{"id": "h___-_LPAR_in-Patterns-from-Conclusion-and-Hypotheses_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#h___-_LPAR_in-Patterns-from-Conclusion-and-Hypotheses_RPAR_":
       {"display": "h₄",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Inspecting Patterns",
         "Patterns from Conclusion and Hypotheses"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "h₃ (in Bidirectional Equality Pattern Generation)":
    [{"id": "h___-_LPAR_in-Bidirectional-Equality-Pattern-Generation_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#h___-_LPAR_in-Bidirectional-Equality-Pattern-Generation_RPAR_":
       {"display": "h₃",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Inspecting Patterns",
         "Bidirectional Equality Pattern Generation"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "h₂ (in Backward Pattern Generation)":
    [{"id": "h___-_LPAR_in-Backward-Pattern-Generation_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#h___-_LPAR_in-Backward-Pattern-Generation_RPAR_":
       {"display": "h₂",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Inspecting Patterns",
         "Backward Pattern Generation"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "h₁ (in Forward Pattern Generation)":
    [{"id": "h___-_LPAR_in-Forward-Pattern-Generation_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#h___-_LPAR_in-Forward-Pattern-Generation_RPAR_":
       {"display": "h₁",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Inspecting Patterns",
         "Forward Pattern Generation"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "helper (in Recursion vs Recursors)":
    [{"id": "helper-_LPAR_in-Recursion-vs-Recursors_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#helper-_LPAR_in-Recursion-vs-Recursors_RPAR_":
       {"display": "helper",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Recursion vs Recursors"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "hello (in Reducibility and Instance Synthesis)":
    [{"id": "hello-_LPAR_in-Reducibility-and-Instance-Synthesis_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#hello-_LPAR_in-Reducibility-and-Instance-Synthesis_RPAR_":
       {"display": "hello",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Instance Synthesis"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "hello":
    [{"id": "hello",
      "data":
      {"/Introduction/#hello":
       {"display": "hello",
        "context":
        ["The Lean Language Reference",
         "Introduction",
         "Typographical Conventions",
         "Lean Code"]}},
      "address": "/Introduction/"}],
    "half''' (in Recursion vs Recursors)":
    [{"id": "half_________-_LPAR_in-Recursion-vs-Recursors_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#half_________-_LPAR_in-Recursion-vs-Recursors_RPAR_":
       {"display": "half'''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Recursion vs Recursors"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "half'' (in Recursion vs Recursors)":
    [{"id": "half______-_LPAR_in-Recursion-vs-Recursors_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#half______-_LPAR_in-Recursion-vs-Recursors_RPAR_":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Recursion vs Recursors"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "half'' (in Elaboration Walkthrough)":
    [{"id": "half______-_LPAR_in-Elaboration-Walkthrough_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#half______-_LPAR_in-Elaboration-Walkthrough_RPAR_-next-next-next":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half______-_LPAR_in-Elaboration-Walkthrough_RPAR_-next-next":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half______-_LPAR_in-Elaboration-Walkthrough_RPAR_-next":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half______-_LPAR_in-Elaboration-Walkthrough_RPAR_":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "half______-_LPAR_in-Elaboration-Walkthrough_RPAR_-next-next",
      "data":
      {"/Definitions/Recursive-Definitions/#half______-_LPAR_in-Elaboration-Walkthrough_RPAR_-next-next-next":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half______-_LPAR_in-Elaboration-Walkthrough_RPAR_-next-next":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half______-_LPAR_in-Elaboration-Walkthrough_RPAR_-next":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half______-_LPAR_in-Elaboration-Walkthrough_RPAR_":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id":
      "half______-_LPAR_in-Elaboration-Walkthrough_RPAR_-next-next-next",
      "data":
      {"/Definitions/Recursive-Definitions/#half______-_LPAR_in-Elaboration-Walkthrough_RPAR_-next-next-next":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half______-_LPAR_in-Elaboration-Walkthrough_RPAR_-next-next":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half______-_LPAR_in-Elaboration-Walkthrough_RPAR_-next":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half______-_LPAR_in-Elaboration-Walkthrough_RPAR_":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "half______-_LPAR_in-Elaboration-Walkthrough_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#half______-_LPAR_in-Elaboration-Walkthrough_RPAR_-next-next-next":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half______-_LPAR_in-Elaboration-Walkthrough_RPAR_-next-next":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half______-_LPAR_in-Elaboration-Walkthrough_RPAR_-next":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half______-_LPAR_in-Elaboration-Walkthrough_RPAR_":
       {"display": "half''",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "half' (in Recursion vs Recursors)":
    [{"id": "half___-_LPAR_in-Recursion-vs-Recursors_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#half___-_LPAR_in-Recursion-vs-Recursors_RPAR_":
       {"display": "half'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Recursion vs Recursors"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "half' (in Elaboration Walkthrough)":
    [{"id": "half___-_LPAR_in-Elaboration-Walkthrough_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#half___-_LPAR_in-Elaboration-Walkthrough_RPAR_":
       {"display": "half'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "half (in Specifying Decreasing Parameters)":
    [{"id": "half-_LPAR_in-Specifying-Decreasing-Parameters_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#half-_LPAR_in-Specifying-Decreasing-Parameters_RPAR_-next":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Specifying Decreasing Parameters"]},
       "/Definitions/Recursive-Definitions/#half-_LPAR_in-Specifying-Decreasing-Parameters_RPAR_":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Specifying Decreasing Parameters"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "half-_LPAR_in-Specifying-Decreasing-Parameters_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#half-_LPAR_in-Specifying-Decreasing-Parameters_RPAR_-next":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Specifying Decreasing Parameters"]},
       "/Definitions/Recursive-Definitions/#half-_LPAR_in-Specifying-Decreasing-Parameters_RPAR_":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Specifying Decreasing Parameters"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "half (in Recursion vs Recursors)":
    [{"id": "half-_LPAR_in-Recursion-vs-Recursors_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#half-_LPAR_in-Recursion-vs-Recursors_RPAR_":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Recursion vs Recursors"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "half (in Matching on Complex Expressions Can Prevent Elaboration)":
    [{"id":
      "half-_LPAR_in-Matching-on-Complex-Expressions-Can-Prevent-Elaboration_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#half-_LPAR_in-Matching-on-Complex-Expressions-Can-Prevent-Elaboration_RPAR_-next":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Matching on Complex Expressions Can Prevent Elaboration"]},
       "/Definitions/Recursive-Definitions/#half-_LPAR_in-Matching-on-Complex-Expressions-Can-Prevent-Elaboration_RPAR_":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Matching on Complex Expressions Can Prevent Elaboration"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id":
      "half-_LPAR_in-Matching-on-Complex-Expressions-Can-Prevent-Elaboration_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#half-_LPAR_in-Matching-on-Complex-Expressions-Can-Prevent-Elaboration_RPAR_-next":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Matching on Complex Expressions Can Prevent Elaboration"]},
       "/Definitions/Recursive-Definitions/#half-_LPAR_in-Matching-on-Complex-Expressions-Can-Prevent-Elaboration_RPAR_":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Matching on Complex Expressions Can Prevent Elaboration"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "half (in Inferred Termination Annotations)":
    [{"id": "half-_LPAR_in-Inferred-Termination-Annotations_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#half-_LPAR_in-Inferred-Termination-Annotations_RPAR_":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Inferring Structural Recursion",
         "Inferred Termination Annotations"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "half (in Inaccessible Patterns)":
    [{"id": "half-_LPAR_in-Inaccessible-Patterns_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#half-_LPAR_in-Inaccessible-Patterns_RPAR_":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Inaccessible Patterns"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "half (in Elaboration Walkthrough)":
    [{"id": "half-_LPAR_in-Elaboration-Walkthrough_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#half-_LPAR_in-Elaboration-Walkthrough_RPAR_-next-next":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half-_LPAR_in-Elaboration-Walkthrough_RPAR_-next":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half-_LPAR_in-Elaboration-Walkthrough_RPAR_":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "half-_LPAR_in-Elaboration-Walkthrough_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#half-_LPAR_in-Elaboration-Walkthrough_RPAR_-next-next":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half-_LPAR_in-Elaboration-Walkthrough_RPAR_-next":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half-_LPAR_in-Elaboration-Walkthrough_RPAR_":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "half-_LPAR_in-Elaboration-Walkthrough_RPAR_-next-next",
      "data":
      {"/Definitions/Recursive-Definitions/#half-_LPAR_in-Elaboration-Walkthrough_RPAR_-next-next":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half-_LPAR_in-Elaboration-Walkthrough_RPAR_-next":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]},
       "/Definitions/Recursive-Definitions/#half-_LPAR_in-Elaboration-Walkthrough_RPAR_":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Elaboration Walkthrough"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "gt1 (in E-matching and Pattern Matching)":
    [{"id": "gt1-_LPAR_in-E-matching-and-Pattern-Matching_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#gt1-_LPAR_in-E-matching-and-Pattern-Matching_RPAR_":
       {"display": "gt1",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Resource Limits",
         "E-matching and Pattern Matching"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "grouped (in Grouping and Filling)":
    [{"id": "grouped-_LPAR_in-Grouping-and-Filling_RPAR_",
      "data":
      {"/Interacting-with-Lean/#grouped-_LPAR_in-Grouping-and-Filling_RPAR_":
       {"display": "grouped",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Format",
         "Grouping and Filling"]}},
      "address": "/Interacting-with-Lean/"}],
    "goodMorning (in Reducibility and Instance Synthesis)":
    [{"id": "goodMorning-_LPAR_in-Reducibility-and-Instance-Synthesis_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#goodMorning-_LPAR_in-Reducibility-and-Instance-Synthesis_RPAR_":
       {"display": "goodMorning",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Instance Synthesis"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "goodEvening (in Reducibility and Instance Synthesis)":
    [{"id": "goodEvening-_LPAR_in-Reducibility-and-Instance-Synthesis_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#goodEvening-_LPAR_in-Reducibility-and-Instance-Synthesis_RPAR_":
       {"display": "goodEvening",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Instance Synthesis"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "gf (in Selecting Patterns)":
    [{"id": "gf-_LPAR_in-Selecting-Patterns_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#gf-_LPAR_in-Selecting-Patterns_RPAR_":
       {"display": "gf",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Patterns",
         "Selecting Patterns"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "gf (in E-matching Patterns)":
    [{"id": "gf-_LPAR_in-E-matching-Patterns_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#gf-_LPAR_in-E-matching-Patterns_RPAR_":
       {"display": "gf",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Patterns",
         "E-matching Patterns"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "getWitness (in Extracting the witness from an existential proof)":
    [{"id":
      "getWitness-_LPAR_in-Extracting-the-witness-from-an-existential-proof_RPAR_",
      "data":
      {"/Error-Explanations/lean___propRecLargeElim/#getWitness-_LPAR_in-Extracting-the-witness-from-an-existential-proof_RPAR_-next":
       {"display": "getWitness",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.propRecLargeElim",
         "Examples",
         "Extracting the witness from an existential proof"]},
       "/Error-Explanations/lean___propRecLargeElim/#getWitness-_LPAR_in-Extracting-the-witness-from-an-existential-proof_RPAR_":
       {"display": "getWitness",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.propRecLargeElim",
         "Examples",
         "Extracting the witness from an existential proof"]}},
      "address": "/Error-Explanations/lean___propRecLargeElim/"},
     {"id":
      "getWitness-_LPAR_in-Extracting-the-witness-from-an-existential-proof_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___propRecLargeElim/#getWitness-_LPAR_in-Extracting-the-witness-from-an-existential-proof_RPAR_-next":
       {"display": "getWitness",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.propRecLargeElim",
         "Examples",
         "Extracting the witness from an existential proof"]},
       "/Error-Explanations/lean___propRecLargeElim/#getWitness-_LPAR_in-Extracting-the-witness-from-an-existential-proof_RPAR_":
       {"display": "getWitness",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.propRecLargeElim",
         "Examples",
         "Extracting the witness from an existential proof"]}},
      "address": "/Error-Explanations/lean___propRecLargeElim/"}],
    "getValues (in Dependent Pairs with Data)":
    [{"id": "getValues-_LPAR_in-Dependent-Pairs-with-Data_RPAR_",
      "data":
      {"/Basic-Types/Tuples/#getValues-_LPAR_in-Dependent-Pairs-with-Data_RPAR_":
       {"display": "getValues",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Tuples",
         "Dependent Pairs",
         "Dependent Pairs with Data"]}},
      "address": "/Basic-Types/Tuples/"}],
    "getThird (in Checking Array Bounds)":
    [{"id": "getThird-_LPAR_in-Checking-Array-Bounds_RPAR_-next-next",
      "data":
      {"/Terms/Conditionals/#getThird-_LPAR_in-Checking-Array-Bounds_RPAR_-next-next":
       {"display": "getThird",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Conditionals",
         "Checking Array Bounds"]},
       "/Terms/Conditionals/#getThird-_LPAR_in-Checking-Array-Bounds_RPAR_-next":
       {"display": "getThird",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Conditionals",
         "Checking Array Bounds"]},
       "/Terms/Conditionals/#getThird-_LPAR_in-Checking-Array-Bounds_RPAR_":
       {"display": "getThird",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Conditionals",
         "Checking Array Bounds"]}},
      "address": "/Terms/Conditionals/"},
     {"id": "getThird-_LPAR_in-Checking-Array-Bounds_RPAR_",
      "data":
      {"/Terms/Conditionals/#getThird-_LPAR_in-Checking-Array-Bounds_RPAR_-next-next":
       {"display": "getThird",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Conditionals",
         "Checking Array Bounds"]},
       "/Terms/Conditionals/#getThird-_LPAR_in-Checking-Array-Bounds_RPAR_-next":
       {"display": "getThird",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Conditionals",
         "Checking Array Bounds"]},
       "/Terms/Conditionals/#getThird-_LPAR_in-Checking-Array-Bounds_RPAR_":
       {"display": "getThird",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Conditionals",
         "Checking Array Bounds"]}},
      "address": "/Terms/Conditionals/"},
     {"id": "getThird-_LPAR_in-Checking-Array-Bounds_RPAR_-next",
      "data":
      {"/Terms/Conditionals/#getThird-_LPAR_in-Checking-Array-Bounds_RPAR_-next-next":
       {"display": "getThird",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Conditionals",
         "Checking Array Bounds"]},
       "/Terms/Conditionals/#getThird-_LPAR_in-Checking-Array-Bounds_RPAR_-next":
       {"display": "getThird",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Conditionals",
         "Checking Array Bounds"]},
       "/Terms/Conditionals/#getThird-_LPAR_in-Checking-Array-Bounds_RPAR_":
       {"display": "getThird",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Conditionals",
         "Checking Array Bounds"]}},
      "address": "/Terms/Conditionals/"}],
    "getPPContext (in Pretty-Printed Syntax)":
    [{"id": "getPPContext-_LPAR_in-Pretty-Printed-Syntax_RPAR_",
      "data":
      {"/Notations-and-Macros/Defining-New-Syntax/#getPPContext-_LPAR_in-Pretty-Printed-Syntax_RPAR_":
       {"display": "getPPContext",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Defining New Syntax",
         "Inspecting Syntax",
         "Pretty-Printed Syntax"]}},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "getOrDefault (in Noncomputable dependency can be made computable)":
    [{"id":
      "getOrDefault-_LPAR_in-Noncomputable-dependency-can-be-made-computable_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___dependsOnNoncomputable/#getOrDefault-_LPAR_in-Noncomputable-dependency-can-be-made-computable_RPAR_-next":
       {"display": "getOrDefault",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.dependsOnNoncomputable",
         "Examples",
         "Noncomputable dependency can be made computable"]},
       "/Error-Explanations/lean___dependsOnNoncomputable/#getOrDefault-_LPAR_in-Noncomputable-dependency-can-be-made-computable_RPAR_":
       {"display": "getOrDefault",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.dependsOnNoncomputable",
         "Examples",
         "Noncomputable dependency can be made computable"]}},
      "address": "/Error-Explanations/lean___dependsOnNoncomputable/"},
     {"id":
      "getOrDefault-_LPAR_in-Noncomputable-dependency-can-be-made-computable_RPAR_",
      "data":
      {"/Error-Explanations/lean___dependsOnNoncomputable/#getOrDefault-_LPAR_in-Noncomputable-dependency-can-be-made-computable_RPAR_-next":
       {"display": "getOrDefault",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.dependsOnNoncomputable",
         "Examples",
         "Noncomputable dependency can be made computable"]},
       "/Error-Explanations/lean___dependsOnNoncomputable/#getOrDefault-_LPAR_in-Noncomputable-dependency-can-be-made-computable_RPAR_":
       {"display": "getOrDefault",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.dependsOnNoncomputable",
         "Examples",
         "Noncomputable dependency can be made computable"]}},
      "address": "/Error-Explanations/lean___dependsOnNoncomputable/"}],
    "getName (in Infix  Functor  and  Applicative  Operators)":
    [{"id":
      "getName-_LPAR_in-Infix--Functor--and--Applicative--Operators_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Syntax/#getName-_LPAR_in-Infix--Functor--and--Applicative--Operators_RPAR_":
       {"display": "getName",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Syntax",
         "Infix Operators",
         "Applicative Functors",
         "Infix  Functor  and  Applicative  Operators"]}},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "getNLinesRev (in Dependent Pairs with Data)":
    [{"id": "getNLinesRev-_LPAR_in-Dependent-Pairs-with-Data_RPAR_",
      "data":
      {"/Basic-Types/Tuples/#getNLinesRev-_LPAR_in-Dependent-Pairs-with-Data_RPAR_":
       {"display": "getNLinesRev",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Tuples",
         "Dependent Pairs",
         "Dependent Pairs with Data"]}},
      "address": "/Basic-Types/Tuples/"}],
    "getNLines (in Dependent Pairs with Data)":
    [{"id": "getNLines-_LPAR_in-Dependent-Pairs-with-Data_RPAR_",
      "data":
      {"/Basic-Types/Tuples/#getNLines-_LPAR_in-Dependent-Pairs-with-Data_RPAR_":
       {"display": "getNLines",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Tuples",
         "Dependent Pairs",
         "Dependent Pairs with Data"]}},
      "address": "/Basic-Types/Tuples/"}],
    "getFavoriteNat (in Infix  Functor  and  Applicative  Operators)":
    [{"id":
      "getFavoriteNat-_LPAR_in-Infix--Functor--and--Applicative--Operators_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Syntax/#getFavoriteNat-_LPAR_in-Infix--Functor--and--Applicative--Operators_RPAR_":
       {"display": "getFavoriteNat",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Syntax",
         "Infix Operators",
         "Applicative Functors",
         "Infix  Functor  and  Applicative  Operators"]}},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "getBytes' (in Exceptions and Lifting)":
    [{"id": "getBytes___-_LPAR_in-Exceptions-and-Lifting_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Lifting-Monads/#getBytes___-_LPAR_in-Exceptions-and-Lifting_RPAR_-next":
       {"display": "getBytes'",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lifting Monads",
         "Reversing Lifts",
         "Reversible Lifting with  MonadControl",
         "Exceptions and Lifting"]},
       "/Functors___-Monads-and--do--Notation/Lifting-Monads/#getBytes___-_LPAR_in-Exceptions-and-Lifting_RPAR_":
       {"display": "getBytes'",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lifting Monads",
         "Reversing Lifts",
         "Reversible Lifting with  MonadControl",
         "Exceptions and Lifting"]}},
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"},
     {"id": "getBytes___-_LPAR_in-Exceptions-and-Lifting_RPAR_-next",
      "data":
      {"/Functors___-Monads-and--do--Notation/Lifting-Monads/#getBytes___-_LPAR_in-Exceptions-and-Lifting_RPAR_-next":
       {"display": "getBytes'",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lifting Monads",
         "Reversing Lifts",
         "Reversible Lifting with  MonadControl",
         "Exceptions and Lifting"]},
       "/Functors___-Monads-and--do--Notation/Lifting-Monads/#getBytes___-_LPAR_in-Exceptions-and-Lifting_RPAR_":
       {"display": "getBytes'",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lifting Monads",
         "Reversing Lifts",
         "Reversible Lifting with  MonadControl",
         "Exceptions and Lifting"]}},
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "getBytes (in Exceptions and Lifting)":
    [{"id": "getBytes-_LPAR_in-Exceptions-and-Lifting_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Lifting-Monads/#getBytes-_LPAR_in-Exceptions-and-Lifting_RPAR_":
       {"display": "getBytes",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lifting Monads",
         "Reversing Lifts",
         "Reversible Lifting with  MonadControl",
         "Exceptions and Lifting"]}},
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "getByte (in Exceptions and Lifting)":
    [{"id": "getByte-_LPAR_in-Exceptions-and-Lifting_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Lifting-Monads/#getByte-_LPAR_in-Exceptions-and-Lifting_RPAR_":
       {"display": "getByte",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lifting Monads",
         "Reversing Lifts",
         "Reversible Lifting with  MonadControl",
         "Exceptions and Lifting"]}},
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "getAlpha (in Coercions and  Option)":
    [{"id": "getAlpha-_LPAR_in-Coercions-and--Option_RPAR_",
      "data":
      {"/Basic-Types/Optional-Values/#getAlpha-_LPAR_in-Coercions-and--Option_RPAR_":
       {"display": "getAlpha",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Optional Values",
         "Coercions",
         "Coercions and  Option"]}},
      "address": "/Basic-Types/Optional-Values/"}],
    "g (in Selecting Patterns)":
    [{"id": "g-_LPAR_in-Selecting-Patterns_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#g-_LPAR_in-Selecting-Patterns_RPAR_":
       {"display": "g",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Patterns",
         "Selecting Patterns"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "g (in Ordinary vs Strict Implicit Parameters)":
    [{"id": "g-_LPAR_in-Ordinary-vs-Strict-Implicit-Parameters_RPAR_",
      "data":
      {"/Terms/Functions/#g-_LPAR_in-Ordinary-vs-Strict-Implicit-Parameters_RPAR_":
       {"display": "g",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Functions",
         "Implicit Parameters",
         "Ordinary vs Strict Implicit Parameters"]}},
      "address": "/Terms/Functions/"}],
    "g (in Mutual recursion without parameter decrease)":
    [{"id": "g-_LPAR_in-Mutual-recursion-without-parameter-decrease_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#g-_LPAR_in-Mutual-recursion-without-parameter-decrease_RPAR_":
       {"display": "g",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Mutual Well-Founded Recursion",
         "Mutual recursion without parameter decrease"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "g (in Impossible Code Paths)":
    [{"id": "g-_LPAR_in-Impossible-Code-Paths_RPAR_",
      "data":
      {"/Basic-Types/The-Empty-Type/#g-_LPAR_in-Impossible-Code-Paths_RPAR_":
       {"display": "g",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "The Empty Type",
         "Impossible Code Paths"]}},
      "address": "/Basic-Types/The-Empty-Type/"}],
    "g (in E-matching Patterns)":
    [{"id": "g-_LPAR_in-E-matching-Patterns_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#g-_LPAR_in-E-matching-Patterns_RPAR_":
       {"display": "g",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Patterns",
         "E-matching Patterns"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "g (in Dead Code and Subsingleton Elimination)":
    [{"id": "g-_LPAR_in-Dead-Code-and-Subsingleton-Elimination_RPAR_",
      "data":
      {"/Basic-Propositions/Truth/#g-_LPAR_in-Dead-Code-and-Subsingleton-Elimination_RPAR_":
       {"display": "g",
        "context":
        ["The Lean Language Reference",
         "Basic Propositions",
         "Truth",
         "Dead Code and Subsingleton Elimination"]}},
      "address": "/Basic-Propositions/Truth/"}],
    "funext'":
    [{"id": "funext___",
      "data":
      {"/The-Type-System/Quotients/#funext___":
       {"display": "funext'",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Quotients and Function Extensionality"]}},
      "address": "/The-Type-System/Quotients/"}],
    "fromImage (in Noncomputable instance in namespace)":
    [{"id": "fromImage-_LPAR_in-Noncomputable-instance-in-namespace_RPAR_",
      "data":
      {"/Error-Explanations/lean___dependsOnNoncomputable/#fromImage-_LPAR_in-Noncomputable-instance-in-namespace_RPAR_":
       {"display": "fromImage",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.dependsOnNoncomputable",
         "Examples",
         "Noncomputable instance in namespace"]}},
      "address": "/Error-Explanations/lean___dependsOnNoncomputable/"}],
    "fromBaseIO (in Lifting  IO  Monads)":
    [{"id": "fromBaseIO-_LPAR_in-Lifting--IO--Monads_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Lifting-Monads/#fromBaseIO-_LPAR_in-Lifting--IO--Monads_RPAR_":
       {"display": "fromBaseIO",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lifting Monads",
         "Lifting  IO  Monads"]}},
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "friday (in Implementing Coercions)":
    [{"id": "friday-_LPAR_in-Implementing-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#friday-_LPAR_in-Implementing-Coercions_RPAR_":
       {"display": "friday",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Implementing Coercions",
         "Implementing Coercions"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "four (in Defining Coercions)":
    [{"id": "four-_LPAR_in-Defining-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#four-_LPAR_in-Defining-Coercions_RPAR_":
       {"display": "four",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Defining Coercions"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "fooInst (in Default Size Instance)":
    [{"id": "fooInst-_LPAR_in-Default-Size-Instance_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#fooInst-_LPAR_in-Default-Size-Instance_RPAR_":
       {"display": "fooInst",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Well-Founded Relations",
         "Default Size Instance"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "find (in Definition by Partial Fixpoint)":
    [{"id": "find-_LPAR_in-Definition-by-Partial-Fixpoint_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#find-_LPAR_in-Definition-by-Partial-Fixpoint_RPAR_":
       {"display": "find",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial Fixpoint Recursion",
         "Definition by Partial Fixpoint"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "filled (in Grouping and Filling)":
    [{"id": "filled-_LPAR_in-Grouping-and-Filling_RPAR_",
      "data":
      {"/Interacting-with-Lean/#filled-_LPAR_in-Grouping-and-Filling_RPAR_":
       {"display": "filled",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Format",
         "Grouping and Filling"]}},
      "address": "/Interacting-with-Lean/"}],
    "fib (in Termination Proof Obligations)":
    [{"id": "fib-_LPAR_in-Termination-Proof-Obligations_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#fib-_LPAR_in-Termination-Proof-Obligations_RPAR_-next":
       {"display": "fib",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Termination proofs",
         "Termination Proof Obligations"]},
       "/Definitions/Recursive-Definitions/#fib-_LPAR_in-Termination-Proof-Obligations_RPAR_":
       {"display": "fib",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Termination proofs",
         "Termination Proof Obligations"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "fib-_LPAR_in-Termination-Proof-Obligations_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#fib-_LPAR_in-Termination-Proof-Obligations_RPAR_-next":
       {"display": "fib",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Termination proofs",
         "Termination Proof Obligations"]},
       "/Definitions/Recursive-Definitions/#fib-_LPAR_in-Termination-Proof-Obligations_RPAR_":
       {"display": "fib",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Termination proofs",
         "Termination Proof Obligations"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "fib (in Refined Parameters)":
    [{"id": "fib-_LPAR_in-Refined-Parameters_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#fib-_LPAR_in-Refined-Parameters_RPAR_":
       {"display": "fib",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Termination proofs",
         "Refined Parameters"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "fib (in Nested Patterns and Sub-Terms)":
    [{"id": "fib-_LPAR_in-Nested-Patterns-and-Sub-Terms_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#fib-_LPAR_in-Nested-Patterns-and-Sub-Terms_RPAR_":
       {"display": "fib",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Nested Patterns and Sub-Terms"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "fib (in Enriched Proof Obligation Contexts)":
    [{"id": "fib-_LPAR_in-Enriched-Proof-Obligation-Contexts_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#fib-_LPAR_in-Enriched-Proof-Obligation-Contexts_RPAR_":
       {"display": "fib",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Termination proofs",
         "Enriched Proof Obligation Contexts"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "false_is_true (in Inconsistencies From Axioms)":
    [{"id": "false_is_true-_LPAR_in-Inconsistencies-From-Axioms_RPAR_",
      "data":
      {"/Axioms/#false_is_true-_LPAR_in-Inconsistencies-From-Axioms_RPAR_":
       {"display": "false_is_true",
        "context":
        ["The Lean Language Reference",
         "Axioms",
         "Consistency",
         "Inconsistencies From Axioms"]}},
      "address": "/Axioms/"}],
    "fact (in Custom Operators in Lean's Output)":
    [{"id": "fact-_LPAR_in-Custom-Operators-in-Lean___s-Output_RPAR_",
      "data":
      {"/Notations-and-Macros/Custom-Operators/#fact-_LPAR_in-Custom-Operators-in-Lean___s-Output_RPAR_":
       {"display": "fact",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Custom Operators",
         "Custom Operators in Lean's Output"]}},
      "address": "/Notations-and-Macros/Custom-Operators/"}],
    "f (in Termination failure)":
    [{"id": "f-_LPAR_in-Termination-failure_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#f-_LPAR_in-Termination-failure_RPAR_":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Inferring Well-Founded Recursion",
         "Termination failure"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "f (in Selecting Patterns)":
    [{"id": "f-_LPAR_in-Selecting-Patterns_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#f-_LPAR_in-Selecting-Patterns_RPAR_":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Patterns",
         "Selecting Patterns"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "f (in Ordinary vs Strict Implicit Parameters)":
    [{"id": "f-_LPAR_in-Ordinary-vs-Strict-Implicit-Parameters_RPAR_",
      "data":
      {"/Terms/Functions/#f-_LPAR_in-Ordinary-vs-Strict-Implicit-Parameters_RPAR_":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Functions",
         "Implicit Parameters",
         "Ordinary vs Strict Implicit Parameters"]}},
      "address": "/Terms/Functions/"}],
    "f (in Mutual recursion without parameter decrease)":
    [{"id": "f-_LPAR_in-Mutual-recursion-without-parameter-decrease_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#f-_LPAR_in-Mutual-recursion-without-parameter-decrease_RPAR_":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Mutual Well-Founded Recursion",
         "Mutual recursion without parameter decrease"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "f (in Impossible Code Paths)":
    [{"id": "f-_LPAR_in-Impossible-Code-Paths_RPAR_",
      "data":
      {"/Basic-Types/The-Empty-Type/#f-_LPAR_in-Impossible-Code-Paths_RPAR_":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "The Empty Type",
         "Impossible Code Paths"]}},
      "address": "/Basic-Types/The-Empty-Type/"}],
    "f (in Expanding Quasiquotation)":
    [{"id": "f-_LPAR_in-Expanding-Quasiquotation_RPAR_",
      "data":
      {"/Notations-and-Macros/Macros/#f-_LPAR_in-Expanding-Quasiquotation_RPAR_":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Macros",
         "Quotation",
         "Quasiquotation",
         "Expanding Quasiquotation"]}},
      "address": "/Notations-and-Macros/Macros/"}],
    "f (in Enriched Proof Obligation Contexts)":
    [{"id": "f-_LPAR_in-Enriched-Proof-Obligation-Contexts_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#f-_LPAR_in-Enriched-Proof-Obligation-Contexts_RPAR_-next-next":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Termination proofs",
         "Enriched Proof Obligation Contexts"]},
       "/Definitions/Recursive-Definitions/#f-_LPAR_in-Enriched-Proof-Obligation-Contexts_RPAR_-next":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Termination proofs",
         "Enriched Proof Obligation Contexts"]},
       "/Definitions/Recursive-Definitions/#f-_LPAR_in-Enriched-Proof-Obligation-Contexts_RPAR_":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Termination proofs",
         "Enriched Proof Obligation Contexts"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "f-_LPAR_in-Enriched-Proof-Obligation-Contexts_RPAR_-next-next",
      "data":
      {"/Definitions/Recursive-Definitions/#f-_LPAR_in-Enriched-Proof-Obligation-Contexts_RPAR_-next-next":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Termination proofs",
         "Enriched Proof Obligation Contexts"]},
       "/Definitions/Recursive-Definitions/#f-_LPAR_in-Enriched-Proof-Obligation-Contexts_RPAR_-next":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Termination proofs",
         "Enriched Proof Obligation Contexts"]},
       "/Definitions/Recursive-Definitions/#f-_LPAR_in-Enriched-Proof-Obligation-Contexts_RPAR_":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Termination proofs",
         "Enriched Proof Obligation Contexts"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "f-_LPAR_in-Enriched-Proof-Obligation-Contexts_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#f-_LPAR_in-Enriched-Proof-Obligation-Contexts_RPAR_-next-next":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Termination proofs",
         "Enriched Proof Obligation Contexts"]},
       "/Definitions/Recursive-Definitions/#f-_LPAR_in-Enriched-Proof-Obligation-Contexts_RPAR_-next":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Termination proofs",
         "Enriched Proof Obligation Contexts"]},
       "/Definitions/Recursive-Definitions/#f-_LPAR_in-Enriched-Proof-Obligation-Contexts_RPAR_":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Termination proofs",
         "Enriched Proof Obligation Contexts"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "f (in E-matching Patterns)":
    [{"id": "f-_LPAR_in-E-matching-Patterns_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#f-_LPAR_in-E-matching-Patterns_RPAR_":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Patterns",
         "E-matching Patterns"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "f (in Discriminant Refinement)":
    [{"id": "f-_LPAR_in-Discriminant-Refinement_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#f-_LPAR_in-Discriminant-Refinement_RPAR_":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Discriminant Refinement",
         "Discriminant Refinement"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "f (in Dead Code and Subsingleton Elimination)":
    [{"id": "f-_LPAR_in-Dead-Code-and-Subsingleton-Elimination_RPAR_",
      "data":
      {"/Basic-Propositions/Truth/#f-_LPAR_in-Dead-Code-and-Subsingleton-Elimination_RPAR_":
       {"display": "f",
        "context":
        ["The Lean Language Reference",
         "Basic Propositions",
         "Truth",
         "Dead Code and Subsingleton Elimination"]}},
      "address": "/Basic-Propositions/Truth/"}],
    "extEq":
    [{"id": "extEq",
      "data":
      {"/The-Type-System/Quotients/#extEq":
       {"display": "extEq",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Quotients and Function Extensionality"]}},
      "address": "/The-Type-System/Quotients/"}],
    "extApp":
    [{"id": "extApp",
      "data":
      {"/The-Type-System/Quotients/#extApp":
       {"display": "extApp",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Quotients and Function Extensionality"]}},
      "address": "/The-Type-System/Quotients/"}],
    "expandRep (in The Macro Attribute)":
    [{"id": "expandRep-_LPAR_in-The-Macro-Attribute_RPAR_",
      "data":
      {"/Notations-and-Macros/Macros/#expandRep-_LPAR_in-The-Macro-Attribute_RPAR_":
       {"display": "expandRep",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Macros",
         "Defining Macros",
         "The Macro Attribute",
         "The Macro Attribute"]}},
      "address": "/Notations-and-Macros/Macros/"}],
    "ex_four_plus_five' (in Proving Existential Statements)":
    [{"id":
      "ex_four_plus_five___-_LPAR_in-Proving-Existential-Statements_RPAR_",
      "data":
      {"/Basic-Propositions/Quantifiers/#ex_four_plus_five___-_LPAR_in-Proving-Existential-Statements_RPAR_":
       {"display": "ex_four_plus_five'",
        "context":
        ["The Lean Language Reference",
         "Basic Propositions",
         "Quantifiers",
         "Proving Existential Statements"]}},
      "address": "/Basic-Propositions/Quantifiers/"}],
    "ex_four_plus_five (in Proving Existential Statements)":
    [{"id": "ex_four_plus_five-_LPAR_in-Proving-Existential-Statements_RPAR_",
      "data":
      {"/Basic-Propositions/Quantifiers/#ex_four_plus_five-_LPAR_in-Proving-Existential-Statements_RPAR_":
       {"display": "ex_four_plus_five",
        "context":
        ["The Lean Language Reference",
         "Basic Propositions",
         "Quantifiers",
         "Proving Existential Statements"]}},
      "address": "/Basic-Propositions/Quantifiers/"}],
    "ex3 (in Suffixed Splices)":
    [{"id": "ex3-_LPAR_in-Suffixed-Splices_RPAR_",
      "data":
      {"/Notations-and-Macros/Macros/#ex3-_LPAR_in-Suffixed-Splices_RPAR_":
       {"display": "ex3",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Macros",
         "Quotation",
         "Splices",
         "Suffixed Splices"]}},
      "address": "/Notations-and-Macros/Macros/"}],
    "ex2 (in Suffixed Splices)":
    [{"id": "ex2-_LPAR_in-Suffixed-Splices_RPAR_",
      "data":
      {"/Notations-and-Macros/Macros/#ex2-_LPAR_in-Suffixed-Splices_RPAR_":
       {"display": "ex2",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Macros",
         "Quotation",
         "Splices",
         "Suffixed Splices"]}},
      "address": "/Notations-and-Macros/Macros/"}],
    "ex2 (in Antiquotation Annotations)":
    [{"id": "ex2-_LPAR_in-Antiquotation-Annotations_RPAR_",
      "data":
      {"/Notations-and-Macros/Macros/#ex2-_LPAR_in-Antiquotation-Annotations_RPAR_":
       {"display": "ex2",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Macros",
         "Quotation",
         "Quasiquotation",
         "Antiquotation Annotations"]}},
      "address": "/Notations-and-Macros/Macros/"}],
    "ex1 (in Suffixed Splices)":
    [{"id": "ex1-_LPAR_in-Suffixed-Splices_RPAR_",
      "data":
      {"/Notations-and-Macros/Macros/#ex1-_LPAR_in-Suffixed-Splices_RPAR_":
       {"display": "ex1",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Macros",
         "Quotation",
         "Splices",
         "Suffixed Splices"]}},
      "address": "/Notations-and-Macros/Macros/"}],
    "ex1 (in Antiquotation Annotations)":
    [{"id": "ex1-_LPAR_in-Antiquotation-Annotations_RPAR_",
      "data":
      {"/Notations-and-Macros/Macros/#ex1-_LPAR_in-Antiquotation-Annotations_RPAR_":
       {"display": "ex1",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Macros",
         "Quotation",
         "Quasiquotation",
         "Antiquotation Annotations"]}},
      "address": "/Notations-and-Macros/Macros/"}],
    "everyOther (in Recursive Equational Lemmas)":
    [{"id": "everyOther-_LPAR_in-Recursive-Equational-Lemmas_RPAR_",
      "data":
      {"/Elaboration-and-Compilation/#everyOther-_LPAR_in-Recursive-Equational-Lemmas_RPAR_":
       {"display": "everyOther",
        "context":
        ["The Lean Language Reference",
         "Elaboration and Compilation",
         "Elaboration Results",
         "Recursive Equational Lemmas"]}},
      "address": "/Elaboration-and-Compilation/"}],
    "even (in Mutual Structural Recursion Over Non-Mutual Types)":
    [{"id":
      "even-_LPAR_in-Mutual-Structural-Recursion-Over-Non-Mutual-Types_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#even-_LPAR_in-Mutual-Structural-Recursion-Over-Non-Mutual-Types_RPAR_":
       {"display": "even",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Mutual Structural Recursion",
         "Mutual Structural Recursion Over Non-Mutual Types"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "endsOrDefault (in Noncomputable dependency can be made computable)":
    [{"id":
      "endsOrDefault-_LPAR_in-Noncomputable-dependency-can-be-made-computable_RPAR_",
      "data":
      {"/Error-Explanations/lean___dependsOnNoncomputable/#endsOrDefault-_LPAR_in-Noncomputable-dependency-can-be-made-computable_RPAR_":
       {"display": "endsOrDefault",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.dependsOnNoncomputable",
         "Examples",
         "Noncomputable dependency can be made computable"]}},
      "address": "/Error-Explanations/lean___dependsOnNoncomputable/"}],
    "emptyNats (in Implicit argument cannot be inferred)":
    [{"id": "emptyNats-_LPAR_in-Implicit-argument-cannot-be-inferred_RPAR_",
      "data":
      {"/Error-Explanations/lean___inferDefTypeFailed/#emptyNats-_LPAR_in-Implicit-argument-cannot-be-inferred_RPAR_-next":
       {"display": "emptyNats",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferDefTypeFailed",
         "Examples",
         "Implicit argument cannot be inferred"]},
       "/Error-Explanations/lean___inferDefTypeFailed/#emptyNats-_LPAR_in-Implicit-argument-cannot-be-inferred_RPAR_":
       {"display": "emptyNats",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferDefTypeFailed",
         "Examples",
         "Implicit argument cannot be inferred"]}},
      "address": "/Error-Explanations/lean___inferDefTypeFailed/"},
     {"id":
      "emptyNats-_LPAR_in-Implicit-argument-cannot-be-inferred_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___inferDefTypeFailed/#emptyNats-_LPAR_in-Implicit-argument-cannot-be-inferred_RPAR_-next":
       {"display": "emptyNats",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferDefTypeFailed",
         "Examples",
         "Implicit argument cannot be inferred"]},
       "/Error-Explanations/lean___inferDefTypeFailed/#emptyNats-_LPAR_in-Implicit-argument-cannot-be-inferred_RPAR_":
       {"display": "emptyNats",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferDefTypeFailed",
         "Examples",
         "Implicit argument cannot be inferred"]}},
      "address": "/Error-Explanations/lean___inferDefTypeFailed/"}],
    "emptyIsEmpty (in Extending  trivial)":
    [{"id": "emptyIsEmpty-_LPAR_in-Extending--trivial_RPAR_",
      "data":
      {"/Tactic-Proofs/Custom-Tactics/#emptyIsEmpty-_LPAR_in-Extending--trivial_RPAR_":
       {"display": "emptyIsEmpty",
        "context":
        ["The Lean Language Reference",
         "Tactic Proofs",
         "Custom Tactics",
         "Tactic Macros",
         "Extensible Tactic Macros",
         "Extending  trivial"]}},
      "address": "/Tactic-Proofs/Custom-Tactics/"}],
    "elabNotType (in Avoiding a Type)":
    [{"id": "elabNotType-_LPAR_in-Avoiding-a-Type_RPAR_",
      "data":
      {"/Notations-and-Macros/Elaborators/#elabNotType-_LPAR_in-Avoiding-a-Type_RPAR_":
       {"display": "elabNotType",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Elaborators",
         "Term Elaborators",
         "Avoiding a Type"]}},
      "address": "/Notations-and-Macros/Elaborators/"}],
    "e (in Duplicated Terms in Notation Expansion)":
    [{"id": "e-_LPAR_in-Duplicated-Terms-in-Notation-Expansion_RPAR_",
      "data":
      {"/Notations-and-Macros/Notations/#e-_LPAR_in-Duplicated-Terms-in-Notation-Expansion_RPAR_":
       {"display": "e",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Notations",
         "Duplicated Terms in Notation Expansion"]}},
      "address": "/Notations-and-Macros/Notations/"}],
    "div_trans (in Inspecting Patterns)":
    [{"id": "div_trans-_LPAR_in-Inspecting-Patterns_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#div_trans-_LPAR_in-Inspecting-Patterns_RPAR_":
       {"display": "div_trans",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Inspecting Patterns",
         "Inspecting Patterns"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "div.eq2 (in Division by Iterated Subtraction: Termination Proof)":
    [{"id":
      "div___eq2-_LPAR_in-Division-by-Iterated-Subtraction___-Termination-Proof_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#div___eq2-_LPAR_in-Division-by-Iterated-Subtraction___-Termination-Proof_RPAR_":
       {"display": "div.eq2",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Theory and Construction",
         "Division by Iterated Subtraction: Termination Proof"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "div.eq1 (in Division by Iterated Subtraction: Termination Proof)":
    [{"id":
      "div___eq1-_LPAR_in-Division-by-Iterated-Subtraction___-Termination-Proof_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#div___eq1-_LPAR_in-Division-by-Iterated-Subtraction___-Termination-Proof_RPAR_":
       {"display": "div.eq1",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Theory and Construction",
         "Division by Iterated Subtraction: Termination Proof"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "div.eq0 (in Division by Iterated Subtraction: Termination Proof)":
    [{"id":
      "div___eq0-_LPAR_in-Division-by-Iterated-Subtraction___-Termination-Proof_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#div___eq0-_LPAR_in-Division-by-Iterated-Subtraction___-Termination-Proof_RPAR_-next":
       {"display": "div.eq0",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Theory and Construction",
         "Division by Iterated Subtraction: Termination Proof"]},
       "/Definitions/Recursive-Definitions/#div___eq0-_LPAR_in-Division-by-Iterated-Subtraction___-Termination-Proof_RPAR_":
       {"display": "div.eq0",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Theory and Construction",
         "Division by Iterated Subtraction: Termination Proof"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id":
      "div___eq0-_LPAR_in-Division-by-Iterated-Subtraction___-Termination-Proof_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#div___eq0-_LPAR_in-Division-by-Iterated-Subtraction___-Termination-Proof_RPAR_-next":
       {"display": "div.eq0",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Theory and Construction",
         "Division by Iterated Subtraction: Termination Proof"]},
       "/Definitions/Recursive-Definitions/#div___eq0-_LPAR_in-Division-by-Iterated-Subtraction___-Termination-Proof_RPAR_":
       {"display": "div.eq0",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Theory and Construction",
         "Division by Iterated Subtraction: Termination Proof"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "div (in Division by Iterated Subtraction: Termination Proof)":
    [{"id":
      "div-_LPAR_in-Division-by-Iterated-Subtraction___-Termination-Proof_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#div-_LPAR_in-Division-by-Iterated-Subtraction___-Termination-Proof_RPAR_":
       {"display": "div",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Theory and Construction",
         "Division by Iterated Subtraction: Termination Proof"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "div (in Division by Iterated Subtraction)":
    [{"id": "div-_LPAR_in-Division-by-Iterated-Subtraction_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#div-_LPAR_in-Division-by-Iterated-Subtraction_RPAR_":
       {"display": "div",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Division by Iterated Subtraction"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "disjoinToNat (in Unresolvable name inferred by dotted-identifier notation)":
    [{"id":
      "disjoinToNat-_LPAR_in-Unresolvable-name-inferred-by-dotted-identifier-notation_RPAR_-next-next",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#disjoinToNat-_LPAR_in-Unresolvable-name-inferred-by-dotted-identifier-notation_RPAR_-next-next":
       {"display": "disjoinToNat",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Unresolvable name inferred by dotted-identifier notation"]},
       "/Error-Explanations/lean___unknownIdentifier/#disjoinToNat-_LPAR_in-Unresolvable-name-inferred-by-dotted-identifier-notation_RPAR_-next":
       {"display": "disjoinToNat",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Unresolvable name inferred by dotted-identifier notation"]},
       "/Error-Explanations/lean___unknownIdentifier/#disjoinToNat-_LPAR_in-Unresolvable-name-inferred-by-dotted-identifier-notation_RPAR_":
       {"display": "disjoinToNat",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Unresolvable name inferred by dotted-identifier notation"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"},
     {"id":
      "disjoinToNat-_LPAR_in-Unresolvable-name-inferred-by-dotted-identifier-notation_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#disjoinToNat-_LPAR_in-Unresolvable-name-inferred-by-dotted-identifier-notation_RPAR_-next-next":
       {"display": "disjoinToNat",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Unresolvable name inferred by dotted-identifier notation"]},
       "/Error-Explanations/lean___unknownIdentifier/#disjoinToNat-_LPAR_in-Unresolvable-name-inferred-by-dotted-identifier-notation_RPAR_-next":
       {"display": "disjoinToNat",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Unresolvable name inferred by dotted-identifier notation"]},
       "/Error-Explanations/lean___unknownIdentifier/#disjoinToNat-_LPAR_in-Unresolvable-name-inferred-by-dotted-identifier-notation_RPAR_":
       {"display": "disjoinToNat",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Unresolvable name inferred by dotted-identifier notation"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"},
     {"id":
      "disjoinToNat-_LPAR_in-Unresolvable-name-inferred-by-dotted-identifier-notation_RPAR_",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#disjoinToNat-_LPAR_in-Unresolvable-name-inferred-by-dotted-identifier-notation_RPAR_-next-next":
       {"display": "disjoinToNat",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Unresolvable name inferred by dotted-identifier notation"]},
       "/Error-Explanations/lean___unknownIdentifier/#disjoinToNat-_LPAR_in-Unresolvable-name-inferred-by-dotted-identifier-notation_RPAR_-next":
       {"display": "disjoinToNat",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Unresolvable name inferred by dotted-identifier notation"]},
       "/Error-Explanations/lean___unknownIdentifier/#disjoinToNat-_LPAR_in-Unresolvable-name-inferred-by-dotted-identifier-notation_RPAR_":
       {"display": "disjoinToNat",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Unresolvable name inferred by dotted-identifier notation"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"}],
    "discardElems (in Memory Re-Use in IR)":
    [{"id": "discardElems-_LPAR_in-Memory-Re-Use-in-IR_RPAR_",
      "data":
      {"/Run-Time-Code/Reference-Counting/#discardElems-_LPAR_in-Memory-Re-Use-in-IR_RPAR_":
       {"display": "discardElems",
        "context":
        ["The Lean Language Reference",
         "Run-Time Code",
         "Reference Counting",
         "Compiler IR",
         "Memory Re-Use in IR"]}},
      "address": "/Run-Time-Code/Reference-Counting/"}],
    "deriveIsEnum (in Deriving Handlers)":
    [{"id": "deriveIsEnum-_LPAR_in-Deriving-Handlers_RPAR_",
      "data":
      {"/Type-Classes/Deriving-Instances/#deriveIsEnum-_LPAR_in-Deriving-Handlers_RPAR_":
       {"display": "deriveIsEnum",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Deriving Instances",
         "Deriving Handlers",
         "Deriving Handlers"]}},
      "address": "/Type-Classes/Deriving-Instances/"}],
    "countdown' (in Structural Recursion vs Subtraction)":
    [{"id": "countdown___-_LPAR_in-Structural-Recursion-vs-Subtraction_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#countdown___-_LPAR_in-Structural-Recursion-vs-Subtraction_RPAR_-next":
       {"display": "countdown'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Structural Recursion vs Subtraction"]},
       "/Definitions/Recursive-Definitions/#countdown___-_LPAR_in-Structural-Recursion-vs-Subtraction_RPAR_":
       {"display": "countdown'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Structural Recursion vs Subtraction"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id":
      "countdown___-_LPAR_in-Structural-Recursion-vs-Subtraction_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#countdown___-_LPAR_in-Structural-Recursion-vs-Subtraction_RPAR_-next":
       {"display": "countdown'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Structural Recursion vs Subtraction"]},
       "/Definitions/Recursive-Definitions/#countdown___-_LPAR_in-Structural-Recursion-vs-Subtraction_RPAR_":
       {"display": "countdown'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Structural Recursion vs Subtraction"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "countdown' (in Structural Recursion and Definitional Equality)":
    [{"id":
      "countdown___-_LPAR_in-Structural-Recursion-and-Definitional-Equality_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#countdown___-_LPAR_in-Structural-Recursion-and-Definitional-Equality_RPAR_":
       {"display": "countdown'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Structural Recursion and Definitional Equality"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "countdown (in Structural Recursion vs Subtraction)":
    [{"id": "countdown-_LPAR_in-Structural-Recursion-vs-Subtraction_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#countdown-_LPAR_in-Structural-Recursion-vs-Subtraction_RPAR_":
       {"display": "countdown",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Structural Recursion vs Subtraction"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "countdown (in Structural Recursion and Definitional Equality)":
    [{"id":
      "countdown-_LPAR_in-Structural-Recursion-and-Definitional-Equality_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#countdown-_LPAR_in-Structural-Recursion-and-Definitional-Equality_RPAR_":
       {"display": "countdown",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Structural Recursion and Definitional Equality"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "countdown (in Redirecting Standard I/O to Strings)":
    [{"id": "countdown-_LPAR_in-Redirecting-Standard-I___O-to-Strings_RPAR_",
      "data":
      {"/IO/Files___-File-Handles___-and-Streams/#countdown-_LPAR_in-Redirecting-Standard-I___O-to-Strings_RPAR_":
       {"display": "countdown",
        "context":
        ["The Lean Language Reference",
         "IO",
         "Files, File Handles, and Streams",
         "Standard I/O",
         "Redirecting Standard I/O to Strings"]}},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "count (in Universe monomorphism in auto-bound implicit parameters)":
    [{"id":
      "count-_LPAR_in-Universe-monomorphism-in-auto-bound-implicit-parameters_RPAR_",
      "data":
      {"/The-Type-System/Universes/#count-_LPAR_in-Universe-monomorphism-in-auto-bound-implicit-parameters_RPAR_":
       {"display": "count",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe monomorphism in auto-bound implicit parameters"]}},
      "address": "/The-Type-System/Universes/"}],
    "cos":
    [{"id": "cos",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#cos":
       {"display": "cos",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "Integrating  grind 's Features"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "coords (in Field Indices and Structure Inheritance)":
    [{"id": "coords-_LPAR_in-Field-Indices-and-Structure-Inheritance_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#coords-_LPAR_in-Field-Indices-and-Structure-Inheritance_RPAR_":
       {"display": "coords",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "Field Indices and Structure Inheritance"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "constantIndex (in Ineligible decreasing parameters)":
    [{"id": "constantIndex-_LPAR_in-Ineligible-decreasing-parameters_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#constantIndex-_LPAR_in-Ineligible-decreasing-parameters_RPAR_":
       {"display": "constantIndex",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Ineligible decreasing parameters"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "color (in Explicit Root Namespace)":
    [{"id": "color-_LPAR_in-Explicit-Root-Namespace_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#color-_LPAR_in-Explicit-Root-Namespace_RPAR_":
       {"display": "color",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Explicit Root Namespace"]}},
      "address": "/Namespaces-and-Sections/"}],
    "broccoli (in Using  Ord  Instances for  LT  and  LE  Instances)":
    [{"id":
      "broccoli-_LPAR_in-Using--Ord--Instances-for--LT--and--LE--Instances_RPAR_",
      "data":
      {"/Type-Classes/Basic-Classes/#broccoli-_LPAR_in-Using--Ord--Instances-for--LT--and--LE--Instances_RPAR_":
       {"display": "broccoli",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Basic Classes",
         "Ordering",
         "Using  Ord  Instances for  LT  and  LE  Instances"]}},
      "address": "/Type-Classes/Basic-Classes/"}],
    "boolCases (in Matching, With and Without Generalization)":
    [{"id":
      "boolCases-_LPAR_in-Matching___-With-and-Without-Generalization_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#boolCases-_LPAR_in-Matching___-With-and-Without-Generalization_RPAR_-next":
       {"display": "boolCases",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Generalization",
         "Matching, With and Without Generalization"]},
       "/Terms/Pattern-Matching/#boolCases-_LPAR_in-Matching___-With-and-Without-Generalization_RPAR_":
       {"display": "boolCases",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Generalization",
         "Matching, With and Without Generalization"]}},
      "address": "/Terms/Pattern-Matching/"},
     {"id":
      "boolCases-_LPAR_in-Matching___-With-and-Without-Generalization_RPAR_-next",
      "data":
      {"/Terms/Pattern-Matching/#boolCases-_LPAR_in-Matching___-With-and-Without-Generalization_RPAR_-next":
       {"display": "boolCases",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Generalization",
         "Matching, With and Without Generalization"]},
       "/Terms/Pattern-Matching/#boolCases-_LPAR_in-Matching___-With-and-Without-Generalization_RPAR_":
       {"display": "boolCases",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Generalization",
         "Matching, With and Without Generalization"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "bogus":
    [{"id": "bogus",
      "data":
      {"/Introduction/#bogus":
       {"display": "bogus",
        "context":
        ["The Lean Language Reference",
         "Introduction",
         "Typographical Conventions",
         "Lean Code"]}},
      "address": "/Introduction/"}],
    "binarySearch (in Array Indexing)":
    [{"id": "binarySearch-_LPAR_in-Array-Indexing_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#binarySearch-_LPAR_in-Array-Indexing_RPAR_":
       {"display": "binarySearch",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Inferring Well-Founded Recursion",
         "Array Indexing"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "asString (in Coercing Decorated Functions to Function Types)":
    [{"id":
      "asString-_LPAR_in-Coercing-Decorated-Functions-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#asString-_LPAR_in-Coercing-Decorated-Functions-to-Function-Types_RPAR_":
       {"display": "asString",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing Decorated Functions to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "append (in Coercing Decorated Functions to Function Types)":
    [{"id":
      "append-_LPAR_in-Coercing-Decorated-Functions-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#append-_LPAR_in-Coercing-Decorated-Functions-to-Function-Types_RPAR_":
       {"display": "append",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing Decorated Functions to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "answer_eq_other (in Partial Functions in Proofs)":
    [{"id": "answer_eq_other-_LPAR_in-Partial-Functions-in-Proofs_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#answer_eq_other-_LPAR_in-Partial-Functions-in-Proofs_RPAR_":
       {"display": "answer_eq_other",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial and Unsafe Definitions",
         "Partial Functions",
         "Partial Functions in Proofs"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "answerUser (in Partial Functions in Proofs)":
    [{"id": "answerUser-_LPAR_in-Partial-Functions-in-Proofs_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#answerUser-_LPAR_in-Partial-Functions-in-Proofs_RPAR_":
       {"display": "answerUser",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial and Unsafe Definitions",
         "Partial Functions",
         "Partial Functions in Proofs"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "answerOtherUser (in Partial Functions in Proofs)":
    [{"id": "answerOtherUser-_LPAR_in-Partial-Functions-in-Proofs_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#answerOtherUser-_LPAR_in-Partial-Functions-in-Proofs_RPAR_":
       {"display": "answerOtherUser",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial and Unsafe Definitions",
         "Partial Functions",
         "Partial Functions in Proofs"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "afterVarying (in Ineligible decreasing parameters)":
    [{"id": "afterVarying-_LPAR_in-Ineligible-decreasing-parameters_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#afterVarying-_LPAR_in-Ineligible-decreasing-parameters_RPAR_":
       {"display": "afterVarying",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Ineligible decreasing parameters"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "addPairs (in Local Instances)":
    [{"id": "addPairs-_LPAR_in-Local-Instances_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#addPairs-_LPAR_in-Local-Instances_RPAR_":
       {"display": "addPairs",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Candidate Instances",
         "Local Instances"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "addPairs (in Local Instances Have Priority)":
    [{"id": "addPairs-_LPAR_in-Local-Instances-Have-Priority_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#addPairs-_LPAR_in-Local-Instances-Have-Priority_RPAR_":
       {"display": "addPairs",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Candidate Instances",
         "Local Instances Have Priority"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "addFirstThird (in Idiom Brackets)":
    [{"id": "addFirstThird-_LPAR_in-Idiom-Brackets_RPAR_",
      "data":
      {"/Notations-and-Macros/Macros/#addFirstThird-_LPAR_in-Idiom-Brackets_RPAR_":
       {"display": "addFirstThird",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Macros",
         "Defining Macros",
         "The  macro_rules  Command",
         "Idiom Brackets"]}},
      "address": "/Notations-and-Macros/Macros/"}],
    "addAll (in Section Variables)":
    [{"id": "addAll-_LPAR_in-Section-Variables_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#addAll-_LPAR_in-Section-Variables_RPAR_-next":
       {"display": "addAll",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Section Scopes",
         "Section Variables",
         "Section Variables"]},
       "/Namespaces-and-Sections/#addAll-_LPAR_in-Section-Variables_RPAR_":
       {"display": "addAll",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Section Scopes",
         "Section Variables",
         "Section Variables"]}},
      "address": "/Namespaces-and-Sections/"},
     {"id": "addAll-_LPAR_in-Section-Variables_RPAR_-next",
      "data":
      {"/Namespaces-and-Sections/#addAll-_LPAR_in-Section-Variables_RPAR_-next":
       {"display": "addAll",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Section Scopes",
         "Section Variables",
         "Section Variables"]},
       "/Namespaces-and-Sections/#addAll-_LPAR_in-Section-Variables_RPAR_":
       {"display": "addAll",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Section Scopes",
         "Section Variables",
         "Section Variables"]}},
      "address": "/Namespaces-and-Sections/"}],
    "addAlias'' (in Modifying Values in Maps)":
    [{"id": "addAlias______-_LPAR_in-Modifying-Values-in-Maps_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#addAlias______-_LPAR_in-Modifying-Values-in-Maps_RPAR_":
       {"display": "addAlias''",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Suitable Operators for Uniqueness",
         "Modifying Values in Maps"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "addAlias' (in Modifying Values in Maps)":
    [{"id": "addAlias___-_LPAR_in-Modifying-Values-in-Maps_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#addAlias___-_LPAR_in-Modifying-Values-in-Maps_RPAR_":
       {"display": "addAlias'",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Suitable Operators for Uniqueness",
         "Modifying Values in Maps"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "addAlias (in Modifying Values in Maps)":
    [{"id": "addAlias-_LPAR_in-Modifying-Values-in-Maps_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#addAlias-_LPAR_in-Modifying-Values-in-Maps_RPAR_":
       {"display": "addAlias",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Suitable Operators for Uniqueness",
         "Modifying Values in Maps"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "add' (in Recursion vs Recursors)":
    [{"id": "add___-_LPAR_in-Recursion-vs-Recursors_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#add___-_LPAR_in-Recursion-vs-Recursors_RPAR_":
       {"display": "add'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Recursion vs Recursors"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "add' (in Integer Negation and Addition)":
    [{"id": "add___-_LPAR_in-Integer-Negation-and-Addition_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#add___-_LPAR_in-Integer-Negation-and-Addition_RPAR_":
       {"display": "add'",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Quotient API",
         "Eliminating Quotients",
         "Integer Negation and Addition"]}},
      "address": "/The-Type-System/Quotients/"}],
    "add (in Recursion vs Recursors)":
    [{"id": "add-_LPAR_in-Recursion-vs-Recursors_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#add-_LPAR_in-Recursion-vs-Recursors_RPAR_":
       {"display": "add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Recursion vs Recursors"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "add (in Parameter Scope)":
    [{"id": "add-_LPAR_in-Parameter-Scope_RPAR_",
      "data":
      {"/Definitions/Headers-and-Signatures/#add-_LPAR_in-Parameter-Scope_RPAR_":
       {"display": "add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Bracketed Parameter Bindings",
         "Parameter Scope"]}},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "add (in Match Patterns Follow Reduction)":
    [{"id": "add-_LPAR_in-Match-Patterns-Follow-Reduction_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#add-_LPAR_in-Match-Patterns-Follow-Reduction_RPAR_":
       {"display": "add",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Custom Pattern Functions",
         "Match Patterns Follow Reduction"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "ack (in Termination Proof Tactics During Inference)":
    [{"id": "ack-_LPAR_in-Termination-Proof-Tactics-During-Inference_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#ack-_LPAR_in-Termination-Proof-Tactics-During-Inference_RPAR_":
       {"display": "ack",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Inferring Well-Founded Recursion",
         "Termination Proof Tactics During Inference"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "ack (in No Backtracking of Lexicographic Order)":
    [{"id": "ack-_LPAR_in-No-Backtracking-of-Lexicographic-Order_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#ack-_LPAR_in-No-Backtracking-of-Lexicographic-Order_RPAR_":
       {"display": "ack",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Default Termination Proof Tactic",
         "No Backtracking of Lexicographic Order"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "ack (in Monadic functions)":
    [{"id": "ack-_LPAR_in-Monadic-functions_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#ack-_LPAR_in-Monadic-functions_RPAR_":
       {"display": "ack",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial Fixpoint Recursion",
         "Monadic functions",
         "Monadic functions"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "accessControl (in Throwing and Catching Errors)":
    [{"id": "accessControl-_LPAR_in-Throwing-and-Catching-Errors_RPAR_",
      "data":
      {"/IO/Logical-Model/#accessControl-_LPAR_in-Throwing-and-Catching-Errors_RPAR_":
       {"display": "accessControl",
        "context":
        ["The Lean Language Reference",
         "IO",
         "Logical Model",
         "Errors and Error Handling in  IO",
         "Throwing and Catching Errors"]}},
      "address": "/IO/Logical-Model/"}],
    "abcs (in Atomic Types and  Repr)":
    [{"id": "abcs-_LPAR_in-Atomic-Types-and--Repr_RPAR_",
      "data":
      {"/Interacting-with-Lean/#abcs-_LPAR_in-Atomic-Types-and--Repr_RPAR_":
       {"display": "abcs",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "Atomic Types",
         "Atomic Types and  Repr"]}},
      "address": "/Interacting-with-Lean/"}],
    "abc (in Atomic Types and  Repr)":
    [{"id": "abc-_LPAR_in-Atomic-Types-and--Repr_RPAR_",
      "data":
      {"/Interacting-with-Lean/#abc-_LPAR_in-Atomic-Types-and--Repr_RPAR_":
       {"display": "abc",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "Atomic Types",
         "Atomic Types and  Repr"]}},
      "address": "/Interacting-with-Lean/"}],
    "aNonemptySumInstance (in Implicit and Explicit Parameters to Instances)":
    [{"id":
      "aNonemptySumInstance-_LPAR_in-Implicit-and-Explicit-Parameters-to-Instances_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#aNonemptySumInstance-_LPAR_in-Implicit-and-Explicit-Parameters-to-Instances_RPAR_":
       {"display": "aNonemptySumInstance",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Instance Parameters and Synthesis",
         "Implicit and Explicit Parameters to Instances"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "_private.Manual.Language.InductiveTypes.Structures.0.NatStringBimap.mk (in Modifiers on structure constructor)":
    [{"id":
      "_private___Manual___Language___InductiveTypes___Structures___0___NatStringBimap___mk-_LPAR_in-Modifiers-on-structure-constructor_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#_private___Manual___Language___InductiveTypes___Structures___0___NatStringBimap___mk-_LPAR_in-Modifiers-on-structure-constructor_RPAR_":
       {"display": "mk",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Modifiers on structure constructor"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "_private.Manual.Grind.ExtendedExamples.IndexMap.0.IndexMap.values":
    [{"id":
      "_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___values",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___values":
       {"display": "values",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.Manual.Grind.ExtendedExamples.IndexMap.0.IndexMap.size_keys'":
    [{"id":
      "_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___size_keys___",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___size_keys___":
       {"display": "size_keys'",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.Manual.Grind.ExtendedExamples.IndexMap.0.IndexMap.size_keys":
    [{"id":
      "_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___size_keys",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___size_keys":
       {"display": "size_keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.Manual.Grind.ExtendedExamples.IndexMap.0.IndexMap.mem_indices_of_mem":
    [{"id":
      "_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___mem_indices_of_mem",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___mem_indices_of_mem":
       {"display": "mem_indices_of_mem",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.Manual.Grind.ExtendedExamples.IndexMap.0.IndexMap.keys":
    [{"id":
      "_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___keys",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___keys":
       {"display": "keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.Manual.Grind.ExtendedExamples.IndexMap.0.IndexMap.indices":
    [{"id":
      "_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___indices",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___indices":
       {"display": "indices",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.Manual.Grind.ExtendedExamples.IndexMap.0.IndexMap.getElem_indices_lt":
    [{"id":
      "_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___getElem_indices_lt",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___getElem_indices_lt":
       {"display": "getElem_indices_lt",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.Manual.Grind.ExtendedExamples.IndexMap.0.IndexMap.getElem_def":
    [{"id":
      "_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___getElem_def",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___getElem_def":
       {"display": "getElem_def",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.Manual.Grind.ExtendedExamples.IndexMap.0.IndexMap.getElem?_def":
    [{"id":
      "_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___getElem____def",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___getElem____def":
       {"display": "getElem?_def",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.Manual.Grind.ExtendedExamples.IndexMap.0.IndexMap.getElem!_def":
    [{"id":
      "_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___getElem____def-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___getElem____def-next":
       {"display": "getElem!_def",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.Manual.Grind.ExtendedExamples.IndexMap.0.IndexMap.WF'":
    [{"id":
      "_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___WF___",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___WF___":
       {"display": "WF'",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.Manual.Grind.ExtendedExamples.IndexMap.0.IndexMap.WF":
    [{"id":
      "_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___WF",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___Manual___Grind___ExtendedExamples___IndexMap___0___IndexMap___WF":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.0.IndexMap.values":
    [{"id": "_private___0___IndexMap___values",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___values":
       {"display": "values",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.0.IndexMap.size_keys'":
    [{"id": "_private___0___IndexMap___size_keys___-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___size_keys___-next":
       {"display": "size_keys'",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___size_keys___":
       {"display": "size_keys'",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "_private___0___IndexMap___size_keys___",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___size_keys___-next":
       {"display": "size_keys'",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___size_keys___":
       {"display": "size_keys'",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.0.IndexMap.size_keys":
    [{"id": "_private___0___IndexMap___size_keys-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___size_keys-next-next":
       {"display": "size_keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___size_keys-next":
       {"display": "size_keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___size_keys":
       {"display": "size_keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "_private___0___IndexMap___size_keys",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___size_keys-next-next":
       {"display": "size_keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___size_keys-next":
       {"display": "size_keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___size_keys":
       {"display": "size_keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "_private___0___IndexMap___size_keys-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___size_keys-next-next":
       {"display": "size_keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___size_keys-next":
       {"display": "size_keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___size_keys":
       {"display": "size_keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.0.IndexMap.mem_indices_of_mem":
    [{"id": "_private___0___IndexMap___mem_indices_of_mem",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___mem_indices_of_mem":
       {"display": "mem_indices_of_mem",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.0.IndexMap.keys":
    [{"id": "_private___0___IndexMap___keys-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___keys-next-next":
       {"display": "keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___keys-next":
       {"display": "keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___keys":
       {"display": "keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "_private___0___IndexMap___keys",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___keys-next-next":
       {"display": "keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___keys-next":
       {"display": "keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___keys":
       {"display": "keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "_private___0___IndexMap___keys-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___keys-next-next":
       {"display": "keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___keys-next":
       {"display": "keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___keys":
       {"display": "keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.0.IndexMap.indices":
    [{"id": "_private___0___IndexMap___indices",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___indices":
       {"display": "indices",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.0.IndexMap.getElem_indices_lt":
    [{"id": "_private___0___IndexMap___getElem_indices_lt",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___getElem_indices_lt":
       {"display": "getElem_indices_lt",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.0.IndexMap.getElem_def":
    [{"id": "_private___0___IndexMap___getElem_def",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___getElem_def":
       {"display": "getElem_def",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.0.IndexMap.getElem?_def":
    [{"id": "_private___0___IndexMap___getElem____def",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___getElem____def":
       {"display": "getElem?_def",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.0.IndexMap.getElem!_def":
    [{"id": "_private___0___IndexMap___getElem____def-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___getElem____def-next":
       {"display": "getElem!_def",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.0.IndexMap.WF'":
    [{"id": "_private___0___IndexMap___WF___",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF___":
       {"display": "WF'",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "_private.0.IndexMap.WF":
    [{"id": "_private___0___IndexMap___WF-next-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF-next-next-next":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF-next-next":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF-next":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "_private___0___IndexMap___WF",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF-next-next-next":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF-next-next":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF-next":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "_private___0___IndexMap___WF-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF-next-next-next":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF-next-next":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF-next":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "_private___0___IndexMap___WF-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF-next-next-next":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF-next-next":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF-next":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#_private___0___IndexMap___WF":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "Z_mk'_respects_eq (in Manually Quotiented Integers)":
    [{"id": "Z_mk____respects_eq-_LPAR_in-Manually-Quotiented-Integers_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#Z_mk____respects_eq-_LPAR_in-Manually-Quotiented-Integers_RPAR_":
       {"display": "Z_mk'_respects_eq",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Alternatives to Quotient Types",
         "Manually Quotiented Integers"]}},
      "address": "/The-Type-System/Quotients/"}],
    "Z.mk' (in Manually Quotiented Integers)":
    [{"id": "Z___mk___-_LPAR_in-Manually-Quotiented-Integers_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#Z___mk___-_LPAR_in-Manually-Quotiented-Integers_RPAR_":
       {"display": "Z.mk'",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Alternatives to Quotient Types",
         "Manually Quotiented Integers"]}},
      "address": "/The-Type-System/Quotients/"}],
    "Z.mk (in The Integers as a Quotient Type)":
    [{"id": "Z___mk-_LPAR_in-The-Integers-as-a-Quotient-Type_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#Z___mk-_LPAR_in-The-Integers-as-a-Quotient-Type_RPAR_":
       {"display": "Z.mk",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Quotient API",
         "Introducing Quotients",
         "The Integers as a Quotient Type"]}},
      "address": "/The-Type-System/Quotients/"}],
    "Z.instSetoid (in The Integers as a Quotient Type)":
    [{"id": "Z___instSetoid-_LPAR_in-The-Integers-as-a-Quotient-Type_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#Z___instSetoid-_LPAR_in-The-Integers-as-a-Quotient-Type_RPAR_":
       {"display": "Z.instSetoid",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Quotient API",
         "Introducing Quotients",
         "The Integers as a Quotient Type"]}},
      "address": "/The-Type-System/Quotients/"}],
    "Z.eq.eqv (in The Integers as a Quotient Type)":
    [{"id": "Z___eq___eqv-_LPAR_in-The-Integers-as-a-Quotient-Type_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#Z___eq___eqv-_LPAR_in-The-Integers-as-a-Quotient-Type_RPAR_":
       {"display": "Z.eq.eqv",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Quotient API",
         "Introducing Quotients",
         "The Integers as a Quotient Type"]}},
      "address": "/The-Type-System/Quotients/"}],
    "Z.eq (in The Integers as a Quotient Type)":
    [{"id": "Z___eq-_LPAR_in-The-Integers-as-a-Quotient-Type_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#Z___eq-_LPAR_in-The-Integers-as-a-Quotient-Type_RPAR_":
       {"display": "Z.eq",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Quotient API",
         "Introducing Quotients",
         "The Integers as a Quotient Type"]}},
      "address": "/The-Type-System/Quotients/"}],
    "Z.canonical (in Manually Quotiented Integers)":
    [{"id": "Z___canonical-_LPAR_in-Manually-Quotiented-Integers_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#Z___canonical-_LPAR_in-Manually-Quotiented-Integers_RPAR_":
       {"display": "canonical",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Alternatives to Quotient Types",
         "Manually Quotiented Integers"]}},
      "address": "/The-Type-System/Quotients/"}],
    "Z.b (in Manually Quotiented Integers)":
    [{"id": "Z___b-_LPAR_in-Manually-Quotiented-Integers_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#Z___b-_LPAR_in-Manually-Quotiented-Integers_RPAR_":
       {"display": "b",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Alternatives to Quotient Types",
         "Manually Quotiented Integers"]}},
      "address": "/The-Type-System/Quotients/"}],
    "Z.add_neg_inverse (in Proofs About Quotients)":
    [{"id": "Z___add_neg_inverse-_LPAR_in-Proofs-About-Quotients_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#Z___add_neg_inverse-_LPAR_in-Proofs-About-Quotients_RPAR_":
       {"display": "Z.add_neg_inverse",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Quotient API",
         "Proofs About Quotients",
         "Proofs About Quotients"]}},
      "address": "/The-Type-System/Quotients/"}],
    "Z.a (in Manually Quotiented Integers)":
    [{"id": "Z___a-_LPAR_in-Manually-Quotiented-Integers_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#Z___a-_LPAR_in-Manually-Quotiented-Integers_RPAR_":
       {"display": "a",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Alternatives to Quotient Types",
         "Manually Quotiented Integers"]}},
      "address": "/The-Type-System/Quotients/"}],
    "Z' (in The Integers as a Quotient Type)":
    [{"id": "Z___-_LPAR_in-The-Integers-as-a-Quotient-Type_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#Z___-_LPAR_in-The-Integers-as-a-Quotient-Type_RPAR_":
       {"display": "Z'",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Quotient API",
         "Introducing Quotients",
         "The Integers as a Quotient Type"]}},
      "address": "/The-Type-System/Quotients/"}],
    "Z (in The Integers as a Quotient Type)":
    [{"id": "Z-_LPAR_in-The-Integers-as-a-Quotient-Type_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#Z-_LPAR_in-The-Integers-as-a-Quotient-Type_RPAR_":
       {"display": "Z",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Quotient API",
         "Introducing Quotients",
         "The Integers as a Quotient Type"]}},
      "address": "/The-Type-System/Quotients/"}],
    "Z (in Manually Quotiented Integers)":
    [{"id": "Z-_LPAR_in-Manually-Quotiented-Integers_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#Z-_LPAR_in-Manually-Quotiented-Integers_RPAR_":
       {"display": "Z",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Alternatives to Quotient Types",
         "Manually Quotiented Integers"]}},
      "address": "/The-Type-System/Quotients/"}],
    "Yes.intro (in A true proposition)":
    [{"id": "Yes___intro-_LPAR_in-A-true-proposition_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Yes___intro-_LPAR_in-A-true-proposition_RPAR_":
       {"display": "intro",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Example Inductive Types",
         "A true proposition"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Yes (in A true proposition)":
    [{"id": "Yes-_LPAR_in-A-true-proposition_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Yes-_LPAR_in-A-true-proposition_RPAR_":
       {"display": "Yes",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Example Inductive Types",
         "A true proposition"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Writer.write (in Dependent Coercion to Functions)":
    [{"id": "Writer___write-_LPAR_in-Dependent-Coercion-to-Functions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Writer___write-_LPAR_in-Dependent-Coercion-to-Functions_RPAR_":
       {"display": "write",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Dependent Coercion to Functions"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Writer.Writes (in Dependent Coercion to Functions)":
    [{"id": "Writer___Writes-_LPAR_in-Dependent-Coercion-to-Functions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Writer___Writes-_LPAR_in-Dependent-Coercion-to-Functions_RPAR_":
       {"display": "Writes",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Dependent Coercion to Functions"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Writer (in Dependent Coercion to Functions)":
    [{"id": "Writer-_LPAR_in-Dependent-Coercion-to-Functions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Writer-_LPAR_in-Dependent-Coercion-to-Functions_RPAR_":
       {"display": "Writer",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Dependent Coercion to Functions"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "WithParam.mk (in Definitional Equality of Unit-Like Types)":
    [{"id":
      "WithParam___mk-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_",
      "data":
      {"/Basic-Types/The-Unit-Type/#WithParam___mk-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_":
       {"display": "mk",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "The Unit Type",
         "Definitional Equality",
         "Definitional Equality of Unit-Like Types"]}},
      "address": "/Basic-Types/The-Unit-Type/"}],
    "WithParam'.zero (in Ineligible decreasing parameters)":
    [{"id":
      "WithParam______zero-_LPAR_in-Ineligible-decreasing-parameters_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#WithParam______zero-_LPAR_in-Ineligible-decreasing-parameters_RPAR_":
       {"display": "zero",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Ineligible decreasing parameters"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "WithParam'.succ (in Ineligible decreasing parameters)":
    [{"id":
      "WithParam______succ-_LPAR_in-Ineligible-decreasing-parameters_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#WithParam______succ-_LPAR_in-Ineligible-decreasing-parameters_RPAR_":
       {"display": "succ",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Ineligible decreasing parameters"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "WithParam' (in Ineligible decreasing parameters)":
    [{"id": "WithParam___-_LPAR_in-Ineligible-decreasing-parameters_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#WithParam___-_LPAR_in-Ineligible-decreasing-parameters_RPAR_":
       {"display": "WithParam'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Ineligible decreasing parameters"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "WithParam (in Definitional Equality of Unit-Like Types)":
    [{"id":
      "WithParam-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_",
      "data":
      {"/Basic-Types/The-Unit-Type/#WithParam-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_":
       {"display": "WithParam",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "The Unit Type",
         "Definitional Equality",
         "Definitional Equality of Unit-Like Types"]}},
      "address": "/Basic-Types/The-Unit-Type/"}],
    "WithCheck (in Invalid Nested Inductive Types)":
    [{"id": "WithCheck-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#WithCheck-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_":
       {"display": "WithCheck",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Invalid Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Weekday.we (in Implementing Coercions)":
    [{"id": "Weekday___we-_LPAR_in-Implementing-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Weekday___we-_LPAR_in-Implementing-Coercions_RPAR_":
       {"display": "we",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Implementing Coercions",
         "Implementing Coercions"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Weekday.tu (in Implementing Coercions)":
    [{"id": "Weekday___tu-_LPAR_in-Implementing-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Weekday___tu-_LPAR_in-Implementing-Coercions_RPAR_":
       {"display": "tu",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Implementing Coercions",
         "Implementing Coercions"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Weekday.toFin (in Implementing Coercions)":
    [{"id": "Weekday___toFin-_LPAR_in-Implementing-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Weekday___toFin-_LPAR_in-Implementing-Coercions_RPAR_":
       {"display": "Weekday.toFin",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Implementing Coercions",
         "Implementing Coercions"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Weekday.th (in Implementing Coercions)":
    [{"id": "Weekday___th-_LPAR_in-Implementing-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Weekday___th-_LPAR_in-Implementing-Coercions_RPAR_":
       {"display": "th",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Implementing Coercions",
         "Implementing Coercions"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Weekday.su (in Implementing Coercions)":
    [{"id": "Weekday___su-_LPAR_in-Implementing-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Weekday___su-_LPAR_in-Implementing-Coercions_RPAR_":
       {"display": "su",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Implementing Coercions",
         "Implementing Coercions"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Weekday.sa (in Implementing Coercions)":
    [{"id": "Weekday___sa-_LPAR_in-Implementing-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Weekday___sa-_LPAR_in-Implementing-Coercions_RPAR_":
       {"display": "sa",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Implementing Coercions",
         "Implementing Coercions"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Weekday.mo (in Implementing Coercions)":
    [{"id": "Weekday___mo-_LPAR_in-Implementing-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Weekday___mo-_LPAR_in-Implementing-Coercions_RPAR_":
       {"display": "mo",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Implementing Coercions",
         "Implementing Coercions"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Weekday.fromFin (in Implementing Coercions)":
    [{"id": "Weekday___fromFin-_LPAR_in-Implementing-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Weekday___fromFin-_LPAR_in-Implementing-Coercions_RPAR_":
       {"display": "Weekday.fromFin",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Implementing Coercions",
         "Implementing Coercions"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Weekday.fr (in Implementing Coercions)":
    [{"id": "Weekday___fr-_LPAR_in-Implementing-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Weekday___fr-_LPAR_in-Implementing-Coercions_RPAR_":
       {"display": "fr",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Implementing Coercions",
         "Implementing Coercions"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Weekday (in Implementing Coercions)":
    [{"id": "Weekday-_LPAR_in-Implementing-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Weekday-_LPAR_in-Implementing-Coercions_RPAR_":
       {"display": "Weekday",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Implementing Coercions",
         "Implementing Coercions"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Vehicle.wheels (in #print  and Structure Types)":
    [{"id": "Vehicle___wheels-_LPAR_in-___print--and-Structure-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Vehicle___wheels-_LPAR_in-___print--and-Structure-Types_RPAR_":
       {"display": "wheels",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "#print  and Structure Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Vehicle (in #print  and Structure Types)":
    [{"id": "Vehicle-_LPAR_in-___print--and-Structure-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Vehicle-_LPAR_in-___print--and-Structure-Types_RPAR_":
       {"display": "Vehicle",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "#print  and Structure Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Vegetable.size (in Using  Ord  Instances for  LT  and  LE  Instances)":
    [{"id":
      "Vegetable___size-_LPAR_in-Using--Ord--Instances-for--LT--and--LE--Instances_RPAR_",
      "data":
      {"/Type-Classes/Basic-Classes/#Vegetable___size-_LPAR_in-Using--Ord--Instances-for--LT--and--LE--Instances_RPAR_":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Basic Classes",
         "Ordering",
         "Using  Ord  Instances for  LT  and  LE  Instances"]}},
      "address": "/Type-Classes/Basic-Classes/"}],
    "Vegetable.color (in Using  Ord  Instances for  LT  and  LE  Instances)":
    [{"id":
      "Vegetable___color-_LPAR_in-Using--Ord--Instances-for--LT--and--LE--Instances_RPAR_",
      "data":
      {"/Type-Classes/Basic-Classes/#Vegetable___color-_LPAR_in-Using--Ord--Instances-for--LT--and--LE--Instances_RPAR_":
       {"display": "color",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Basic Classes",
         "Ordering",
         "Using  Ord  Instances for  LT  and  LE  Instances"]}},
      "address": "/Type-Classes/Basic-Classes/"}],
    "Vegetable (in Using  Ord  Instances for  LT  and  LE  Instances)":
    [{"id":
      "Vegetable-_LPAR_in-Using--Ord--Instances-for--LT--and--LE--Instances_RPAR_",
      "data":
      {"/Type-Classes/Basic-Classes/#Vegetable-_LPAR_in-Using--Ord--Instances-for--LT--and--LE--Instances_RPAR_":
       {"display": "Vegetable",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Basic Classes",
         "Ordering",
         "Using  Ord  Instances for  LT  and  LE  Instances"]}},
      "address": "/Type-Classes/Basic-Classes/"}],
    "Veg.Leafy.spinach (in Exported Names)":
    [{"id": "Veg___Leafy___spinach-_LPAR_in-Exported-Names_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#Veg___Leafy___spinach-_LPAR_in-Exported-Names_RPAR_":
       {"display": "spinach",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Exporting Names",
         "Exported Names"]}},
      "address": "/Namespaces-and-Sections/"}],
    "Veg.Leafy.cabbage (in Exported Names)":
    [{"id": "Veg___Leafy___cabbage-_LPAR_in-Exported-Names_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#Veg___Leafy___cabbage-_LPAR_in-Exported-Names_RPAR_":
       {"display": "cabbage",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Exporting Names",
         "Exported Names"]}},
      "address": "/Namespaces-and-Sections/"}],
    "Veg.Leafy (in Exported Names)":
    [{"id": "Veg___Leafy-_LPAR_in-Exported-Names_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#Veg___Leafy-_LPAR_in-Exported-Names_RPAR_":
       {"display": "Leafy",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Exporting Names",
         "Exported Names"]}},
      "address": "/Namespaces-and-Sections/"}],
    "Vector.append_associative' (in Heterogeneous Equality)":
    [{"id":
      "Vector___append_associative___-_LPAR_in-Heterogeneous-Equality_RPAR_",
      "data":
      {"/Basic-Propositions/Propositional-Equality/#Vector___append_associative___-_LPAR_in-Heterogeneous-Equality_RPAR_":
       {"display": "Vector.append_associative'",
        "context":
        ["The Lean Language Reference",
         "Basic Propositions",
         "Propositional Equality",
         "Heterogeneous Equality",
         "Heterogeneous Equality"]}},
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "Vector.append_associative (in Heterogeneous Equality)":
    [{"id":
      "Vector___append_associative-_LPAR_in-Heterogeneous-Equality_RPAR_",
      "data":
      {"/Basic-Propositions/Propositional-Equality/#Vector___append_associative-_LPAR_in-Heterogeneous-Equality_RPAR_-next":
       {"display": "Vector.append_associative",
        "context":
        ["The Lean Language Reference",
         "Basic Propositions",
         "Propositional Equality",
         "Heterogeneous Equality",
         "Heterogeneous Equality"]},
       "/Basic-Propositions/Propositional-Equality/#Vector___append_associative-_LPAR_in-Heterogeneous-Equality_RPAR_":
       {"display": "Vector.append_associative",
        "context":
        ["The Lean Language Reference",
         "Basic Propositions",
         "Propositional Equality",
         "Heterogeneous Equality",
         "Heterogeneous Equality"]}},
      "address": "/Basic-Propositions/Propositional-Equality/"},
     {"id":
      "Vector___append_associative-_LPAR_in-Heterogeneous-Equality_RPAR_-next",
      "data":
      {"/Basic-Propositions/Propositional-Equality/#Vector___append_associative-_LPAR_in-Heterogeneous-Equality_RPAR_-next":
       {"display": "Vector.append_associative",
        "context":
        ["The Lean Language Reference",
         "Basic Propositions",
         "Propositional Equality",
         "Heterogeneous Equality",
         "Heterogeneous Equality"]},
       "/Basic-Propositions/Propositional-Equality/#Vector___append_associative-_LPAR_in-Heterogeneous-Equality_RPAR_":
       {"display": "Vector.append_associative",
        "context":
        ["The Lean Language Reference",
         "Basic Propositions",
         "Propositional Equality",
         "Heterogeneous Equality",
         "Heterogeneous Equality"]}},
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "Vec.nil (in Vector length index as a parameter)":
    [{"id": "Vec___nil-_LPAR_in-Vector-length-index-as-a-parameter_RPAR_",
      "data":
      {"/Error-Explanations/lean___inductiveParamMismatch/#Vec___nil-_LPAR_in-Vector-length-index-as-a-parameter_RPAR_":
       {"display": "nil",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMismatch",
         "Examples",
         "Vector length index as a parameter"]}},
      "address": "/Error-Explanations/lean___inductiveParamMismatch/"}],
    "Vec.cons (in Vector length index as a parameter)":
    [{"id": "Vec___cons-_LPAR_in-Vector-length-index-as-a-parameter_RPAR_",
      "data":
      {"/Error-Explanations/lean___inductiveParamMismatch/#Vec___cons-_LPAR_in-Vector-length-index-as-a-parameter_RPAR_":
       {"display": "cons",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMismatch",
         "Examples",
         "Vector length index as a parameter"]}},
      "address": "/Error-Explanations/lean___inductiveParamMismatch/"}],
    "Vec (in Vector length index as a parameter)":
    [{"id": "Vec-_LPAR_in-Vector-length-index-as-a-parameter_RPAR_",
      "data":
      {"/Error-Explanations/lean___inductiveParamMismatch/#Vec-_LPAR_in-Vector-length-index-as-a-parameter_RPAR_-next":
       {"display": "Vec",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMismatch",
         "Examples",
         "Vector length index as a parameter"]},
       "/Error-Explanations/lean___inductiveParamMismatch/#Vec-_LPAR_in-Vector-length-index-as-a-parameter_RPAR_":
       {"display": "Vec",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMismatch",
         "Examples",
         "Vector length index as a parameter"]}},
      "address": "/Error-Explanations/lean___inductiveParamMismatch/"},
     {"id": "Vec-_LPAR_in-Vector-length-index-as-a-parameter_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___inductiveParamMismatch/#Vec-_LPAR_in-Vector-length-index-as-a-parameter_RPAR_-next":
       {"display": "Vec",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMismatch",
         "Examples",
         "Vector length index as a parameter"]},
       "/Error-Explanations/lean___inductiveParamMismatch/#Vec-_LPAR_in-Vector-length-index-as-a-parameter_RPAR_":
       {"display": "Vec",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMismatch",
         "Examples",
         "Vector length index as a parameter"]}},
      "address": "/Error-Explanations/lean___inductiveParamMismatch/"}],
    "Vacant (in A constructorless type)":
    [{"id": "Vacant-_LPAR_in-A-constructorless-type_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Vacant-_LPAR_in-A-constructorless-type_RPAR_":
       {"display": "Vacant",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Example Inductive Types",
         "A constructorless type"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Utterance (in Reducibility and Instance Synthesis)":
    [{"id": "Utterance-_LPAR_in-Reducibility-and-Instance-Synthesis_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Utterance-_LPAR_in-Reducibility-and-Instance-Synthesis_RPAR_":
       {"display": "Utterance",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Instance Synthesis"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Username.validate (in Generalized Field Notation)":
    [{"id": "Username___validate-_LPAR_in-Generalized-Field-Notation_RPAR_",
      "data":
      {"/Terms/Function-Application/#Username___validate-_LPAR_in-Generalized-Field-Notation_RPAR_":
       {"display": "Username.validate",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Function Application",
         "Generalized Field Notation",
         "Generalized Field Notation"]}},
      "address": "/Terms/Function-Application/"}],
    "Username (in Generalized Field Notation)":
    [{"id": "Username-_LPAR_in-Generalized-Field-Notation_RPAR_",
      "data":
      {"/Terms/Function-Application/#Username-_LPAR_in-Generalized-Field-Notation_RPAR_":
       {"display": "Username",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Function Application",
         "Generalized Field Notation",
         "Generalized Field Notation"]}},
      "address": "/Terms/Function-Application/"}],
    "User.name (in Infix  Functor  and  Applicative  Operators)":
    [{"id":
      "User___name-_LPAR_in-Infix--Functor--and--Applicative--Operators_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Syntax/#User___name-_LPAR_in-Infix--Functor--and--Applicative--Operators_RPAR_":
       {"display": "name",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Syntax",
         "Infix Operators",
         "Applicative Functors",
         "Infix  Functor  and  Applicative  Operators"]}},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "User.name":
    [{"id": "User___name",
      "data":
      {"/Functors___-Monads-and--do--Notation/Syntax/#User___name":
       {"display": "name",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Syntax",
         "Infix Operators",
         "Applicative Functors"]}},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "User.favoriteNat (in Infix  Functor  and  Applicative  Operators)":
    [{"id":
      "User___favoriteNat-_LPAR_in-Infix--Functor--and--Applicative--Operators_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Syntax/#User___favoriteNat-_LPAR_in-Infix--Functor--and--Applicative--Operators_RPAR_":
       {"display": "favoriteNat",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Syntax",
         "Infix Operators",
         "Applicative Functors",
         "Infix  Functor  and  Applicative  Operators"]}},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "User.favoriteNat":
    [{"id": "User___favoriteNat",
      "data":
      {"/Functors___-Monads-and--do--Notation/Syntax/#User___favoriteNat":
       {"display": "favoriteNat",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Syntax",
         "Infix Operators",
         "Applicative Functors"]}},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "User (in Infix  Functor  and  Applicative  Operators)":
    [{"id": "User-_LPAR_in-Infix--Functor--and--Applicative--Operators_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Syntax/#User-_LPAR_in-Infix--Functor--and--Applicative--Operators_RPAR_":
       {"display": "User",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Syntax",
         "Infix Operators",
         "Applicative Functors",
         "Infix  Functor  and  Applicative  Operators"]}},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "User":
    [{"id": "User",
      "data":
      {"/Functors___-Monads-and--do--Notation/Syntax/#User":
       {"display": "User",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Syntax",
         "Infix Operators",
         "Applicative Functors"]}},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Ty.nat (in Coercing to Function Types)":
    [{"id": "Ty___nat-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Ty___nat-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "nat",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Ty.interp (in Coercing to Function Types)":
    [{"id": "Ty___interp-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Ty___interp-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "Ty.interp",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Ty.arr (in Coercing to Function Types)":
    [{"id": "Ty___arr-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Ty___arr-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "arr",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Ty (in Coercing to Function Types)":
    [{"id": "Ty-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Ty-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "Ty",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Two.mk (in Spuriously mutual types)":
    [{"id": "Two___mk-_LPAR_in-Spuriously-mutual-types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Two___mk-_LPAR_in-Spuriously-mutual-types_RPAR_":
       {"display": "mk",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Recursors",
         "Spuriously mutual types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Two (in Spuriously mutual types)":
    [{"id": "Two-_LPAR_in-Spuriously-mutual-types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Two-_LPAR_in-Spuriously-mutual-types_RPAR_":
       {"display": "Two",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Recursors",
         "Spuriously mutual types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Twice.second (in Duplicate Evaluation in Coercions)":
    [{"id": "Twice___second-_LPAR_in-Duplicate-Evaluation-in-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercion-Insertion/#Twice___second-_LPAR_in-Duplicate-Evaluation-in-Coercions_RPAR_":
       {"display": "second",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercion Insertion",
         "Duplicate Evaluation in Coercions"]}},
      "address": "/Coercions/Coercion-Insertion/"}],
    "Twice.first_eq_second (in Duplicate Evaluation in Coercions)":
    [{"id":
      "Twice___first_eq_second-_LPAR_in-Duplicate-Evaluation-in-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercion-Insertion/#Twice___first_eq_second-_LPAR_in-Duplicate-Evaluation-in-Coercions_RPAR_":
       {"display": "first_eq_second",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercion Insertion",
         "Duplicate Evaluation in Coercions"]}},
      "address": "/Coercions/Coercion-Insertion/"}],
    "Twice.first (in Duplicate Evaluation in Coercions)":
    [{"id": "Twice___first-_LPAR_in-Duplicate-Evaluation-in-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercion-Insertion/#Twice___first-_LPAR_in-Duplicate-Evaluation-in-Coercions_RPAR_":
       {"display": "first",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercion Insertion",
         "Duplicate Evaluation in Coercions"]}},
      "address": "/Coercions/Coercion-Insertion/"}],
    "Twice (in Duplicate Evaluation in Coercions)":
    [{"id": "Twice-_LPAR_in-Duplicate-Evaluation-in-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercion-Insertion/#Twice-_LPAR_in-Duplicate-Evaluation-in-Coercions_RPAR_":
       {"display": "Twice",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercion Insertion",
         "Duplicate Evaluation in Coercions"]}},
      "address": "/Coercions/Coercion-Insertion/"}],
    "Truthy.val (in CoeOut  vs  Coe  instances)":
    [{"id": "Truthy___val-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Truthy___val-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_":
       {"display": "val",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "CoeOut  vs  Coe  instances"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Truthy.toBool (in CoeOut  vs  Coe  instances)":
    [{"id": "Truthy___toBool-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Truthy___toBool-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_":
       {"display": "Truthy.toBool",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "CoeOut  vs  Coe  instances"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Truthy.isTrue (in CoeOut  vs  Coe  instances)":
    [{"id": "Truthy___isTrue-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Truthy___isTrue-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_":
       {"display": "isTrue",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "CoeOut  vs  Coe  instances"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Truthy (in CoeOut  vs  Coe  instances)":
    [{"id": "Truthy-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Truthy-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_":
       {"display": "Truthy",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "CoeOut  vs  Coe  instances"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Triple.thd (in Field Indices and Structure Inheritance)":
    [{"id":
      "Triple___thd-_LPAR_in-Field-Indices-and-Structure-Inheritance_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Triple___thd-_LPAR_in-Field-Indices-and-Structure-Inheritance_RPAR_":
       {"display": "thd",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "Field Indices and Structure Inheritance"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Triple (in Field Indices and Structure Inheritance)":
    [{"id": "Triple-_LPAR_in-Field-Indices-and-Structure-Inheritance_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Triple-_LPAR_in-Field-Indices-and-Structure-Inheritance_RPAR_":
       {"display": "Triple",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "Field Indices and Structure Inheritance"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Tree.val (in Displaying Differences)":
    [{"id": "Tree___val-_LPAR_in-Displaying-Differences_RPAR_",
      "data":
      {"/Interacting-with-Lean/#Tree___val-_LPAR_in-Displaying-Differences_RPAR_":
       {"display": "val",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Testing Output with  #guard_msgs",
         "Displaying Differences"]}},
      "address": "/Interacting-with-Lean/"}],
    "Tree.rev' (in Monadic functions)":
    [{"id": "Tree___rev___-_LPAR_in-Monadic-functions_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___rev___-_LPAR_in-Monadic-functions_RPAR_":
       {"display": "Tree.rev'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial Fixpoint Recursion",
         "Monadic functions",
         "Monadic functions"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree.rev (in Monadic functions)":
    [{"id": "Tree___rev-_LPAR_in-Monadic-functions_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___rev-_LPAR_in-Monadic-functions_RPAR_":
       {"display": "Tree.rev",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial Fixpoint Recursion",
         "Monadic functions",
         "Monadic functions"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree.node (in Typo in resulting type)":
    [{"id": "Tree___node-_LPAR_in-Typo-in-resulting-type_RPAR_",
      "data":
      {"/Error-Explanations/lean___ctorResultingTypeMismatch/#Tree___node-_LPAR_in-Typo-in-resulting-type_RPAR_":
       {"display": "node",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Typo in resulting type"]}},
      "address": "/Error-Explanations/lean___ctorResultingTypeMismatch/"}],
    "Tree.node (in Preprocessing for a custom data type)":
    [{"id": "Tree___node-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___node-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "node",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree.map (in Preprocessing for a custom data type)":
    [{"id":
      "Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_-next-next-next",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_-next-next-next":
       {"display": "Tree.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]},
       "/Definitions/Recursive-Definitions/#Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_-next-next":
       {"display": "Tree.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]},
       "/Definitions/Recursive-Definitions/#Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_-next":
       {"display": "Tree.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]},
       "/Definitions/Recursive-Definitions/#Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "Tree.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id":
      "Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_-next-next",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_-next-next-next":
       {"display": "Tree.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]},
       "/Definitions/Recursive-Definitions/#Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_-next-next":
       {"display": "Tree.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]},
       "/Definitions/Recursive-Definitions/#Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_-next":
       {"display": "Tree.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]},
       "/Definitions/Recursive-Definitions/#Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "Tree.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id":
      "Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_-next-next-next":
       {"display": "Tree.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]},
       "/Definitions/Recursive-Definitions/#Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_-next-next":
       {"display": "Tree.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]},
       "/Definitions/Recursive-Definitions/#Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_-next":
       {"display": "Tree.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]},
       "/Definitions/Recursive-Definitions/#Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "Tree.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_-next-next-next":
       {"display": "Tree.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]},
       "/Definitions/Recursive-Definitions/#Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_-next-next":
       {"display": "Tree.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]},
       "/Definitions/Recursive-Definitions/#Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_-next":
       {"display": "Tree.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]},
       "/Definitions/Recursive-Definitions/#Tree___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "Tree.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree.leaf (in Typo in resulting type)":
    [{"id": "Tree___leaf-_LPAR_in-Typo-in-resulting-type_RPAR_",
      "data":
      {"/Error-Explanations/lean___ctorResultingTypeMismatch/#Tree___leaf-_LPAR_in-Typo-in-resulting-type_RPAR_":
       {"display": "leaf",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Typo in resulting type"]}},
      "address": "/Error-Explanations/lean___ctorResultingTypeMismatch/"}],
    "Tree.leaf (in Preprocessing for a custom data type)":
    [{"id": "Tree___leaf-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___leaf-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "leaf",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree.leaf (in Course-of-Values Tables)":
    [{"id": "Tree___leaf-_LPAR_in-Course-of-Values-Tables_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___leaf-_LPAR_in-Course-of-Values-Tables_RPAR_":
       {"display": "leaf",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Course-of-Values Tables"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree.fastBEq (in Checking Equality with Pointers)":
    [{"id": "Tree___fastBEq-_LPAR_in-Checking-Equality-with-Pointers_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___fastBEq-_LPAR_in-Checking-Equality-with-Pointers_RPAR_":
       {"display": "Tree.fastBEq",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial and Unsafe Definitions",
         "Unsafe Definitions",
         "Checking Equality with Pointers"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree.empty (in Checking Equality with Pointers)":
    [{"id": "Tree___empty-_LPAR_in-Checking-Equality-with-Pointers_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___empty-_LPAR_in-Checking-Equality-with-Pointers_RPAR_":
       {"display": "empty",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial and Unsafe Definitions",
         "Unsafe Definitions",
         "Checking Equality with Pointers"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree.cs (in Monadic functions)":
    [{"id": "Tree___cs-_LPAR_in-Monadic-functions_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___cs-_LPAR_in-Monadic-functions_RPAR_":
       {"display": "cs",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial Fixpoint Recursion",
         "Monadic functions",
         "Monadic functions"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree.brecOnTable (in Course-of-Values Tables)":
    [{"id": "Tree___brecOnTable-_LPAR_in-Course-of-Values-Tables_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___brecOnTable-_LPAR_in-Course-of-Values-Tables_RPAR_":
       {"display": "Tree.brecOnTable",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Course-of-Values Tables"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree.brecOn' (in Course-of-Values Tables)":
    [{"id": "Tree___brecOn___-_LPAR_in-Course-of-Values-Tables_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___brecOn___-_LPAR_in-Course-of-Values-Tables_RPAR_":
       {"display": "Tree.brecOn'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Course-of-Values Tables"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree.branches (in Displaying Differences)":
    [{"id": "Tree___branches-_LPAR_in-Displaying-Differences_RPAR_",
      "data":
      {"/Interacting-with-Lean/#Tree___branches-_LPAR_in-Displaying-Differences_RPAR_":
       {"display": "branches",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Testing Output with  #guard_msgs",
         "Displaying Differences"]}},
      "address": "/Interacting-with-Lean/"}],
    "Tree.branch (in Course-of-Values Tables)":
    [{"id": "Tree___branch-_LPAR_in-Course-of-Values-Tables_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___branch-_LPAR_in-Course-of-Values-Tables_RPAR_":
       {"display": "branch",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Course-of-Values Tables"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree.branch (in Checking Equality with Pointers)":
    [{"id": "Tree___branch-_LPAR_in-Checking-Equality-with-Pointers_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___branch-_LPAR_in-Checking-Equality-with-Pointers_RPAR_":
       {"display": "branch",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial and Unsafe Definitions",
         "Unsafe Definitions",
         "Checking Equality with Pointers"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree.big (in Displaying Differences)":
    [{"id": "Tree___big-_LPAR_in-Displaying-Differences_RPAR_",
      "data":
      {"/Interacting-with-Lean/#Tree___big-_LPAR_in-Displaying-Differences_RPAR_":
       {"display": "Tree.big",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Testing Output with  #guard_msgs",
         "Displaying Differences"]}},
      "address": "/Interacting-with-Lean/"}],
    "Tree.beq (in Checking Equality with Pointers)":
    [{"id": "Tree___beq-_LPAR_in-Checking-Equality-with-Pointers_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___beq-_LPAR_in-Checking-Equality-with-Pointers_RPAR_":
       {"display": "Tree.beq",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial and Unsafe Definitions",
         "Unsafe Definitions",
         "Checking Equality with Pointers"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree.below' (in Course-of-Values Tables)":
    [{"id": "Tree___below___-_LPAR_in-Course-of-Values-Tables_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree___below___-_LPAR_in-Course-of-Values-Tables_RPAR_":
       {"display": "Tree.below'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Course-of-Values Tables"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree (in Typo in resulting type)":
    [{"id": "Tree-_LPAR_in-Typo-in-resulting-type_RPAR_",
      "data":
      {"/Error-Explanations/lean___ctorResultingTypeMismatch/#Tree-_LPAR_in-Typo-in-resulting-type_RPAR_-next":
       {"display": "Tree",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Typo in resulting type"]},
       "/Error-Explanations/lean___ctorResultingTypeMismatch/#Tree-_LPAR_in-Typo-in-resulting-type_RPAR_":
       {"display": "Tree",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Typo in resulting type"]}},
      "address": "/Error-Explanations/lean___ctorResultingTypeMismatch/"},
     {"id": "Tree-_LPAR_in-Typo-in-resulting-type_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___ctorResultingTypeMismatch/#Tree-_LPAR_in-Typo-in-resulting-type_RPAR_-next":
       {"display": "Tree",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Typo in resulting type"]},
       "/Error-Explanations/lean___ctorResultingTypeMismatch/#Tree-_LPAR_in-Typo-in-resulting-type_RPAR_":
       {"display": "Tree",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Typo in resulting type"]}},
      "address": "/Error-Explanations/lean___ctorResultingTypeMismatch/"}],
    "Tree (in Preprocessing for a custom data type)":
    [{"id": "Tree-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "Tree",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree (in Monadic functions)":
    [{"id": "Tree-_LPAR_in-Monadic-functions_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree-_LPAR_in-Monadic-functions_RPAR_":
       {"display": "Tree",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial Fixpoint Recursion",
         "Monadic functions",
         "Monadic functions"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree (in Displaying Differences)":
    [{"id": "Tree-_LPAR_in-Displaying-Differences_RPAR_",
      "data":
      {"/Interacting-with-Lean/#Tree-_LPAR_in-Displaying-Differences_RPAR_":
       {"display": "Tree",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Testing Output with  #guard_msgs",
         "Displaying Differences"]}},
      "address": "/Interacting-with-Lean/"}],
    "Tree (in Course-of-Values Tables)":
    [{"id": "Tree-_LPAR_in-Course-of-Values-Tables_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree-_LPAR_in-Course-of-Values-Tables_RPAR_":
       {"display": "Tree",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Course-of-Values Tables"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tree (in Checking Equality with Pointers)":
    [{"id": "Tree-_LPAR_in-Checking-Equality-with-Pointers_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Tree-_LPAR_in-Checking-Equality-with-Pointers_RPAR_":
       {"display": "Tree",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial and Unsafe Definitions",
         "Unsafe Definitions",
         "Checking Equality with Pointers"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Tm.zero (in Coercing to Function Types)":
    [{"id": "Tm___zero-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Tm___zero-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "zero",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Tm.var (in Coercing to Function Types)":
    [{"id": "Tm___var-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Tm___var-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "var",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Tm.v (in Coercing to Function Types)":
    [{"id": "Tm___v-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Tm___v-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "Tm.v",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Tm.succ (in Coercing to Function Types)":
    [{"id": "Tm___succ-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Tm___succ-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "succ",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Tm.rep (in Coercing to Function Types)":
    [{"id": "Tm___rep-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Tm___rep-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "rep",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Tm.lam (in Coercing to Function Types)":
    [{"id": "Tm___lam-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Tm___lam-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "lam",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Tm.interp (in Coercing to Function Types)":
    [{"id": "Tm___interp-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Tm___interp-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "Tm.interp",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Tm.app (in Coercing to Function Types)":
    [{"id": "Tm___app-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Tm___app-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "app",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Tm (in Mutual strict positivity)":
    [{"id": "Tm-_LPAR_in-Mutual-strict-positivity_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Tm-_LPAR_in-Mutual-strict-positivity_RPAR_":
       {"display": "Tm",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Positivity",
         "Mutual strict positivity"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Tm (in Coercing to Function Types)":
    [{"id": "Tm-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Tm-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "Tm",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "ThreeChoices.yes (in An instance for a sum class)":
    [{"id": "ThreeChoices___yes-_LPAR_in-An-instance-for-a-sum-class_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#ThreeChoices___yes-_LPAR_in-An-instance-for-a-sum-class_RPAR_":
       {"display": "yes",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Instances of  class inductive s",
         "An instance for a sum class"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "ThreeChoices.no (in An instance for a sum class)":
    [{"id": "ThreeChoices___no-_LPAR_in-An-instance-for-a-sum-class_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#ThreeChoices___no-_LPAR_in-An-instance-for-a-sum-class_RPAR_":
       {"display": "no",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Instances of  class inductive s",
         "An instance for a sum class"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "ThreeChoices.maybe (in An instance for a sum class)":
    [{"id": "ThreeChoices___maybe-_LPAR_in-An-instance-for-a-sum-class_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#ThreeChoices___maybe-_LPAR_in-An-instance-for-a-sum-class_RPAR_":
       {"display": "maybe",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Instances of  class inductive s",
         "An instance for a sum class"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "ThreeChoices (in An instance for a sum class)":
    [{"id": "ThreeChoices-_LPAR_in-An-instance-for-a-sum-class_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#ThreeChoices-_LPAR_in-An-instance-for-a-sum-class_RPAR_":
       {"display": "ThreeChoices",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Instances of  class inductive s",
         "An instance for a sum class"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "Three.mk (in Spuriously mutual types)":
    [{"id": "Three___mk-_LPAR_in-Spuriously-mutual-types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Three___mk-_LPAR_in-Spuriously-mutual-types_RPAR_":
       {"display": "mk",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Recursors",
         "Spuriously mutual types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Three (in Spuriously mutual types)":
    [{"id": "Three-_LPAR_in-Spuriously-mutual-types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Three-_LPAR_in-Spuriously-mutual-types_RPAR_":
       {"display": "Three",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Recursors",
         "Spuriously mutual types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Textbook (in Structure type inheritance with overlapping fields)":
    [{"id":
      "Textbook-_LPAR_in-Structure-type-inheritance-with-overlapping-fields_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Textbook-_LPAR_in-Structure-type-inheritance-with-overlapping-fields_RPAR_":
       {"display": "Textbook",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "Structure type inheritance with overlapping fields"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Sum'.swap (in Dependent Pairs as Sums)":
    [{"id": "Sum______swap-_LPAR_in-Dependent-Pairs-as-Sums_RPAR_",
      "data":
      {"/Basic-Types/Tuples/#Sum______swap-_LPAR_in-Dependent-Pairs-as-Sums_RPAR_":
       {"display": "Sum'.swap",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Tuples",
         "Dependent Pairs",
         "Dependent Pairs as Sums"]}},
      "address": "/Basic-Types/Tuples/"}],
    "Sum'.inr (in Dependent Pairs as Sums)":
    [{"id": "Sum______inr-_LPAR_in-Dependent-Pairs-as-Sums_RPAR_",
      "data":
      {"/Basic-Types/Tuples/#Sum______inr-_LPAR_in-Dependent-Pairs-as-Sums_RPAR_":
       {"display": "Sum'.inr",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Tuples",
         "Dependent Pairs",
         "Dependent Pairs as Sums"]}},
      "address": "/Basic-Types/Tuples/"}],
    "Sum'.inl (in Dependent Pairs as Sums)":
    [{"id": "Sum______inl-_LPAR_in-Dependent-Pairs-as-Sums_RPAR_",
      "data":
      {"/Basic-Types/Tuples/#Sum______inl-_LPAR_in-Dependent-Pairs-as-Sums_RPAR_":
       {"display": "Sum'.inl",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Tuples",
         "Dependent Pairs",
         "Dependent Pairs as Sums"]}},
      "address": "/Basic-Types/Tuples/"}],
    "Sum' (in Dependent Pairs as Sums)":
    [{"id": "Sum___-_LPAR_in-Dependent-Pairs-as-Sums_RPAR_",
      "data":
      {"/Basic-Types/Tuples/#Sum___-_LPAR_in-Dependent-Pairs-as-Sums_RPAR_":
       {"display": "Sum'",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Tuples",
         "Dependent Pairs",
         "Dependent Pairs as Sums"]}},
      "address": "/Basic-Types/Tuples/"}],
    "Stx.node (in Nested positions)":
    [{"id": "Stx___node-_LPAR_in-Nested-positions_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Stx___node-_LPAR_in-Nested-positions_RPAR_":
       {"display": "node",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Positivity",
         "Nested positions"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Stx.atom (in Nested positions)":
    [{"id": "Stx___atom-_LPAR_in-Nested-positions_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Stx___atom-_LPAR_in-Nested-positions_RPAR_":
       {"display": "atom",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Positivity",
         "Nested positions"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Stx (in Nested positions)":
    [{"id": "Stx-_LPAR_in-Nested-positions_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Stx-_LPAR_in-Nested-positions_RPAR_":
       {"display": "Stx",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Positivity",
         "Nested positions"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "StringMonoid (in Sort Coercions)":
    [{"id": "StringMonoid-_LPAR_in-Sort-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Sorts/#StringMonoid-_LPAR_in-Sort-Coercions_RPAR_":
       {"display": "StringMonoid",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Sorts",
         "Sort Coercions"]}},
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "StringList.nil (in A recursive instance for a sum class)":
    [{"id":
      "StringList___nil-_LPAR_in-A-recursive-instance-for-a-sum-class_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#StringList___nil-_LPAR_in-A-recursive-instance-for-a-sum-class_RPAR_":
       {"display": "nil",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Instances of  class inductive s",
         "A recursive instance for a sum class"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "StringList.cons (in A recursive instance for a sum class)":
    [{"id":
      "StringList___cons-_LPAR_in-A-recursive-instance-for-a-sum-class_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#StringList___cons-_LPAR_in-A-recursive-instance-for-a-sum-class_RPAR_":
       {"display": "cons",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Instances of  class inductive s",
         "A recursive instance for a sum class"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "StringList (in A recursive instance for a sum class)":
    [{"id": "StringList-_LPAR_in-A-recursive-instance-for-a-sum-class_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#StringList-_LPAR_in-A-recursive-instance-for-a-sum-class_RPAR_":
       {"display": "StringList",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Instances of  class inductive s",
         "A recursive instance for a sum class"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "Spurious (in Universes, constructors, and parameters)":
    [{"id":
      "Spurious-_LPAR_in-Universes___-constructors___-and-parameters_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Spurious-_LPAR_in-Universes___-constructors___-and-parameters_RPAR_":
       {"display": "Spurious",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Logical Model",
         "Well-Formedness Requirements",
         "Universe Levels",
         "Universes, constructors, and parameters"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Solo.solo (in A unit type)":
    [{"id": "Solo___solo-_LPAR_in-A-unit-type_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Solo___solo-_LPAR_in-A-unit-type_RPAR_":
       {"display": "solo",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Example Inductive Types",
         "A unit type"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Solo.mk (in Custom Unit Type)":
    [{"id": "Solo___mk-_LPAR_in-Custom-Unit-Type_RPAR_",
      "data":
      {"/Notations-and-Macros/Extending-Lean___s-Output/#Solo___mk-_LPAR_in-Custom-Unit-Type_RPAR_":
       {"display": "mk",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Extending Lean's Output",
         "Unexpanders",
         "Custom Unit Type"]}},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "Solo (in Custom Unit Type)":
    [{"id": "Solo-_LPAR_in-Custom-Unit-Type_RPAR_",
      "data":
      {"/Notations-and-Macros/Extending-Lean___s-Output/#Solo-_LPAR_in-Custom-Unit-Type_RPAR_":
       {"display": "Solo",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Extending Lean's Output",
         "Unexpanders",
         "Custom Unit Type"]}},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "Solo (in A unit type)":
    [{"id": "Solo-_LPAR_in-A-unit-type_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Solo-_LPAR_in-A-unit-type_RPAR_":
       {"display": "Solo",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Example Inductive Types",
         "A unit type"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "SetTree (in Nested Inductive Types and Quotients)":
    [{"id": "SetTree-_LPAR_in-Nested-Inductive-Types-and-Quotients_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#SetTree-_LPAR_in-Nested-Inductive-Types-and-Quotients_RPAR_":
       {"display": "SetTree",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Logical Model",
         "Quotients and Inductive Types",
         "Nested Inductive Types and Quotients"]}},
      "address": "/The-Type-System/Quotients/"}],
    "Serialize.ser (in Output Parameters and Stuck Search)":
    [{"id":
      "Serialize___ser-_LPAR_in-Output-Parameters-and-Stuck-Search_RPAR_-next",
      "data":
      {"/Type-Classes/Instance-Synthesis/#Serialize___ser-_LPAR_in-Output-Parameters-and-Stuck-Search_RPAR_-next":
       {"display": "ser",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Output Parameters",
         "Output Parameters and Stuck Search"]},
       "/Type-Classes/Instance-Synthesis/#Serialize___ser-_LPAR_in-Output-Parameters-and-Stuck-Search_RPAR_":
       {"display": "ser",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Output Parameters",
         "Output Parameters and Stuck Search"]}},
      "address": "/Type-Classes/Instance-Synthesis/"},
     {"id":
      "Serialize___ser-_LPAR_in-Output-Parameters-and-Stuck-Search_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#Serialize___ser-_LPAR_in-Output-Parameters-and-Stuck-Search_RPAR_-next":
       {"display": "ser",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Output Parameters",
         "Output Parameters and Stuck Search"]},
       "/Type-Classes/Instance-Synthesis/#Serialize___ser-_LPAR_in-Output-Parameters-and-Stuck-Search_RPAR_":
       {"display": "ser",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Output Parameters",
         "Output Parameters and Stuck Search"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "Serialize (in Output Parameters and Stuck Search)":
    [{"id":
      "Serialize-_LPAR_in-Output-Parameters-and-Stuck-Search_RPAR_-next",
      "data":
      {"/Type-Classes/Instance-Synthesis/#Serialize-_LPAR_in-Output-Parameters-and-Stuck-Search_RPAR_-next":
       {"display": "Serialize",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Output Parameters",
         "Output Parameters and Stuck Search"]},
       "/Type-Classes/Instance-Synthesis/#Serialize-_LPAR_in-Output-Parameters-and-Stuck-Search_RPAR_":
       {"display": "Serialize",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Output Parameters",
         "Output Parameters and Stuck Search"]}},
      "address": "/Type-Classes/Instance-Synthesis/"},
     {"id": "Serialize-_LPAR_in-Output-Parameters-and-Stuck-Search_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#Serialize-_LPAR_in-Output-Parameters-and-Stuck-Search_RPAR_-next":
       {"display": "Serialize",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Output Parameters",
         "Output Parameters and Stuck Search"]},
       "/Type-Classes/Instance-Synthesis/#Serialize-_LPAR_in-Output-Parameters-and-Stuck-Search_RPAR_":
       {"display": "Serialize",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Output Parameters",
         "Output Parameters and Stuck Search"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "Sequence.ofList (in Reducibility and Generalized Field Notation)":
    [{"id":
      "Sequence___ofList-_LPAR_in-Reducibility-and-Generalized-Field-Notation_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Sequence___ofList-_LPAR_in-Reducibility-and-Generalized-Field-Notation_RPAR_":
       {"display": "Sequence.ofList",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Generalized Field Notation"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Sequence (in Reducibility and Generalized Field Notation)":
    [{"id":
      "Sequence-_LPAR_in-Reducibility-and-Generalized-Field-Notation_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Sequence-_LPAR_in-Reducibility-and-Generalized-Field-Notation_RPAR_":
       {"display": "Sequence",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Generalized Field Notation"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "S.usize_2":
    [{"id": "S___usize_2",
      "data":
      {"/The-Type-System/Inductive-Types/#S___usize_2":
       {"display": "usize_2",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Run-Time Representation",
         "Other Inductive Types",
         "FFI"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "S.usize_1":
    [{"id": "S___usize_1",
      "data":
      {"/The-Type-System/Inductive-Types/#S___usize_1":
       {"display": "usize_1",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Run-Time Representation",
         "Other Inductive Types",
         "FFI"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "S.sc8_2":
    [{"id": "S___sc8_2",
      "data":
      {"/The-Type-System/Inductive-Types/#S___sc8_2":
       {"display": "sc8_2",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Run-Time Representation",
         "Other Inductive Types",
         "FFI"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "S.sc8_1":
    [{"id": "S___sc8_1",
      "data":
      {"/The-Type-System/Inductive-Types/#S___sc8_1":
       {"display": "sc8_1",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Run-Time Representation",
         "Other Inductive Types",
         "FFI"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "S.sc64_3":
    [{"id": "S___sc64_3",
      "data":
      {"/The-Type-System/Inductive-Types/#S___sc64_3":
       {"display": "sc64_3",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Run-Time Representation",
         "Other Inductive Types",
         "FFI"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "S.sc64_2":
    [{"id": "S___sc64_2",
      "data":
      {"/The-Type-System/Inductive-Types/#S___sc64_2":
       {"display": "sc64_2",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Run-Time Representation",
         "Other Inductive Types",
         "FFI"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "S.sc64_1":
    [{"id": "S___sc64_1",
      "data":
      {"/The-Type-System/Inductive-Types/#S___sc64_1":
       {"display": "sc64_1",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Run-Time Representation",
         "Other Inductive Types",
         "FFI"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "S.sc32_1":
    [{"id": "S___sc32_1",
      "data":
      {"/The-Type-System/Inductive-Types/#S___sc32_1":
       {"display": "sc32_1",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Run-Time Representation",
         "Other Inductive Types",
         "FFI"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "S.sc16_2":
    [{"id": "S___sc16_2",
      "data":
      {"/The-Type-System/Inductive-Types/#S___sc16_2":
       {"display": "sc16_2",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Run-Time Representation",
         "Other Inductive Types",
         "FFI"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "S.sc16_1":
    [{"id": "S___sc16_1",
      "data":
      {"/The-Type-System/Inductive-Types/#S___sc16_1":
       {"display": "sc16_1",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Run-Time Representation",
         "Other Inductive Types",
         "FFI"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "S.ptr_3":
    [{"id": "S___ptr_3",
      "data":
      {"/The-Type-System/Inductive-Types/#S___ptr_3":
       {"display": "ptr_3",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Run-Time Representation",
         "Other Inductive Types",
         "FFI"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "S.ptr_2":
    [{"id": "S___ptr_2",
      "data":
      {"/The-Type-System/Inductive-Types/#S___ptr_2":
       {"display": "ptr_2",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Run-Time Representation",
         "Other Inductive Types",
         "FFI"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "S.ptr_1":
    [{"id": "S___ptr_1",
      "data":
      {"/The-Type-System/Inductive-Types/#S___ptr_1":
       {"display": "ptr_1",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Run-Time Representation",
         "Other Inductive Types",
         "FFI"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "S.Semigroup.op_assoc (in Class vs Structure Constructors)":
    [{"id":
      "S___Semigroup___op_assoc-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#S___Semigroup___op_assoc-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "op_assoc",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "S.Semigroup (in Class vs Structure Constructors)":
    [{"id": "S___Semigroup-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#S___Semigroup-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "Semigroup",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "S.Monoid.ident_right (in Class vs Structure Constructors)":
    [{"id":
      "S___Monoid___ident_right-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#S___Monoid___ident_right-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "ident_right",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "S.Monoid.ident_left (in Class vs Structure Constructors)":
    [{"id":
      "S___Monoid___ident_left-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#S___Monoid___ident_left-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "ident_left",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "S.Monoid.ident (in Class vs Structure Constructors)":
    [{"id":
      "S___Monoid___ident-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#S___Monoid___ident-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "ident",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "S.Monoid (in Class vs Structure Constructors)":
    [{"id": "S___Monoid-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#S___Monoid-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "Monoid",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "S.Magma.op (in Class vs Structure Constructors)":
    [{"id": "S___Magma___op-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#S___Magma___op-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "op",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "S.Magma (in Class vs Structure Constructors)":
    [{"id": "S___Magma-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#S___Magma-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "Magma",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "S":
    [{"id": "S",
      "data":
      {"/The-Type-System/Inductive-Types/#S":
       {"display": "S",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Run-Time Representation",
         "Other Inductive Types",
         "FFI"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "RunsMatch (in Universe mismatch)":
    [{"id": "RunsMatch-_LPAR_in-Universe-mismatch_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#RunsMatch-_LPAR_in-Universe-mismatch_RPAR_":
       {"display": "RunsMatch",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "RunLengths (in Universe mismatch)":
    [{"id": "RunLengths-_LPAR_in-Universe-mismatch_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#RunLengths-_LPAR_in-Universe-mismatch_RPAR_":
       {"display": "RunLengths",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Rtrans (in Multi-Patterns)":
    [{"id": "Rtrans-_LPAR_in-Multi-Patterns_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#Rtrans-_LPAR_in-Multi-Patterns_RPAR_":
       {"display": "Rtrans",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Patterns",
         "Multi-Patterns"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "RoseTree.val (in Omitting parameter in argument to higher-order predicate)":
    [{"id":
      "RoseTree___val-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___inductiveParamMissing/#RoseTree___val-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next":
       {"display": "val",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]},
       "/Error-Explanations/lean___inductiveParamMissing/#RoseTree___val-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_":
       {"display": "val",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]}},
      "address": "/Error-Explanations/lean___inductiveParamMissing/"},
     {"id":
      "RoseTree___val-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_",
      "data":
      {"/Error-Explanations/lean___inductiveParamMissing/#RoseTree___val-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next":
       {"display": "val",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]},
       "/Error-Explanations/lean___inductiveParamMissing/#RoseTree___val-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_":
       {"display": "val",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]}},
      "address": "/Error-Explanations/lean___inductiveParamMissing/"}],
    "RoseTree.leaf (in Nested Inductive Types and Quotients)":
    [{"id":
      "RoseTree___leaf-_LPAR_in-Nested-Inductive-Types-and-Quotients_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#RoseTree___leaf-_LPAR_in-Nested-Inductive-Types-and-Quotients_RPAR_":
       {"display": "leaf",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Logical Model",
         "Quotients and Inductive Types",
         "Nested Inductive Types and Quotients"]}},
      "address": "/The-Type-System/Quotients/"}],
    "RoseTree.children (in Omitting parameter in argument to higher-order predicate)":
    [{"id":
      "RoseTree___children-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___inductiveParamMissing/#RoseTree___children-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next":
       {"display": "children",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]},
       "/Error-Explanations/lean___inductiveParamMissing/#RoseTree___children-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_":
       {"display": "children",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]}},
      "address": "/Error-Explanations/lean___inductiveParamMissing/"},
     {"id":
      "RoseTree___children-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_",
      "data":
      {"/Error-Explanations/lean___inductiveParamMissing/#RoseTree___children-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next":
       {"display": "children",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]},
       "/Error-Explanations/lean___inductiveParamMissing/#RoseTree___children-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_":
       {"display": "children",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]}},
      "address": "/Error-Explanations/lean___inductiveParamMissing/"}],
    "RoseTree.branch (in Nested Inductive Types and Quotients)":
    [{"id":
      "RoseTree___branch-_LPAR_in-Nested-Inductive-Types-and-Quotients_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#RoseTree___branch-_LPAR_in-Nested-Inductive-Types-and-Quotients_RPAR_":
       {"display": "branch",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Logical Model",
         "Quotients and Inductive Types",
         "Nested Inductive Types and Quotients"]}},
      "address": "/The-Type-System/Quotients/"}],
    "RoseTree.All.intro (in Omitting parameter in argument to higher-order predicate)":
    [{"id":
      "RoseTree___All___intro-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_",
      "data":
      {"/Error-Explanations/lean___inductiveParamMissing/#RoseTree___All___intro-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_":
       {"display": "intro",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]}},
      "address": "/Error-Explanations/lean___inductiveParamMissing/"}],
    "RoseTree.All (in Omitting parameter in argument to higher-order predicate)":
    [{"id":
      "RoseTree___All-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_",
      "data":
      {"/Error-Explanations/lean___inductiveParamMissing/#RoseTree___All-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_":
       {"display": "RoseTree.All",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]}},
      "address": "/Error-Explanations/lean___inductiveParamMissing/"}],
    "RoseTree (in Omitting parameter in argument to higher-order predicate)":
    [{"id":
      "RoseTree-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___inductiveParamMissing/#RoseTree-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next":
       {"display": "RoseTree",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]},
       "/Error-Explanations/lean___inductiveParamMissing/#RoseTree-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_":
       {"display": "RoseTree",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]}},
      "address": "/Error-Explanations/lean___inductiveParamMissing/"},
     {"id":
      "RoseTree-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_",
      "data":
      {"/Error-Explanations/lean___inductiveParamMissing/#RoseTree-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next":
       {"display": "RoseTree",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]},
       "/Error-Explanations/lean___inductiveParamMissing/#RoseTree-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_":
       {"display": "RoseTree",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]}},
      "address": "/Error-Explanations/lean___inductiveParamMissing/"}],
    "RoseTree (in Nested Inductive Types and Quotients)":
    [{"id": "RoseTree-_LPAR_in-Nested-Inductive-Types-and-Quotients_RPAR_",
      "data":
      {"/The-Type-System/Quotients/#RoseTree-_LPAR_in-Nested-Inductive-Types-and-Quotients_RPAR_":
       {"display": "RoseTree",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Logical Model",
         "Quotients and Inductive Types",
         "Nested Inductive Types and Quotients"]}},
      "address": "/The-Type-System/Quotients/"}],
    "RawMaze.passages (in Nested Inductive Types with  Std.HashMap)":
    [{"id":
      "RawMaze___passages-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#RawMaze___passages-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "passages",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "RawMaze.insert_wf (in Nested Inductive Types with  Std.HashMap)":
    [{"id":
      "RawMaze___insert_wf-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#RawMaze___insert_wf-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "RawMaze.insert_wf",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "RawMaze.insert (in Nested Inductive Types with  Std.HashMap)":
    [{"id":
      "RawMaze___insert-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#RawMaze___insert-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "RawMaze.insert",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "RawMaze.description (in Nested Inductive Types with  Std.HashMap)":
    [{"id":
      "RawMaze___description-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#RawMaze___description-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "description",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "RawMaze.base_wf (in Nested Inductive Types with  Std.HashMap)":
    [{"id":
      "RawMaze___base_wf-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#RawMaze___base_wf-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "RawMaze.base_wf",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "RawMaze.base (in Nested Inductive Types with  Std.HashMap)":
    [{"id":
      "RawMaze___base-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#RawMaze___base-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "RawMaze.base",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "RawMaze.WF.mk (in Nested Inductive Types with  Std.HashMap)":
    [{"id":
      "RawMaze___WF___mk-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#RawMaze___WF___mk-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "mk",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "RawMaze.WF (in Nested Inductive Types with  Std.HashMap)":
    [{"id":
      "RawMaze___WF-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#RawMaze___WF-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "RawMaze.WF",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "RawMaze (in Nested Inductive Types with  Std.HashMap)":
    [{"id":
      "RawMaze-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#RawMaze-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "RawMaze",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "RTree.node (in Nested Inductive Types)":
    [{"id": "RTree___node-_LPAR_in-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#RTree___node-_LPAR_in-Nested-Inductive-Types_RPAR_":
       {"display": "node",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "RTree.empty (in Nested Inductive Types)":
    [{"id": "RTree___empty-_LPAR_in-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#RTree___empty-_LPAR_in-Nested-Inductive-Types_RPAR_":
       {"display": "empty",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "RTree'' (in Invalid Nested Inductive Types)":
    [{"id": "RTree______-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#RTree______-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_":
       {"display": "RTree''",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Invalid Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "RTree (in Nested Inductive Types)":
    [{"id": "RTree-_LPAR_in-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#RTree-_LPAR_in-Nested-Inductive-Types_RPAR_":
       {"display": "RTree",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "RTree (in Invalid Nested Inductive Types)":
    [{"id": "RTree-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#RTree-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_":
       {"display": "RTree",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Invalid Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "RLE.runsMatch (in Universe mismatch)":
    [{"id": "RLE___runsMatch-_LPAR_in-Universe-mismatch_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#RLE___runsMatch-_LPAR_in-Universe-mismatch_RPAR_":
       {"display": "runsMatch",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "RLE.run (in Universe mismatch)":
    [{"id": "RLE___run-_LPAR_in-Universe-mismatch_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#RLE___run-_LPAR_in-Universe-mismatch_RPAR_":
       {"display": "run",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "RLE.rle (in Universe mismatch)":
    [{"id": "RLE___rle-_LPAR_in-Universe-mismatch_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#RLE___rle-_LPAR_in-Universe-mismatch_RPAR_":
       {"display": "rle",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "RLE.nonZero (in Universe mismatch)":
    [{"id": "RLE___nonZero-_LPAR_in-Universe-mismatch_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#RLE___nonZero-_LPAR_in-Universe-mismatch_RPAR_":
       {"display": "nonZero",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "RLE.noRepeats (in Universe mismatch)":
    [{"id": "RLE___noRepeats-_LPAR_in-Universe-mismatch_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#RLE___noRepeats-_LPAR_in-Universe-mismatch_RPAR_":
       {"display": "noRepeats",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "RLE.nil (in Universe mismatch)":
    [{"id": "RLE___nil-_LPAR_in-Universe-mismatch_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#RLE___nil-_LPAR_in-Universe-mismatch_RPAR_":
       {"display": "nil",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "RLE (in Universe mismatch)":
    [{"id": "RLE-_LPAR_in-Universe-mismatch_RPAR_-next",
      "data":
      {"/The-Type-System/Inductive-Types/#RLE-_LPAR_in-Universe-mismatch_RPAR_-next":
       {"display": "RLE",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]},
       "/The-Type-System/Inductive-Types/#RLE-_LPAR_in-Universe-mismatch_RPAR_":
       {"display": "RLE",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]}},
      "address": "/The-Type-System/Inductive-Types/"},
     {"id": "RLE-_LPAR_in-Universe-mismatch_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#RLE-_LPAR_in-Universe-mismatch_RPAR_-next":
       {"display": "RLE",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]},
       "/The-Type-System/Inductive-Types/#RLE-_LPAR_in-Universe-mismatch_RPAR_":
       {"display": "RLE",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "R (in Multi-Patterns)":
    [{"id": "R-_LPAR_in-Multi-Patterns_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#R-_LPAR_in-Multi-Patterns_RPAR_":
       {"display": "R",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Patterns",
         "Multi-Patterns"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "R":
    [{"id": "R",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#R":
       {"display": "R",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "Integrating  grind 's Features"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "Quadrant.sw (in Displaying Output)":
    [{"id": "Quadrant___sw-_LPAR_in-Displaying-Output_RPAR_",
      "data":
      {"/Interacting-with-Lean/#Quadrant___sw-_LPAR_in-Displaying-Output_RPAR_":
       {"display": "sw",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Evaluating Terms",
         "Displaying Output"]}},
      "address": "/Interacting-with-Lean/"}],
    "Quadrant.se (in Displaying Output)":
    [{"id": "Quadrant___se-_LPAR_in-Displaying-Output_RPAR_",
      "data":
      {"/Interacting-with-Lean/#Quadrant___se-_LPAR_in-Displaying-Output_RPAR_":
       {"display": "se",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Evaluating Terms",
         "Displaying Output"]}},
      "address": "/Interacting-with-Lean/"}],
    "Quadrant.nw (in Displaying Output)":
    [{"id": "Quadrant___nw-_LPAR_in-Displaying-Output_RPAR_",
      "data":
      {"/Interacting-with-Lean/#Quadrant___nw-_LPAR_in-Displaying-Output_RPAR_":
       {"display": "nw",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Evaluating Terms",
         "Displaying Output"]}},
      "address": "/Interacting-with-Lean/"}],
    "Quadrant.ne (in Displaying Output)":
    [{"id": "Quadrant___ne-_LPAR_in-Displaying-Output_RPAR_",
      "data":
      {"/Interacting-with-Lean/#Quadrant___ne-_LPAR_in-Displaying-Output_RPAR_":
       {"display": "ne",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Evaluating Terms",
         "Displaying Output"]}},
      "address": "/Interacting-with-Lean/"}],
    "Quadrant (in Displaying Output)":
    [{"id": "Quadrant-_LPAR_in-Displaying-Output_RPAR_",
      "data":
      {"/Interacting-with-Lean/#Quadrant-_LPAR_in-Displaying-Output_RPAR_":
       {"display": "Quadrant",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Evaluating Terms",
         "Displaying Output"]}},
      "address": "/Interacting-with-Lean/"}],
    "ProofUnitLike.mk (in Definitional Equality of Unit-Like Types)":
    [{"id":
      "ProofUnitLike___mk-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_",
      "data":
      {"/Basic-Types/The-Unit-Type/#ProofUnitLike___mk-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_":
       {"display": "mk",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "The Unit Type",
         "Definitional Equality",
         "Definitional Equality of Unit-Like Types"]}},
      "address": "/Basic-Types/The-Unit-Type/"}],
    "ProofUnitLike (in Definitional Equality of Unit-Like Types)":
    [{"id":
      "ProofUnitLike-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_",
      "data":
      {"/Basic-Types/The-Unit-Type/#ProofUnitLike-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_":
       {"display": "ProofUnitLike",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "The Unit Type",
         "Definitional Equality",
         "Definitional Equality of Unit-Like Types"]}},
      "address": "/Basic-Types/The-Unit-Type/"}],
    "PrefixRunOf.zero (in Universe mismatch)":
    [{"id": "PrefixRunOf___zero-_LPAR_in-Universe-mismatch_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#PrefixRunOf___zero-_LPAR_in-Universe-mismatch_RPAR_":
       {"display": "zero",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "PrefixRunOf.succ (in Universe mismatch)":
    [{"id": "PrefixRunOf___succ-_LPAR_in-Universe-mismatch_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#PrefixRunOf___succ-_LPAR_in-Universe-mismatch_RPAR_":
       {"display": "succ",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "PrefixRunOf (in Universe mismatch)":
    [{"id": "PrefixRunOf-_LPAR_in-Universe-mismatch_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#PrefixRunOf-_LPAR_in-Universe-mismatch_RPAR_":
       {"display": "PrefixRunOf",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Point.y (in The  @[grind ext]  Attribute)":
    [{"id": "Point___y-_LPAR_in-The--____LSQ_grind-ext_RSQ_--Attribute_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#Point___y-_LPAR_in-The--____LSQ_grind-ext_RSQ_--Attribute_RPAR_":
       {"display": "y",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Patterns",
         "The  @[grind ext]  Attribute"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "Point.x (in The  @[grind ext]  Attribute)":
    [{"id": "Point___x-_LPAR_in-The--____LSQ_grind-ext_RSQ_--Attribute_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#Point___x-_LPAR_in-The--____LSQ_grind-ext_RSQ_--Attribute_RPAR_":
       {"display": "x",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Patterns",
         "The  @[grind ext]  Attribute"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "Point.swap (in The  @[grind ext]  Attribute)":
    [{"id":
      "Point___swap-_LPAR_in-The--____LSQ_grind-ext_RSQ_--Attribute_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#Point___swap-_LPAR_in-The--____LSQ_grind-ext_RSQ_--Attribute_RPAR_":
       {"display": "Point.swap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Patterns",
         "The  @[grind ext]  Attribute"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "Point (in The  @[grind ext]  Attribute)":
    [{"id": "Point-_LPAR_in-The--____LSQ_grind-ext_RSQ_--Attribute_RPAR_",
      "data":
      {"/The--grind--tactic/E___matching/#Point-_LPAR_in-The--____LSQ_grind-ext_RSQ_--Attribute_RPAR_":
       {"display": "Point",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "E‑matching",
         "Patterns",
         "The  @[grind ext]  Attribute"]}},
      "address": "/The--grind--tactic/E___matching/"}],
    "Phrase (in Reducibility and Instance Synthesis)":
    [{"id": "Phrase-_LPAR_in-Reducibility-and-Instance-Synthesis_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Phrase-_LPAR_in-Reducibility-and-Instance-Synthesis_RPAR_":
       {"display": "Phrase",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Instance Synthesis"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Person.givenName (in Attempting to define multiple structure fields on the same line)":
    [{"id":
      "Person___givenName-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_",
      "data":
      {"/Error-Explanations/lean___inferBinderTypeFailed/#Person___givenName-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next":
       {"display": "givenName",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]},
       "/Error-Explanations/lean___inferBinderTypeFailed/#Person___givenName-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_":
       {"display": "givenName",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]}},
      "address": "/Error-Explanations/lean___inferBinderTypeFailed/"},
     {"id":
      "Person___givenName-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___inferBinderTypeFailed/#Person___givenName-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next":
       {"display": "givenName",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]},
       "/Error-Explanations/lean___inferBinderTypeFailed/#Person___givenName-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_":
       {"display": "givenName",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]}},
      "address": "/Error-Explanations/lean___inferBinderTypeFailed/"}],
    "Person.familyName (in Attempting to define multiple structure fields on the same line)":
    [{"id":
      "Person___familyName-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___inferBinderTypeFailed/#Person___familyName-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next":
       {"display": "familyName",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]},
       "/Error-Explanations/lean___inferBinderTypeFailed/#Person___familyName-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_":
       {"display": "familyName",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]}},
      "address": "/Error-Explanations/lean___inferBinderTypeFailed/"},
     {"id":
      "Person___familyName-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_",
      "data":
      {"/Error-Explanations/lean___inferBinderTypeFailed/#Person___familyName-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next":
       {"display": "familyName",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]},
       "/Error-Explanations/lean___inferBinderTypeFailed/#Person___familyName-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_":
       {"display": "familyName",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]}},
      "address": "/Error-Explanations/lean___inferBinderTypeFailed/"}],
    "Person.age (in Attempting to define multiple structure fields on the same line)":
    [{"id":
      "Person___age-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___inferBinderTypeFailed/#Person___age-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next":
       {"display": "age",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]},
       "/Error-Explanations/lean___inferBinderTypeFailed/#Person___age-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_":
       {"display": "age",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]}},
      "address": "/Error-Explanations/lean___inferBinderTypeFailed/"},
     {"id":
      "Person___age-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_",
      "data":
      {"/Error-Explanations/lean___inferBinderTypeFailed/#Person___age-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next":
       {"display": "age",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]},
       "/Error-Explanations/lean___inferBinderTypeFailed/#Person___age-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_":
       {"display": "age",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]}},
      "address": "/Error-Explanations/lean___inferBinderTypeFailed/"}],
    "Person (in Attempting to define multiple structure fields on the same line)":
    [{"id":
      "Person-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next-next",
      "data":
      {"/Error-Explanations/lean___inferBinderTypeFailed/#Person-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next-next":
       {"display": "Person",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]},
       "/Error-Explanations/lean___inferBinderTypeFailed/#Person-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next":
       {"display": "Person",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]},
       "/Error-Explanations/lean___inferBinderTypeFailed/#Person-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_":
       {"display": "Person",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]}},
      "address": "/Error-Explanations/lean___inferBinderTypeFailed/"},
     {"id":
      "Person-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_",
      "data":
      {"/Error-Explanations/lean___inferBinderTypeFailed/#Person-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next-next":
       {"display": "Person",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]},
       "/Error-Explanations/lean___inferBinderTypeFailed/#Person-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next":
       {"display": "Person",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]},
       "/Error-Explanations/lean___inferBinderTypeFailed/#Person-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_":
       {"display": "Person",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]}},
      "address": "/Error-Explanations/lean___inferBinderTypeFailed/"},
     {"id":
      "Person-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___inferBinderTypeFailed/#Person-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next-next":
       {"display": "Person",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]},
       "/Error-Explanations/lean___inferBinderTypeFailed/#Person-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_-next":
       {"display": "Person",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]},
       "/Error-Explanations/lean___inferBinderTypeFailed/#Person-_LPAR_in-Attempting-to-define-multiple-structure-fields-on-the-same-line_RPAR_":
       {"display": "Person",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inferBinderTypeFailed",
         "Examples",
         "Attempting to define multiple structure fields on the same line"]}},
      "address": "/Error-Explanations/lean___inferBinderTypeFailed/"}],
    "Permissions.writable (in Fixed-Width Literals)":
    [{"id": "Permissions___writable-_LPAR_in-Fixed-Width-Literals_RPAR_",
      "data":
      {"/Basic-Types/Fixed-Precision-Integers/#Permissions___writable-_LPAR_in-Fixed-Width-Literals_RPAR_":
       {"display": "writable",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Fixed-Precision Integers",
         "Syntax",
         "Fixed-Width Literals"]}},
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Permissions.readable (in Fixed-Width Literals)":
    [{"id": "Permissions___readable-_LPAR_in-Fixed-Width-Literals_RPAR_",
      "data":
      {"/Basic-Types/Fixed-Precision-Integers/#Permissions___readable-_LPAR_in-Fixed-Width-Literals_RPAR_":
       {"display": "readable",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Fixed-Precision Integers",
         "Syntax",
         "Fixed-Width Literals"]}},
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Permissions.executable (in Fixed-Width Literals)":
    [{"id": "Permissions___executable-_LPAR_in-Fixed-Width-Literals_RPAR_",
      "data":
      {"/Basic-Types/Fixed-Precision-Integers/#Permissions___executable-_LPAR_in-Fixed-Width-Literals_RPAR_":
       {"display": "executable",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Fixed-Precision Integers",
         "Syntax",
         "Fixed-Width Literals"]}},
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Permissions.encode (in Fixed-Width Literals)":
    [{"id": "Permissions___encode-_LPAR_in-Fixed-Width-Literals_RPAR_",
      "data":
      {"/Basic-Types/Fixed-Precision-Integers/#Permissions___encode-_LPAR_in-Fixed-Width-Literals_RPAR_":
       {"display": "Permissions.encode",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Fixed-Precision Integers",
         "Syntax",
         "Fixed-Width Literals"]}},
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Permissions.decode (in Fixed-Width Literals)":
    [{"id": "Permissions___decode-_LPAR_in-Fixed-Width-Literals_RPAR_",
      "data":
      {"/Basic-Types/Fixed-Precision-Integers/#Permissions___decode-_LPAR_in-Fixed-Width-Literals_RPAR_":
       {"display": "Permissions.decode",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Fixed-Precision Integers",
         "Syntax",
         "Fixed-Width Literals"]}},
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Permissions (in Fixed-Width Literals)":
    [{"id": "Permissions-_LPAR_in-Fixed-Width-Literals_RPAR_",
      "data":
      {"/Basic-Types/Fixed-Precision-Integers/#Permissions-_LPAR_in-Fixed-Width-Literals_RPAR_":
       {"display": "Permissions",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Fixed-Precision Integers",
         "Syntax",
         "Fixed-Width Literals"]}},
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Parity.odd (in Inaccessible Patterns)":
    [{"id": "Parity___odd-_LPAR_in-Inaccessible-Patterns_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#Parity___odd-_LPAR_in-Inaccessible-Patterns_RPAR_":
       {"display": "odd",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Inaccessible Patterns"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "Parity.even (in Inaccessible Patterns)":
    [{"id": "Parity___even-_LPAR_in-Inaccessible-Patterns_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#Parity___even-_LPAR_in-Inaccessible-Patterns_RPAR_":
       {"display": "even",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Inaccessible Patterns"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "Parity (in Inaccessible Patterns)":
    [{"id": "Parity-_LPAR_in-Inaccessible-Patterns_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#Parity-_LPAR_in-Inaccessible-Patterns_RPAR_":
       {"display": "Parity",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Inaccessible Patterns"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "Palindrome.text (in Non-default constructor name)":
    [{"id": "Palindrome___text-_LPAR_in-Non-default-constructor-name_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Palindrome___text-_LPAR_in-Non-default-constructor-name_RPAR_":
       {"display": "text",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Non-default constructor name"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Palindrome.single (in Invalid Nested Inductive Types)":
    [{"id":
      "Palindrome___single-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Palindrome___single-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_":
       {"display": "single",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Invalid Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Palindrome.ofString (in Non-default constructor name)":
    [{"id":
      "Palindrome___ofString-_LPAR_in-Non-default-constructor-name_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Palindrome___ofString-_LPAR_in-Non-default-constructor-name_RPAR_":
       {"display": "ofString",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Non-default constructor name"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Palindrome.nil (in Invalid Nested Inductive Types)":
    [{"id": "Palindrome___nil-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Palindrome___nil-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_":
       {"display": "nil",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Invalid Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Palindrome.is_palindrome (in Non-default constructor name)":
    [{"id":
      "Palindrome___is_palindrome-_LPAR_in-Non-default-constructor-name_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Palindrome___is_palindrome-_LPAR_in-Non-default-constructor-name_RPAR_":
       {"display": "is_palindrome",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Non-default constructor name"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Palindrome.cons (in Invalid Nested Inductive Types)":
    [{"id": "Palindrome___cons-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Palindrome___cons-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_":
       {"display": "cons",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Invalid Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Palindrome (in Non-default constructor name)":
    [{"id": "Palindrome-_LPAR_in-Non-default-constructor-name_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Palindrome-_LPAR_in-Non-default-constructor-name_RPAR_":
       {"display": "Palindrome",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Non-default constructor name"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Palindrome (in Invalid Nested Inductive Types)":
    [{"id": "Palindrome-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Palindrome-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_":
       {"display": "Palindrome",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Invalid Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Pair.unattach (in Preprocessing for a custom data type)":
    [{"id":
      "Pair___unattach-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Pair___unattach-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "Pair.unattach",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Pair.snd (in Preprocessing for a custom data type)":
    [{"id": "Pair___snd-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Pair___snd-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "snd",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Pair.snd (in Field Indices and Structure Inheritance)":
    [{"id":
      "Pair___snd-_LPAR_in-Field-Indices-and-Structure-Inheritance_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Pair___snd-_LPAR_in-Field-Indices-and-Structure-Inheritance_RPAR_":
       {"display": "snd",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "Field Indices and Structure Inheritance"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Pair.sizeOf_lt_of_mem (in Preprocessing for a custom data type)":
    [{"id":
      "Pair___sizeOf_lt_of_mem-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Pair___sizeOf_lt_of_mem-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "Pair.sizeOf_lt_of_mem",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Pair.map_wfParam (in Preprocessing for a custom data type)":
    [{"id":
      "Pair___map_wfParam-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Pair___map_wfParam-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "Pair.map_wfParam",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Pair.map_unattach (in Preprocessing for a custom data type)":
    [{"id":
      "Pair___map_unattach-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Pair___map_unattach-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "Pair.map_unattach",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Pair.map (in Preprocessing for a custom data type)":
    [{"id": "Pair___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Pair___map-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "Pair.map",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Pair.fst (in Preprocessing for a custom data type)":
    [{"id": "Pair___fst-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Pair___fst-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "fst",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Pair.fst (in Field Indices and Structure Inheritance)":
    [{"id":
      "Pair___fst-_LPAR_in-Field-Indices-and-Structure-Inheritance_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Pair___fst-_LPAR_in-Field-Indices-and-Structure-Inheritance_RPAR_":
       {"display": "fst",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "Field Indices and Structure Inheritance"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Pair.attach (in Preprocessing for a custom data type)":
    [{"id":
      "Pair___attach-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Pair___attach-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "Pair.attach",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Pair.Mem.snd (in Preprocessing for a custom data type)":
    [{"id":
      "Pair___Mem___snd-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Pair___Mem___snd-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "snd",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Pair.Mem.fst (in Preprocessing for a custom data type)":
    [{"id":
      "Pair___Mem___fst-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Pair___Mem___fst-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "fst",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Pair.Mem (in Preprocessing for a custom data type)":
    [{"id": "Pair___Mem-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Pair___Mem-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "Pair.Mem",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Pair (in Preprocessing for a custom data type)":
    [{"id": "Pair-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Pair-_LPAR_in-Preprocessing-for-a-custom-data-type_RPAR_":
       {"display": "Pair",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Preprocessing Function Definitions",
         "Preprocessing for a custom data type"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Pair (in Field Indices and Structure Inheritance)":
    [{"id": "Pair-_LPAR_in-Field-Indices-and-Structure-Inheritance_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Pair-_LPAR_in-Field-Indices-and-Structure-Inheritance_RPAR_":
       {"display": "Pair",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "Field Indices and Structure Inheritance"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "PBool (in Overly-universe-polymorphic  Bool)":
    [{"id": "PBool-_LPAR_in-Overly-universe-polymorphic--Bool_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#PBool-_LPAR_in-Overly-universe-polymorphic--Bool_RPAR_":
       {"display": "PBool",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Logical Model",
         "Well-Formedness Requirements",
         "Prop vs Type",
         "Overly-universe-polymorphic  Bool"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "OptONat.to_of_eq_id (in Translating Nested Inductive Types)":
    [{"id":
      "OptONat___to_of_eq_id-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#OptONat___to_of_eq_id-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_":
       {"display": "OptONat.to_of_eq_id",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "OptONat.toOption (in Translating Nested Inductive Types)":
    [{"id":
      "OptONat___toOption-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#OptONat___toOption-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_":
       {"display": "OptONat.toOption",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "OptONat.some (in Translating Nested Inductive Types)":
    [{"id":
      "OptONat___some-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#OptONat___some-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_":
       {"display": "some",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "OptONat.of_to_eq_id (in Translating Nested Inductive Types)":
    [{"id":
      "OptONat___of_to_eq_id-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#OptONat___of_to_eq_id-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_":
       {"display": "OptONat.of_to_eq_id",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "OptONat.ofOption (in Translating Nested Inductive Types)":
    [{"id":
      "OptONat___ofOption-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#OptONat___ofOption-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_":
       {"display": "OptONat.ofOption",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "OptONat.none (in Translating Nested Inductive Types)":
    [{"id":
      "OptONat___none-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#OptONat___none-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_":
       {"display": "none",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "OptONat (in Translating Nested Inductive Types)":
    [{"id": "OptONat-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#OptONat-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_":
       {"display": "OptONat",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "OneSmaller.shrink (in Semi-Output Parameters with Pre-Existing Values)":
    [{"id":
      "OneSmaller___shrink-_LPAR_in-Semi-Output-Parameters-with-Pre-Existing-Values_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#OneSmaller___shrink-_LPAR_in-Semi-Output-Parameters-with-Pre-Existing-Values_RPAR_":
       {"display": "shrink",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Output Parameters",
         "Semi-Output Parameters with Pre-Existing Values"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "OneSmaller.shrink (in Output Parameters with Pre-Existing Values)":
    [{"id":
      "OneSmaller___shrink-_LPAR_in-Output-Parameters-with-Pre-Existing-Values_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#OneSmaller___shrink-_LPAR_in-Output-Parameters-with-Pre-Existing-Values_RPAR_":
       {"display": "shrink",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Output Parameters",
         "Output Parameters with Pre-Existing Values"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "OneSmaller.biggest (in Semi-Output Parameters with Pre-Existing Values)":
    [{"id":
      "OneSmaller___biggest-_LPAR_in-Semi-Output-Parameters-with-Pre-Existing-Values_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#OneSmaller___biggest-_LPAR_in-Semi-Output-Parameters-with-Pre-Existing-Values_RPAR_":
       {"display": "biggest",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Output Parameters",
         "Semi-Output Parameters with Pre-Existing Values"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "OneSmaller.biggest (in Output Parameters with Pre-Existing Values)":
    [{"id":
      "OneSmaller___biggest-_LPAR_in-Output-Parameters-with-Pre-Existing-Values_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#OneSmaller___biggest-_LPAR_in-Output-Parameters-with-Pre-Existing-Values_RPAR_":
       {"display": "biggest",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Output Parameters",
         "Output Parameters with Pre-Existing Values"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "OneSmaller (in Semi-Output Parameters with Pre-Existing Values)":
    [{"id":
      "OneSmaller-_LPAR_in-Semi-Output-Parameters-with-Pre-Existing-Values_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#OneSmaller-_LPAR_in-Semi-Output-Parameters-with-Pre-Existing-Values_RPAR_":
       {"display": "OneSmaller",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Output Parameters",
         "Semi-Output Parameters with Pre-Existing Values"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "OneSmaller (in Output Parameters with Pre-Existing Values)":
    [{"id":
      "OneSmaller-_LPAR_in-Output-Parameters-with-Pre-Existing-Values_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#OneSmaller-_LPAR_in-Output-Parameters-with-Pre-Existing-Values_RPAR_":
       {"display": "OneSmaller",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Output Parameters",
         "Output Parameters with Pre-Existing Values"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "OddList.cons (in Mutually Defined Inductive Types)":
    [{"id": "OddList___cons-_LPAR_in-Mutually-Defined-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#OddList___cons-_LPAR_in-Mutually-Defined-Inductive-Types_RPAR_":
       {"display": "cons",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Mutually Defined Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "OddList (in Mutually Defined Inductive Types)":
    [{"id": "OddList-_LPAR_in-Mutually-Defined-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#OddList-_LPAR_in-Mutually-Defined-Inductive-Types_RPAR_":
       {"display": "OddList",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Mutually Defined Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Odd.succ (in Even and odd)":
    [{"id": "Odd___succ-_LPAR_in-Even-and-odd_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Odd___succ-_LPAR_in-Even-and-odd_RPAR_":
       {"display": "succ",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Recursors",
         "Even and odd"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Odd (in Even and odd)":
    [{"id": "Odd-_LPAR_in-Even-and-odd_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Odd-_LPAR_in-Even-and-odd_RPAR_":
       {"display": "Odd",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Recursors",
         "Even and odd"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ONat.rec (in Translating Nested Inductive Types)":
    [{"id": "ONat___rec-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#ONat___rec-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_":
       {"display": "ONat.rec",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ONat.mk (in Translating Nested Inductive Types)":
    [{"id": "ONat___mk-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#ONat___mk-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_-next":
       {"display": "ONat.mk",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]},
       "/The-Type-System/Inductive-Types/#ONat___mk-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_":
       {"display": "mk",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"},
     {"id":
      "ONat___mk-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_-next",
      "data":
      {"/The-Type-System/Inductive-Types/#ONat___mk-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_-next":
       {"display": "ONat.mk",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]},
       "/The-Type-System/Inductive-Types/#ONat___mk-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_":
       {"display": "mk",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ONat.mk (in Nested Inductive Types)":
    [{"id": "ONat___mk-_LPAR_in-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#ONat___mk-_LPAR_in-Nested-Inductive-Types_RPAR_":
       {"display": "mk",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ONat'.mk (in Translating Nested Inductive Types)":
    [{"id": "ONat______mk-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#ONat______mk-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_":
       {"display": "mk",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ONat' (in Translating Nested Inductive Types)":
    [{"id": "ONat___-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#ONat___-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_":
       {"display": "ONat'",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ONat (in Translating Nested Inductive Types)":
    [{"id": "ONat-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#ONat-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_-next":
       {"display": "ONat",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]},
       "/The-Type-System/Inductive-Types/#ONat-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_":
       {"display": "ONat",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"},
     {"id": "ONat-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_-next",
      "data":
      {"/The-Type-System/Inductive-Types/#ONat-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_-next":
       {"display": "ONat",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]},
       "/The-Type-System/Inductive-Types/#ONat-_LPAR_in-Translating-Nested-Inductive-Types_RPAR_":
       {"display": "ONat",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Translating Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ONat (in Nested Inductive Types)":
    [{"id": "ONat-_LPAR_in-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#ONat-_LPAR_in-Nested-Inductive-Types_RPAR_":
       {"display": "ONat",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "NotUnitLike.mk (in Definitional Equality of Unit-Like Types)":
    [{"id":
      "NotUnitLike___mk-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_",
      "data":
      {"/Basic-Types/The-Unit-Type/#NotUnitLike___mk-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_":
       {"display": "mk",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "The Unit Type",
         "Definitional Equality",
         "Definitional Equality of Unit-Like Types"]}},
      "address": "/Basic-Types/The-Unit-Type/"}],
    "NotUnitLike (in Definitional Equality of Unit-Like Types)":
    [{"id":
      "NotUnitLike-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_",
      "data":
      {"/Basic-Types/The-Unit-Type/#NotUnitLike-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_":
       {"display": "NotUnitLike",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "The Unit Type",
         "Definitional Equality",
         "Definitional Equality of Unit-Like Types"]}},
      "address": "/Basic-Types/The-Unit-Type/"}],
    "Not30.lt (in Splitting Predicates)":
    [{"id": "Not30___lt-_LPAR_in-Splitting-Predicates_RPAR_",
      "data":
      {"/The--grind--tactic/Case-Analysis/#Not30___lt-_LPAR_in-Splitting-Predicates_RPAR_":
       {"display": "lt",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Case Analysis",
         "Selection Heuristics",
         "Splitting Predicates"]}},
      "address": "/The--grind--tactic/Case-Analysis/"}],
    "Not30.gt (in Splitting Predicates)":
    [{"id": "Not30___gt-_LPAR_in-Splitting-Predicates_RPAR_",
      "data":
      {"/The--grind--tactic/Case-Analysis/#Not30___gt-_LPAR_in-Splitting-Predicates_RPAR_":
       {"display": "gt",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Case Analysis",
         "Selection Heuristics",
         "Splitting Predicates"]}},
      "address": "/The--grind--tactic/Case-Analysis/"}],
    "Not30 (in Splitting Predicates)":
    [{"id": "Not30-_LPAR_in-Splitting-Predicates_RPAR_",
      "data":
      {"/The--grind--tactic/Case-Analysis/#Not30-_LPAR_in-Splitting-Predicates_RPAR_":
       {"display": "Not30",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Case Analysis",
         "Selection Heuristics",
         "Splitting Predicates"]}},
      "address": "/The--grind--tactic/Case-Analysis/"}],
    "NonZero (in Universe mismatch)":
    [{"id": "NonZero-_LPAR_in-Universe-mismatch_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#NonZero-_LPAR_in-Universe-mismatch_RPAR_":
       {"display": "NonZero",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "NonEmptyString (in Extensional Equality of Subtypes)":
    [{"id": "NonEmptyString-_LPAR_in-Extensional-Equality-of-Subtypes_RPAR_",
      "data":
      {"/Basic-Types/Subtypes/#NonEmptyString-_LPAR_in-Extensional-Equality-of-Subtypes_RPAR_":
       {"display": "NonEmptyString",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Subtypes",
         "Extensional Equality of Subtypes"]}},
      "address": "/Basic-Types/Subtypes/"}],
    "NonEmptyString (in Definitional Equality of Subtypes)":
    [{"id": "NonEmptyString-_LPAR_in-Definitional-Equality-of-Subtypes_RPAR_",
      "data":
      {"/Basic-Types/Subtypes/#NonEmptyString-_LPAR_in-Definitional-Equality-of-Subtypes_RPAR_":
       {"display": "NonEmptyString",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Subtypes",
         "Definitional Equality of Subtypes"]}},
      "address": "/Basic-Types/Subtypes/"}],
    "NonEmptyList.non_empty (in Dependent Coercion)":
    [{"id": "NonEmptyList___non_empty-_LPAR_in-Dependent-Coercion_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#NonEmptyList___non_empty-_LPAR_in-Dependent-Coercion_RPAR_":
       {"display": "non_empty",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Dependent Coercion"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "NonEmptyList.contents (in Dependent Coercion)":
    [{"id": "NonEmptyList___contents-_LPAR_in-Dependent-Coercion_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#NonEmptyList___contents-_LPAR_in-Dependent-Coercion_RPAR_":
       {"display": "contents",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Dependent Coercion"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "NonEmptyList (in Dependent Coercion)":
    [{"id": "NonEmptyList-_LPAR_in-Dependent-Coercion_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#NonEmptyList-_LPAR_in-Dependent-Coercion_RPAR_":
       {"display": "NonEmptyList",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Dependent Coercion"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "NoRepeats (in Universe mismatch)":
    [{"id": "NoRepeats-_LPAR_in-Universe-mismatch_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#NoRepeats-_LPAR_in-Universe-mismatch_RPAR_":
       {"display": "NoRepeats",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Universe Levels",
         "Universe mismatch"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "NoConfusion":
    [{"id": "NoConfusion",
      "data":
      {"/Basic-Types/Natural-Numbers/#NoConfusion":
       {"display": "NoConfusion",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Natural Numbers",
         "Logical Model",
         "Peano Axioms"]}},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "No (in A constructorless proposition)":
    [{"id": "No-_LPAR_in-A-constructorless-proposition_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#No-_LPAR_in-A-constructorless-proposition_RPAR_":
       {"display": "No",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Example Inductive Types",
         "A constructorless proposition"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "NaturalNum (in Mutual Block Scope)":
    [{"id": "NaturalNum-_LPAR_in-Mutual-Block-Scope_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#NaturalNum-_LPAR_in-Mutual-Block-Scope_RPAR_-next":
       {"display": "NaturalNum",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Mutual Recursion",
         "Mutual Block Scope"]},
       "/Definitions/Recursive-Definitions/#NaturalNum-_LPAR_in-Mutual-Block-Scope_RPAR_":
       {"display": "NaturalNum",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Mutual Recursion",
         "Mutual Block Scope"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "NaturalNum-_LPAR_in-Mutual-Block-Scope_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#NaturalNum-_LPAR_in-Mutual-Block-Scope_RPAR_-next":
       {"display": "NaturalNum",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Mutual Recursion",
         "Mutual Block Scope"]},
       "/Definitions/Recursive-Definitions/#NaturalNum-_LPAR_in-Mutual-Block-Scope_RPAR_":
       {"display": "NaturalNum",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Mutual Recursion",
         "Mutual Block Scope"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "NatWrapper.val (in Variations in Instance Definitions)":
    [{"id":
      "NatWrapper___val-_LPAR_in-Variations-in-Instance-Definitions_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#NatWrapper___val-_LPAR_in-Variations-in-Instance-Definitions_RPAR_":
       {"display": "val",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Variations in Instance Definitions"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "NatWrapper.val (in Instance Name Generation)":
    [{"id": "NatWrapper___val-_LPAR_in-Instance-Name-Generation_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#NatWrapper___val-_LPAR_in-Instance-Name-Generation_RPAR_":
       {"display": "val",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Instance Name Generation"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "NatWrapper (in Variations in Instance Definitions)":
    [{"id": "NatWrapper-_LPAR_in-Variations-in-Instance-Definitions_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#NatWrapper-_LPAR_in-Variations-in-Instance-Definitions_RPAR_":
       {"display": "NatWrapper",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Variations in Instance Definitions"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "NatWrapper (in Instance Name Generation)":
    [{"id": "NatWrapper-_LPAR_in-Instance-Name-Generation_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#NatWrapper-_LPAR_in-Instance-Name-Generation_RPAR_":
       {"display": "NatWrapper",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Instance Name Generation"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "NatTree.leaf (in Instances are not recursive)":
    [{"id": "NatTree___leaf-_LPAR_in-Instances-are-not-recursive_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#NatTree___leaf-_LPAR_in-Instances-are-not-recursive_RPAR_":
       {"display": "leaf",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Recursive Instances",
         "Instances are not recursive"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "NatTree.branch (in Instances are not recursive)":
    [{"id": "NatTree___branch-_LPAR_in-Instances-are-not-recursive_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#NatTree___branch-_LPAR_in-Instances-are-not-recursive_RPAR_":
       {"display": "branch",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Recursive Instances",
         "Instances are not recursive"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "NatTree.beq (in Instances are not recursive)":
    [{"id": "NatTree___beq-_LPAR_in-Instances-are-not-recursive_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#NatTree___beq-_LPAR_in-Instances-are-not-recursive_RPAR_":
       {"display": "NatTree.beq",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Recursive Instances",
         "Instances are not recursive"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "NatTree (in Instances are not recursive)":
    [{"id": "NatTree-_LPAR_in-Instances-are-not-recursive_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#NatTree-_LPAR_in-Instances-are-not-recursive_RPAR_":
       {"display": "NatTree",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Recursive Instances",
         "Instances are not recursive"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "NatStringBimap.stringToNat (in Modifiers on structure constructor)":
    [{"id":
      "NatStringBimap___stringToNat-_LPAR_in-Modifiers-on-structure-constructor_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#NatStringBimap___stringToNat-_LPAR_in-Modifiers-on-structure-constructor_RPAR_":
       {"display": "stringToNat",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Modifiers on structure constructor"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "NatStringBimap.natToString (in Modifiers on structure constructor)":
    [{"id":
      "NatStringBimap___natToString-_LPAR_in-Modifiers-on-structure-constructor_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#NatStringBimap___natToString-_LPAR_in-Modifiers-on-structure-constructor_RPAR_":
       {"display": "natToString",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Modifiers on structure constructor"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "NatStringBimap.insert (in Modifiers on structure constructor)":
    [{"id":
      "NatStringBimap___insert-_LPAR_in-Modifiers-on-structure-constructor_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#NatStringBimap___insert-_LPAR_in-Modifiers-on-structure-constructor_RPAR_":
       {"display": "NatStringBimap.insert",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Modifiers on structure constructor"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "NatStringBimap.empty (in Modifiers on structure constructor)":
    [{"id":
      "NatStringBimap___empty-_LPAR_in-Modifiers-on-structure-constructor_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#NatStringBimap___empty-_LPAR_in-Modifiers-on-structure-constructor_RPAR_":
       {"display": "NatStringBimap.empty",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Modifiers on structure constructor"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "NatStringBimap (in Modifiers on structure constructor)":
    [{"id":
      "NatStringBimap-_LPAR_in-Modifiers-on-structure-constructor_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#NatStringBimap-_LPAR_in-Modifiers-on-structure-constructor_RPAR_":
       {"display": "NatStringBimap",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Modifiers on structure constructor"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "NatRoseTree.node (in Instances for nested types)":
    [{"id": "NatRoseTree___node-_LPAR_in-Instances-for-nested-types_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#NatRoseTree___node-_LPAR_in-Instances-for-nested-types_RPAR_":
       {"display": "node",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Recursive Instances",
         "Instances for nested types"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "NatRoseTree.beq (in Instances for nested types)":
    [{"id":
      "NatRoseTree___beq-_LPAR_in-Instances-for-nested-types_RPAR_-next",
      "data":
      {"/Type-Classes/Instance-Declarations/#NatRoseTree___beq-_LPAR_in-Instances-for-nested-types_RPAR_-next":
       {"display": "NatRoseTree.beq",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Recursive Instances",
         "Instances for nested types"]},
       "/Type-Classes/Instance-Declarations/#NatRoseTree___beq-_LPAR_in-Instances-for-nested-types_RPAR_":
       {"display": "NatRoseTree.beq",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Recursive Instances",
         "Instances for nested types"]}},
      "address": "/Type-Classes/Instance-Declarations/"},
     {"id": "NatRoseTree___beq-_LPAR_in-Instances-for-nested-types_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#NatRoseTree___beq-_LPAR_in-Instances-for-nested-types_RPAR_-next":
       {"display": "NatRoseTree.beq",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Recursive Instances",
         "Instances for nested types"]},
       "/Type-Classes/Instance-Declarations/#NatRoseTree___beq-_LPAR_in-Instances-for-nested-types_RPAR_":
       {"display": "NatRoseTree.beq",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Recursive Instances",
         "Instances for nested types"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "NatRoseTree (in Instances for nested types)":
    [{"id": "NatRoseTree-_LPAR_in-Instances-for-nested-types_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#NatRoseTree-_LPAR_in-Instances-for-nested-types_RPAR_":
       {"display": "NatRoseTree",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Recursive Instances",
         "Instances for nested types"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "NatPair.y (in Local Instances)":
    [{"id": "NatPair___y-_LPAR_in-Local-Instances_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#NatPair___y-_LPAR_in-Local-Instances_RPAR_":
       {"display": "y",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Candidate Instances",
         "Local Instances"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "NatPair.y (in Local Instances Have Priority)":
    [{"id": "NatPair___y-_LPAR_in-Local-Instances-Have-Priority_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#NatPair___y-_LPAR_in-Local-Instances-Have-Priority_RPAR_":
       {"display": "y",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Candidate Instances",
         "Local Instances Have Priority"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "NatPair.x (in Local Instances)":
    [{"id": "NatPair___x-_LPAR_in-Local-Instances_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#NatPair___x-_LPAR_in-Local-Instances_RPAR_":
       {"display": "x",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Candidate Instances",
         "Local Instances"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "NatPair.x (in Local Instances Have Priority)":
    [{"id": "NatPair___x-_LPAR_in-Local-Instances-Have-Priority_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#NatPair___x-_LPAR_in-Local-Instances-Have-Priority_RPAR_":
       {"display": "x",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Candidate Instances",
         "Local Instances Have Priority"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "NatPair (in Local Instances)":
    [{"id": "NatPair-_LPAR_in-Local-Instances_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#NatPair-_LPAR_in-Local-Instances_RPAR_":
       {"display": "NatPair",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Candidate Instances",
         "Local Instances"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "NatPair (in Local Instances Have Priority)":
    [{"id": "NatPair-_LPAR_in-Local-Instances-Have-Priority_RPAR_",
      "data":
      {"/Type-Classes/Instance-Synthesis/#NatPair-_LPAR_in-Local-Instances-Have-Priority_RPAR_":
       {"display": "NatPair",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Synthesis",
         "Candidate Instances",
         "Local Instances Have Priority"]}},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "NatOrInt.nat (in Maximal Parentheses)":
    [{"id": "NatOrInt___nat-_LPAR_in-Maximal-Parentheses_RPAR_",
      "data":
      {"/Interacting-with-Lean/#NatOrInt___nat-_LPAR_in-Maximal-Parentheses_RPAR_":
       {"display": "nat",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "Maximal Parentheses"]}},
      "address": "/Interacting-with-Lean/"}],
    "NatOrInt.int (in Maximal Parentheses)":
    [{"id": "NatOrInt___int-_LPAR_in-Maximal-Parentheses_RPAR_",
      "data":
      {"/Interacting-with-Lean/#NatOrInt___int-_LPAR_in-Maximal-Parentheses_RPAR_":
       {"display": "int",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "Maximal Parentheses"]}},
      "address": "/Interacting-with-Lean/"}],
    "NatOrInt (in Maximal Parentheses)":
    [{"id": "NatOrInt-_LPAR_in-Maximal-Parentheses_RPAR_",
      "data":
      {"/Interacting-with-Lean/#NatOrInt-_LPAR_in-Maximal-Parentheses_RPAR_":
       {"display": "NatOrInt",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "Maximal Parentheses"]}},
      "address": "/Interacting-with-Lean/"}],
    "NatOrBool.nat (in Sort Coercions as Ordinary Coercions)":
    [{"id":
      "NatOrBool___nat-_LPAR_in-Sort-Coercions-as-Ordinary-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Sorts/#NatOrBool___nat-_LPAR_in-Sort-Coercions-as-Ordinary-Coercions_RPAR_":
       {"display": "nat",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Sorts",
         "Sort Coercions as Ordinary Coercions"]}},
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "NatOrBool.bool (in Sort Coercions as Ordinary Coercions)":
    [{"id":
      "NatOrBool___bool-_LPAR_in-Sort-Coercions-as-Ordinary-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Sorts/#NatOrBool___bool-_LPAR_in-Sort-Coercions-as-Ordinary-Coercions_RPAR_":
       {"display": "bool",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Sorts",
         "Sort Coercions as Ordinary Coercions"]}},
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "NatOrBool.asType (in Sort Coercions as Ordinary Coercions)":
    [{"id":
      "NatOrBool___asType-_LPAR_in-Sort-Coercions-as-Ordinary-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Sorts/#NatOrBool___asType-_LPAR_in-Sort-Coercions-as-Ordinary-Coercions_RPAR_":
       {"display": "NatOrBool.asType",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Sorts",
         "Sort Coercions as Ordinary Coercions"]}},
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "NatOrBool (in Sort Coercions as Ordinary Coercions)":
    [{"id": "NatOrBool-_LPAR_in-Sort-Coercions-as-Ordinary-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Sorts/#NatOrBool-_LPAR_in-Sort-Coercions-as-Ordinary-Coercions_RPAR_":
       {"display": "NatOrBool",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Sorts",
         "Sort Coercions as Ordinary Coercions"]}},
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "NatInterval.low_le_high (in Custom Natural Number Literals)":
    [{"id":
      "NatInterval___low_le_high-_LPAR_in-Custom-Natural-Number-Literals_RPAR_",
      "data":
      {"/Terms/Literals/#NatInterval___low_le_high-_LPAR_in-Custom-Natural-Number-Literals_RPAR_":
       {"display": "low_le_high",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Literals",
         "Natural Numbers",
         "Custom Natural Number Literals"]}},
      "address": "/Terms/Literals/"}],
    "NatInterval.low (in Custom Natural Number Literals)":
    [{"id": "NatInterval___low-_LPAR_in-Custom-Natural-Number-Literals_RPAR_",
      "data":
      {"/Terms/Literals/#NatInterval___low-_LPAR_in-Custom-Natural-Number-Literals_RPAR_":
       {"display": "low",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Literals",
         "Natural Numbers",
         "Custom Natural Number Literals"]}},
      "address": "/Terms/Literals/"}],
    "NatInterval.high (in Custom Natural Number Literals)":
    [{"id":
      "NatInterval___high-_LPAR_in-Custom-Natural-Number-Literals_RPAR_",
      "data":
      {"/Terms/Literals/#NatInterval___high-_LPAR_in-Custom-Natural-Number-Literals_RPAR_":
       {"display": "high",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Literals",
         "Natural Numbers",
         "Custom Natural Number Literals"]}},
      "address": "/Terms/Literals/"}],
    "NatInterval (in Custom Natural Number Literals)":
    [{"id": "NatInterval-_LPAR_in-Custom-Natural-Number-Literals_RPAR_",
      "data":
      {"/Terms/Literals/#NatInterval-_LPAR_in-Custom-Natural-Number-Literals_RPAR_":
       {"display": "NatInterval",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Literals",
         "Natural Numbers",
         "Custom Natural Number Literals"]}},
      "address": "/Terms/Literals/"}],
    "Nat.parity (in Inaccessible Patterns)":
    [{"id": "Nat___parity-_LPAR_in-Inaccessible-Patterns_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#Nat___parity-_LPAR_in-Inaccessible-Patterns_RPAR_":
       {"display": "Nat.parity",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Inaccessible Patterns"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "Nat.otherZero (in Axioms and Stuck Reduction)":
    [{"id": "Nat___otherZero-_LPAR_in-Axioms-and-Stuck-Reduction_RPAR_",
      "data":
      {"/Axioms/#Nat___otherZero-_LPAR_in-Axioms-and-Stuck-Reduction_RPAR_":
       {"display": "Nat.otherZero",
        "context":
        ["The Lean Language Reference",
         "Axioms",
         "Reduction",
         "Axioms and Stuck Reduction"]}},
      "address": "/Axioms/"}],
    "Nat.otherZero (in Axioms and Compilation)":
    [{"id": "Nat___otherZero-_LPAR_in-Axioms-and-Compilation_RPAR_",
      "data":
      {"/Axioms/#Nat___otherZero-_LPAR_in-Axioms-and-Compilation_RPAR_":
       {"display": "Nat.otherZero",
        "context":
        ["The Lean Language Reference",
         "Axioms",
         "Reduction",
         "Axioms and Compilation"]}},
      "address": "/Axioms/"}],
    "Nat.half (in Turning Off Field Notation)":
    [{"id": "Nat___half-_LPAR_in-Turning-Off-Field-Notation_RPAR_",
      "data":
      {"/Terms/Function-Application/#Nat___half-_LPAR_in-Turning-Off-Field-Notation_RPAR_":
       {"display": "Nat.half",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Function Application",
         "Generalized Field Notation",
         "Turning Off Field Notation"]}},
      "address": "/Terms/Function-Application/"}],
    "NamedFun.name (in Coercing Decorated Functions to Function Types)":
    [{"id":
      "NamedFun___name-_LPAR_in-Coercing-Decorated-Functions-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#NamedFun___name-_LPAR_in-Coercing-Decorated-Functions-to-Function-Types_RPAR_":
       {"display": "name",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing Decorated Functions to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "NamedFun.function (in Coercing Decorated Functions to Function Types)":
    [{"id":
      "NamedFun___function-_LPAR_in-Coercing-Decorated-Functions-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#NamedFun___function-_LPAR_in-Coercing-Decorated-Functions-to-Function-Types_RPAR_":
       {"display": "function",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing Decorated Functions to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "NamedFun.comp (in Coercing Decorated Functions to Function Types)":
    [{"id":
      "NamedFun___comp-_LPAR_in-Coercing-Decorated-Functions-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#NamedFun___comp-_LPAR_in-Coercing-Decorated-Functions-to-Function-Types_RPAR_":
       {"display": "NamedFun.comp",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing Decorated Functions to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "NamedFun (in Coercing Decorated Functions to Function Types)":
    [{"id":
      "NamedFun-_LPAR_in-Coercing-Decorated-Functions-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#NamedFun-_LPAR_in-Coercing-Decorated-Functions-to-Function-Types_RPAR_":
       {"display": "NamedFun",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing Decorated Functions to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "NS.three (in Opening Scoped Declarations)":
    [{"id": "NS___three-_LPAR_in-Opening-Scoped-Declarations_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#NS___three-_LPAR_in-Opening-Scoped-Declarations_RPAR_":
       {"display": "three",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Opening Scoped Declarations"]}},
      "address": "/Namespaces-and-Sections/"}],
    "NS.interestingName (in Querying the Environment)":
    [{"id": "NS___interestingName-_LPAR_in-Querying-the-Environment_RPAR_",
      "data":
      {"/Notations-and-Macros/Elaborators/#NS___interestingName-_LPAR_in-Querying-the-Environment_RPAR_":
       {"display": "NS.interestingName",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Elaborators",
         "Command Elaborators",
         "Querying the Environment"]}},
      "address": "/Notations-and-Macros/Elaborators/"}],
    "N.NatOrInt.nat (in Inductive Types with Constructors)":
    [{"id":
      "N___NatOrInt___nat-_LPAR_in-Inductive-Types-with-Constructors_RPAR_",
      "data":
      {"/Interacting-with-Lean/#N___NatOrInt___nat-_LPAR_in-Inductive-Types-with-Constructors_RPAR_":
       {"display": "nat",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "How To Write a  Repr  Instance",
         "Inductive Types with Constructors"]}},
      "address": "/Interacting-with-Lean/"}],
    "N.NatOrInt.int (in Inductive Types with Constructors)":
    [{"id":
      "N___NatOrInt___int-_LPAR_in-Inductive-Types-with-Constructors_RPAR_",
      "data":
      {"/Interacting-with-Lean/#N___NatOrInt___int-_LPAR_in-Inductive-Types-with-Constructors_RPAR_":
       {"display": "int",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "How To Write a  Repr  Instance",
         "Inductive Types with Constructors"]}},
      "address": "/Interacting-with-Lean/"}],
    "N.NatOrInt (in Inductive Types with Constructors)":
    [{"id": "N___NatOrInt-_LPAR_in-Inductive-Types-with-Constructors_RPAR_",
      "data":
      {"/Interacting-with-Lean/#N___NatOrInt-_LPAR_in-Inductive-Types-with-Constructors_RPAR_":
       {"display": "NatOrInt",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "How To Write a  Repr  Instance",
         "Inductive Types with Constructors"]}},
      "address": "/Interacting-with-Lean/"}],
    "MyStructure.field2 (in Auto-implicit parameters in structure fields)":
    [{"id":
      "MyStructure___field2-_LPAR_in-Auto-implicit-parameters-in-structure-fields_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#MyStructure___field2-_LPAR_in-Auto-implicit-parameters-in-structure-fields_RPAR_":
       {"display": "field2",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Fields",
         "Auto-implicit parameters in structure fields"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "MyStructure.field1 (in Auto-implicit parameters in structure fields)":
    [{"id":
      "MyStructure___field1-_LPAR_in-Auto-implicit-parameters-in-structure-fields_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#MyStructure___field1-_LPAR_in-Auto-implicit-parameters-in-structure-fields_RPAR_":
       {"display": "field1",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Fields",
         "Auto-implicit parameters in structure fields"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "MyStructure (in Auto-implicit parameters in structure fields)":
    [{"id":
      "MyStructure-_LPAR_in-Auto-implicit-parameters-in-structure-fields_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#MyStructure-_LPAR_in-Auto-implicit-parameters-in-structure-fields_RPAR_":
       {"display": "MyStructure",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Fields",
         "Auto-implicit parameters in structure fields"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "MyList (in Leading  .  and Unfolding Definitions)":
    [{"id": "MyList-_LPAR_in-Leading--___--and-Unfolding-Definitions_RPAR_",
      "data":
      {"/Terms/Identifiers/#MyList-_LPAR_in-Leading--___--and-Unfolding-Definitions_RPAR_":
       {"display": "MyList",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Identifiers",
         "Leading  .",
         "Leading  .  and Unfolding Definitions"]}},
      "address": "/Terms/Identifiers/"}],
    "Monoid.op_id_identity (in Sort Coercions)":
    [{"id": "Monoid___op_id_identity-_LPAR_in-Sort-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Sorts/#Monoid___op_id_identity-_LPAR_in-Sort-Coercions_RPAR_":
       {"display": "op_id_identity",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Sorts",
         "Sort Coercions"]}},
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "Monoid.op_assoc (in Sort Coercions)":
    [{"id": "Monoid___op_assoc-_LPAR_in-Sort-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Sorts/#Monoid___op_assoc-_LPAR_in-Sort-Coercions_RPAR_":
       {"display": "op_assoc",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Sorts",
         "Sort Coercions"]}},
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "Monoid.op (in Sort Coercions)":
    [{"id": "Monoid___op-_LPAR_in-Sort-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Sorts/#Monoid___op-_LPAR_in-Sort-Coercions_RPAR_":
       {"display": "op",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Sorts",
         "Sort Coercions"]}},
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "Monoid.id_op_identity (in Sort Coercions)":
    [{"id": "Monoid___id_op_identity-_LPAR_in-Sort-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Sorts/#Monoid___id_op_identity-_LPAR_in-Sort-Coercions_RPAR_":
       {"display": "id_op_identity",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Sorts",
         "Sort Coercions"]}},
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "Monoid.id (in Sort Coercions)":
    [{"id": "Monoid___id-_LPAR_in-Sort-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Sorts/#Monoid___id-_LPAR_in-Sort-Coercions_RPAR_":
       {"display": "id",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Sorts",
         "Sort Coercions"]}},
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "Monoid.Carrier (in Sort Coercions)":
    [{"id": "Monoid___Carrier-_LPAR_in-Sort-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Sorts/#Monoid___Carrier-_LPAR_in-Sort-Coercions_RPAR_":
       {"display": "Carrier",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Sorts",
         "Sort Coercions"]}},
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "Monoid (in Sort Coercions)":
    [{"id": "Monoid-_LPAR_in-Sort-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Sorts/#Monoid-_LPAR_in-Sort-Coercions_RPAR_":
       {"display": "Monoid",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Sorts",
         "Sort Coercions"]}},
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "Maze.wf (in Nested Inductive Types with  Std.HashMap)":
    [{"id":
      "Maze___wf-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#Maze___wf-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "wf",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Maze.raw (in Nested Inductive Types with  Std.HashMap)":
    [{"id":
      "Maze___raw-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#Maze___raw-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "raw",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Maze.insert (in Nested Inductive Types with  Std.HashMap)":
    [{"id":
      "Maze___insert-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#Maze___insert-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "Maze.insert",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Maze.go? (in Nested Inductive Types with  Std.HashMap)":
    [{"id":
      "Maze___go___-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#Maze___go___-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "Maze.go?",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Maze.description (in Nested Inductive Types with  Std.HashMap)":
    [{"id":
      "Maze___description-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#Maze___description-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "Maze.description",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Maze.base (in Nested Inductive Types with  Std.HashMap)":
    [{"id":
      "Maze___base-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#Maze___base-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "Maze.base",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Maze (in Nested Inductive Types with  Std.HashMap)":
    [{"id":
      "Maze-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_-next",
      "data":
      {"/Basic-Types/Maps-and-Sets/#Maze-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_-next":
       {"display": "Maze",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]},
       "/Basic-Types/Maps-and-Sets/#Maze-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "Maze",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"},
     {"id": "Maze-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_",
      "data":
      {"/Basic-Types/Maps-and-Sets/#Maze-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_-next":
       {"display": "Maze",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]},
       "/Basic-Types/Maps-and-Sets/#Maze-_LPAR_in-Nested-Inductive-Types-with--Std___HashMap_RPAR_":
       {"display": "Maze",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Maps and Sets",
         "Library Design",
         "Raw Data and Invariants",
         "Nested Inductive Types with  Std.HashMap"]}},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "M (in State Types)":
    [{"id": "M-_LPAR_in-State-Types_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Varieties-of-Monads/#M-_LPAR_in-State-Types_RPAR_":
       {"display": "M",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Varieties of Monads",
         "Monad Type Classes",
         "State Types"]}},
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "LocatedStx.mk (in Nested positions)":
    [{"id": "LocatedStx___mk-_LPAR_in-Nested-positions_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#LocatedStx___mk-_LPAR_in-Nested-positions_RPAR_":
       {"display": "mk",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Positivity",
         "Nested positions"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "LocatedStx (in Nested positions)":
    [{"id": "LocatedStx-_LPAR_in-Nested-positions_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#LocatedStx-_LPAR_in-Nested-positions_RPAR_":
       {"display": "LocatedStx",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Positivity",
         "Nested positions"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ListCursor.right (in Unexpansion and Arguments)":
    [{"id": "ListCursor___right-_LPAR_in-Unexpansion-and-Arguments_RPAR_",
      "data":
      {"/Notations-and-Macros/Extending-Lean___s-Output/#ListCursor___right-_LPAR_in-Unexpansion-and-Arguments_RPAR_":
       {"display": "ListCursor.right",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Extending Lean's Output",
         "Unexpanders",
         "Unexpansion and Arguments"]}},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "ListCursor.rewind (in Unexpansion and Arguments)":
    [{"id": "ListCursor___rewind-_LPAR_in-Unexpansion-and-Arguments_RPAR_",
      "data":
      {"/Notations-and-Macros/Extending-Lean___s-Output/#ListCursor___rewind-_LPAR_in-Unexpansion-and-Arguments_RPAR_":
       {"display": "ListCursor.rewind",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Extending Lean's Output",
         "Unexpanders",
         "Unexpansion and Arguments"]}},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "ListCursor.left (in Unexpansion and Arguments)":
    [{"id": "ListCursor___left-_LPAR_in-Unexpansion-and-Arguments_RPAR_",
      "data":
      {"/Notations-and-Macros/Extending-Lean___s-Output/#ListCursor___left-_LPAR_in-Unexpansion-and-Arguments_RPAR_":
       {"display": "ListCursor.left",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Extending Lean's Output",
         "Unexpanders",
         "Unexpansion and Arguments"]}},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "ListCursor.fastForward (in Unexpansion and Arguments)":
    [{"id":
      "ListCursor___fastForward-_LPAR_in-Unexpansion-and-Arguments_RPAR_",
      "data":
      {"/Notations-and-Macros/Extending-Lean___s-Output/#ListCursor___fastForward-_LPAR_in-Unexpansion-and-Arguments_RPAR_":
       {"display": "ListCursor.fastForward",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Extending Lean's Output",
         "Unexpanders",
         "Unexpansion and Arguments"]}},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "ListCursor.before (in Unexpansion and Arguments)":
    [{"id": "ListCursor___before-_LPAR_in-Unexpansion-and-Arguments_RPAR_",
      "data":
      {"/Notations-and-Macros/Extending-Lean___s-Output/#ListCursor___before-_LPAR_in-Unexpansion-and-Arguments_RPAR_":
       {"display": "before",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Extending Lean's Output",
         "Unexpanders",
         "Unexpansion and Arguments"]}},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "ListCursor.after (in Unexpansion and Arguments)":
    [{"id": "ListCursor___after-_LPAR_in-Unexpansion-and-Arguments_RPAR_",
      "data":
      {"/Notations-and-Macros/Extending-Lean___s-Output/#ListCursor___after-_LPAR_in-Unexpansion-and-Arguments_RPAR_":
       {"display": "after",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Extending Lean's Output",
         "Unexpanders",
         "Unexpansion and Arguments"]}},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "ListCursor (in Unexpansion and Arguments)":
    [{"id": "ListCursor-_LPAR_in-Unexpansion-and-Arguments_RPAR_",
      "data":
      {"/Notations-and-Macros/Extending-Lean___s-Output/#ListCursor-_LPAR_in-Unexpansion-and-Arguments_RPAR_":
       {"display": "ListCursor",
        "context":
        ["The Lean Language Reference",
         "Notations and Macros",
         "Extending Lean's Output",
         "Unexpanders",
         "Unexpansion and Arguments"]}},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "List.myMap (in Enriched Proof Obligation Contexts)":
    [{"id": "List___myMap-_LPAR_in-Enriched-Proof-Obligation-Contexts_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#List___myMap-_LPAR_in-Enriched-Proof-Obligation-Contexts_RPAR_":
       {"display": "List.myMap",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Well-Founded Recursion",
         "Termination proofs",
         "Enriched Proof Obligation Contexts"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "List.free_theorem (in Inconsistencies From Axioms)":
    [{"id": "List___free_theorem-_LPAR_in-Inconsistencies-From-Axioms_RPAR_",
      "data":
      {"/Axioms/#List___free_theorem-_LPAR_in-Inconsistencies-From-Axioms_RPAR_":
       {"display": "List.free_theorem",
        "context":
        ["The Lean Language Reference",
         "Axioms",
         "Consistency",
         "Inconsistencies From Axioms"]}},
      "address": "/Axioms/"}],
    "List.findIndex_implies_pred (in Partial Correctness Theorem)":
    [{"id":
      "List___findIndex_implies_pred-_LPAR_in-Partial-Correctness-Theorem_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#List___findIndex_implies_pred-_LPAR_in-Partial-Correctness-Theorem_RPAR_":
       {"display": "List.findIndex_implies_pred",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial Fixpoint Recursion",
         "Partial Correctness Theorems",
         "Partial Correctness Theorem"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "List.findIndex (in Tail Recursion with Branching)":
    [{"id": "List___findIndex-_LPAR_in-Tail-Recursion-with-Branching_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#List___findIndex-_LPAR_in-Tail-Recursion-with-Branching_RPAR_":
       {"display": "List.findIndex",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial Fixpoint Recursion",
         "Tail-Recursive Functions",
         "Tail Recursion with Branching"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "List.findIndex (in Partial Correctness Theorem)":
    [{"id": "List___findIndex-_LPAR_in-Partial-Correctness-Theorem_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#List___findIndex-_LPAR_in-Partial-Correctness-Theorem_RPAR_":
       {"display": "List.findIndex",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial Fixpoint Recursion",
         "Partial Correctness Theorems",
         "Partial Correctness Theorem"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "List.findIndex (in Monadic functions)":
    [{"id": "List___findIndex-_LPAR_in-Monadic-functions_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#List___findIndex-_LPAR_in-Monadic-functions_RPAR_-next":
       {"display": "List.findIndex",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial Fixpoint Recursion",
         "Monadic functions",
         "Monadic functions"]},
       "/Definitions/Recursive-Definitions/#List___findIndex-_LPAR_in-Monadic-functions_RPAR_":
       {"display": "List.findIndex",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial Fixpoint Recursion",
         "Monadic functions",
         "Monadic functions"]}},
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "List___findIndex-_LPAR_in-Monadic-functions_RPAR_-next",
      "data":
      {"/Definitions/Recursive-Definitions/#List___findIndex-_LPAR_in-Monadic-functions_RPAR_-next":
       {"display": "List.findIndex",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial Fixpoint Recursion",
         "Monadic functions",
         "Monadic functions"]},
       "/Definitions/Recursive-Definitions/#List___findIndex-_LPAR_in-Monadic-functions_RPAR_":
       {"display": "List.findIndex",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial Fixpoint Recursion",
         "Monadic functions",
         "Monadic functions"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "List.disjoint":
    [{"id": "List___disjoint",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#List___disjoint":
       {"display": "_root_.List.disjoint",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The formal statement"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "List.brecOnTable (in Course-of-Values Tables)":
    [{"id": "List___brecOnTable-_LPAR_in-Course-of-Values-Tables_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#List___brecOnTable-_LPAR_in-Course-of-Values-Tables_RPAR_":
       {"display": "List.brecOnTable",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Course-of-Values Tables"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "List.brecOn' (in Course-of-Values Tables)":
    [{"id": "List___brecOn___-_LPAR_in-Course-of-Values-Tables_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#List___brecOn___-_LPAR_in-Course-of-Values-Tables_RPAR_":
       {"display": "List.brecOn'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Course-of-Values Tables"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "List.below' (in Course-of-Values Tables)":
    [{"id": "List___below___-_LPAR_in-Course-of-Values-Tables_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#List___below___-_LPAR_in-Course-of-Values-Tables_RPAR_":
       {"display": "List.below'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Elaboration Using Course-of-Values Recursion",
         "Course-of-Values Tables"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "List.All.nil (in Omitting parameter in argument to higher-order predicate)":
    [{"id":
      "List___All___nil-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_",
      "data":
      {"/Error-Explanations/lean___inductiveParamMissing/#List___All___nil-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next":
       {"display": "nil",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]},
       "/Error-Explanations/lean___inductiveParamMissing/#List___All___nil-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_":
       {"display": "nil",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]}},
      "address": "/Error-Explanations/lean___inductiveParamMissing/"},
     {"id":
      "List___All___nil-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___inductiveParamMissing/#List___All___nil-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next":
       {"display": "nil",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]},
       "/Error-Explanations/lean___inductiveParamMissing/#List___All___nil-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_":
       {"display": "nil",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]}},
      "address": "/Error-Explanations/lean___inductiveParamMissing/"}],
    "List.All.cons (in Omitting parameter in argument to higher-order predicate)":
    [{"id":
      "List___All___cons-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_",
      "data":
      {"/Error-Explanations/lean___inductiveParamMissing/#List___All___cons-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next":
       {"display": "cons",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]},
       "/Error-Explanations/lean___inductiveParamMissing/#List___All___cons-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_":
       {"display": "cons",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]}},
      "address": "/Error-Explanations/lean___inductiveParamMissing/"},
     {"id":
      "List___All___cons-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___inductiveParamMissing/#List___All___cons-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next":
       {"display": "cons",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]},
       "/Error-Explanations/lean___inductiveParamMissing/#List___All___cons-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_":
       {"display": "cons",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]}},
      "address": "/Error-Explanations/lean___inductiveParamMissing/"}],
    "List.All (in Omitting parameter in argument to higher-order predicate)":
    [{"id":
      "List___All-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___inductiveParamMissing/#List___All-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next":
       {"display": "List.All",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]},
       "/Error-Explanations/lean___inductiveParamMissing/#List___All-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_":
       {"display": "List.All",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]}},
      "address": "/Error-Explanations/lean___inductiveParamMissing/"},
     {"id":
      "List___All-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_",
      "data":
      {"/Error-Explanations/lean___inductiveParamMissing/#List___All-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_-next":
       {"display": "List.All",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]},
       "/Error-Explanations/lean___inductiveParamMissing/#List___All-_LPAR_in-Omitting-parameter-in-argument-to-higher-order-predicate_RPAR_":
       {"display": "List.All",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.inductiveParamMissing",
         "Examples",
         "Omitting parameter in argument to higher-order predicate"]}},
      "address": "/Error-Explanations/lean___inductiveParamMissing/"}],
    "LengthList (in Computing types)":
    [{"id": "LengthList-_LPAR_in-Computing-types_RPAR_",
      "data":
      {"/The-Type-System/#LengthList-_LPAR_in-Computing-types_RPAR_":
       {"display": "LengthList",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Computing types"]}},
      "address": "/The-Type-System/"}],
    "LenList.zipWith (in Lists with Lengths as Applicative Functors)":
    [{"id":
      "LenList___zipWith-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/#LenList___zipWith-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_":
       {"display": "LenList.zipWith",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lists with Lengths as Applicative Functors"]}},
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "LenList.tail (in Lists with Lengths as Applicative Functors)":
    [{"id":
      "LenList___tail-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/#LenList___tail-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_":
       {"display": "LenList.tail",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lists with Lengths as Applicative Functors"]}},
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "LenList.map (in Lists with Lengths as Applicative Functors)":
    [{"id":
      "LenList___map-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/#LenList___map-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_":
       {"display": "LenList.map",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lists with Lengths as Applicative Functors"]}},
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "LenList.list_length_eq (in Lists with Lengths as Applicative Functors)":
    [{"id":
      "LenList___list_length_eq-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/#LenList___list_length_eq-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_":
       {"display": "LenList.list_length_eq",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lists with Lengths as Applicative Functors"]}},
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "LenList.list (in Lists with Lengths as Applicative Functors)":
    [{"id":
      "LenList___list-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/#LenList___list-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_":
       {"display": "list",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lists with Lengths as Applicative Functors"]}},
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "LenList.lengthOk (in Lists with Lengths as Applicative Functors)":
    [{"id":
      "LenList___lengthOk-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/#LenList___lengthOk-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_":
       {"display": "lengthOk",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lists with Lengths as Applicative Functors"]}},
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "LenList.head (in Lists with Lengths as Applicative Functors)":
    [{"id":
      "LenList___head-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/#LenList___head-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_":
       {"display": "LenList.head",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lists with Lengths as Applicative Functors"]}},
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "LenList.diagonal (in Lists with Lengths as Applicative Functors)":
    [{"id":
      "LenList___diagonal-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/#LenList___diagonal-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_":
       {"display": "LenList.diagonal",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lists with Lengths as Applicative Functors"]}},
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "LenList (in Lists with Lengths as Applicative Functors)":
    [{"id":
      "LenList-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/#LenList-_LPAR_in-Lists-with-Lengths-as-Applicative-Functors_RPAR_":
       {"display": "LenList",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Lists with Lengths as Applicative Functors"]}},
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "LazyList.toList (in Lazy Lists)":
    [{"id": "LazyList___toList-_LPAR_in-Lazy-Lists_RPAR_",
      "data":
      {"/Basic-Types/Lazy-Computations/#LazyList___toList-_LPAR_in-Lazy-Lists_RPAR_":
       {"display": "LazyList.toList",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Lazy Computations",
         "Coercions",
         "Lazy Lists"]}},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "LazyList.take (in Lazy Lists)":
    [{"id": "LazyList___take-_LPAR_in-Lazy-Lists_RPAR_",
      "data":
      {"/Basic-Types/Lazy-Computations/#LazyList___take-_LPAR_in-Lazy-Lists_RPAR_":
       {"display": "LazyList.take",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Lazy Computations",
         "Coercions",
         "Lazy Lists"]}},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "LazyList.ofFn (in Lazy Lists)":
    [{"id": "LazyList___ofFn-_LPAR_in-Lazy-Lists_RPAR_",
      "data":
      {"/Basic-Types/Lazy-Computations/#LazyList___ofFn-_LPAR_in-Lazy-Lists_RPAR_":
       {"display": "LazyList.ofFn",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Lazy Computations",
         "Coercions",
         "Lazy Lists"]}},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "LazyList.nil (in Lazy Lists)":
    [{"id": "LazyList___nil-_LPAR_in-Lazy-Lists_RPAR_",
      "data":
      {"/Basic-Types/Lazy-Computations/#LazyList___nil-_LPAR_in-Lazy-Lists_RPAR_":
       {"display": "nil",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Lazy Computations",
         "Coercions",
         "Lazy Lists"]}},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "LazyList.delayed (in Lazy Lists)":
    [{"id": "LazyList___delayed-_LPAR_in-Lazy-Lists_RPAR_",
      "data":
      {"/Basic-Types/Lazy-Computations/#LazyList___delayed-_LPAR_in-Lazy-Lists_RPAR_":
       {"display": "delayed",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Lazy Computations",
         "Coercions",
         "Lazy Lists"]}},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "LazyList.cons (in Lazy Lists)":
    [{"id": "LazyList___cons-_LPAR_in-Lazy-Lists_RPAR_",
      "data":
      {"/Basic-Types/Lazy-Computations/#LazyList___cons-_LPAR_in-Lazy-Lists_RPAR_":
       {"display": "cons",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Lazy Computations",
         "Coercions",
         "Lazy Lists"]}},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "LazyList.append (in Lazy Lists)":
    [{"id": "LazyList___append-_LPAR_in-Lazy-Lists_RPAR_",
      "data":
      {"/Basic-Types/Lazy-Computations/#LazyList___append-_LPAR_in-Lazy-Lists_RPAR_":
       {"display": "LazyList.append",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Lazy Computations",
         "Coercions",
         "Lazy Lists"]}},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "LazyList (in Lazy Lists)":
    [{"id": "LazyList-_LPAR_in-Lazy-Lists_RPAR_",
      "data":
      {"/Basic-Types/Lazy-Computations/#LazyList-_LPAR_in-Lazy-Lists_RPAR_":
       {"display": "LazyList",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Lazy Computations",
         "Coercions",
         "Lazy Lists"]}},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "Later.get (in Controlling Evaluation with Coercions)":
    [{"id":
      "Later___get-_LPAR_in-Controlling-Evaluation-with-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercion-Insertion/#Later___get-_LPAR_in-Controlling-Evaluation-with-Coercions_RPAR_":
       {"display": "get",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercion Insertion",
         "Controlling Evaluation with Coercions"]}},
      "address": "/Coercions/Coercion-Insertion/"}],
    "Later (in Controlling Evaluation with Coercions)":
    [{"id": "Later-_LPAR_in-Controlling-Evaluation-with-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercion-Insertion/#Later-_LPAR_in-Controlling-Evaluation-with-Coercions_RPAR_":
       {"display": "Later",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercion Insertion",
         "Controlling Evaluation with Coercions"]}},
      "address": "/Coercions/Coercion-Insertion/"}],
    "L (in Automatic universe parameters and the  universe  command)":
    [{"id":
      "L-_LPAR_in-Automatic-universe-parameters-and-the--universe--command_RPAR_",
      "data":
      {"/The-Type-System/Universes/#L-_LPAR_in-Automatic-universe-parameters-and-the--universe--command_RPAR_-next-next":
       {"display": "L",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe Variable Bindings",
         "Automatic universe parameters and the  universe  command"]},
       "/The-Type-System/Universes/#L-_LPAR_in-Automatic-universe-parameters-and-the--universe--command_RPAR_-next":
       {"display": "L",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe Variable Bindings",
         "Automatic universe parameters and the  universe  command"]},
       "/The-Type-System/Universes/#L-_LPAR_in-Automatic-universe-parameters-and-the--universe--command_RPAR_":
       {"display": "L",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe Variable Bindings",
         "Automatic universe parameters and the  universe  command"]}},
      "address": "/The-Type-System/Universes/"},
     {"id":
      "L-_LPAR_in-Automatic-universe-parameters-and-the--universe--command_RPAR_-next-next",
      "data":
      {"/The-Type-System/Universes/#L-_LPAR_in-Automatic-universe-parameters-and-the--universe--command_RPAR_-next-next":
       {"display": "L",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe Variable Bindings",
         "Automatic universe parameters and the  universe  command"]},
       "/The-Type-System/Universes/#L-_LPAR_in-Automatic-universe-parameters-and-the--universe--command_RPAR_-next":
       {"display": "L",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe Variable Bindings",
         "Automatic universe parameters and the  universe  command"]},
       "/The-Type-System/Universes/#L-_LPAR_in-Automatic-universe-parameters-and-the--universe--command_RPAR_":
       {"display": "L",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe Variable Bindings",
         "Automatic universe parameters and the  universe  command"]}},
      "address": "/The-Type-System/Universes/"},
     {"id":
      "L-_LPAR_in-Automatic-universe-parameters-and-the--universe--command_RPAR_-next",
      "data":
      {"/The-Type-System/Universes/#L-_LPAR_in-Automatic-universe-parameters-and-the--universe--command_RPAR_-next-next":
       {"display": "L",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe Variable Bindings",
         "Automatic universe parameters and the  universe  command"]},
       "/The-Type-System/Universes/#L-_LPAR_in-Automatic-universe-parameters-and-the--universe--command_RPAR_-next":
       {"display": "L",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe Variable Bindings",
         "Automatic universe parameters and the  universe  command"]},
       "/The-Type-System/Universes/#L-_LPAR_in-Automatic-universe-parameters-and-the--universe--command_RPAR_":
       {"display": "L",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe Variable Bindings",
         "Automatic universe parameters and the  universe  command"]}},
      "address": "/The-Type-System/Universes/"}],
    "K":
    [{"id": "K",
      "data":
      {"/Basic-Propositions/Propositional-Equality/#K":
       {"display": "K",
        "context":
        ["The Lean Language Reference",
         "Basic Propositions",
         "Propositional Equality",
         "Uniqueness of Equality Proofs"]}},
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "IsEnum.to_from_id (in Deriving Handlers)":
    [{"id": "IsEnum___to_from_id-_LPAR_in-Deriving-Handlers_RPAR_",
      "data":
      {"/Type-Classes/Deriving-Instances/#IsEnum___to_from_id-_LPAR_in-Deriving-Handlers_RPAR_":
       {"display": "to_from_id",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Deriving Instances",
         "Deriving Handlers",
         "Deriving Handlers"]}},
      "address": "/Type-Classes/Deriving-Instances/"}],
    "IsEnum.toIdx (in Deriving Handlers)":
    [{"id": "IsEnum___toIdx-_LPAR_in-Deriving-Handlers_RPAR_",
      "data":
      {"/Type-Classes/Deriving-Instances/#IsEnum___toIdx-_LPAR_in-Deriving-Handlers_RPAR_":
       {"display": "toIdx",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Deriving Instances",
         "Deriving Handlers",
         "Deriving Handlers"]}},
      "address": "/Type-Classes/Deriving-Instances/"}],
    "IsEnum.size (in Deriving Handlers)":
    [{"id": "IsEnum___size-_LPAR_in-Deriving-Handlers_RPAR_",
      "data":
      {"/Type-Classes/Deriving-Instances/#IsEnum___size-_LPAR_in-Deriving-Handlers_RPAR_":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Deriving Instances",
         "Deriving Handlers",
         "Deriving Handlers"]}},
      "address": "/Type-Classes/Deriving-Instances/"}],
    "IsEnum.from_to_id (in Deriving Handlers)":
    [{"id": "IsEnum___from_to_id-_LPAR_in-Deriving-Handlers_RPAR_",
      "data":
      {"/Type-Classes/Deriving-Instances/#IsEnum___from_to_id-_LPAR_in-Deriving-Handlers_RPAR_":
       {"display": "from_to_id",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Deriving Instances",
         "Deriving Handlers",
         "Deriving Handlers"]}},
      "address": "/Type-Classes/Deriving-Instances/"}],
    "IsEnum.fromIdx (in Deriving Handlers)":
    [{"id": "IsEnum___fromIdx-_LPAR_in-Deriving-Handlers_RPAR_",
      "data":
      {"/Type-Classes/Deriving-Instances/#IsEnum___fromIdx-_LPAR_in-Deriving-Handlers_RPAR_":
       {"display": "fromIdx",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Deriving Instances",
         "Deriving Handlers",
         "Deriving Handlers"]}},
      "address": "/Type-Classes/Deriving-Instances/"}],
    "IsEnum (in Deriving Handlers)":
    [{"id": "IsEnum-_LPAR_in-Deriving-Handlers_RPAR_",
      "data":
      {"/Type-Classes/Deriving-Instances/#IsEnum-_LPAR_in-Deriving-Handlers_RPAR_":
       {"display": "IsEnum",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Deriving Instances",
         "Deriving Handlers",
         "Deriving Handlers"]}},
      "address": "/Type-Classes/Deriving-Instances/"}],
    "IsEmpty (in Extending  trivial)":
    [{"id": "IsEmpty-_LPAR_in-Extending--trivial_RPAR_",
      "data":
      {"/Tactic-Proofs/Custom-Tactics/#IsEmpty-_LPAR_in-Extending--trivial_RPAR_":
       {"display": "IsEmpty",
        "context":
        ["The Lean Language Reference",
         "Tactic Proofs",
         "Custom Tactics",
         "Tactic Macros",
         "Extensible Tactic Macros",
         "Extending  trivial"]}},
      "address": "/Tactic-Proofs/Custom-Tactics/"}],
    "IndexMap.values":
    [{"id": "IndexMap___values",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___values":
       {"display": "values",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.size_keys":
    [{"id": "IndexMap___size_keys",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___size_keys":
       {"display": "size_keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.size":
    [{"id": "IndexMap___size-next-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___size-next-next-next":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___size-next-next":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___size-next":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___size":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___size-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___size-next-next-next":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___size-next-next":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___size-next":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___size":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___size-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___size-next-next-next":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___size-next-next":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___size-next":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___size":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___size",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___size-next-next-next":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___size-next-next":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___size-next":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___size":
       {"display": "size",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.mem_insert":
    [{"id": "IndexMap___mem_insert",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___mem_insert-next-next":
       {"display": "mem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___mem_insert-next":
       {"display": "mem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___mem_insert":
       {"display": "mem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___mem_insert-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___mem_insert-next-next":
       {"display": "mem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___mem_insert-next":
       {"display": "mem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___mem_insert":
       {"display": "mem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___mem_insert-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___mem_insert-next-next":
       {"display": "mem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___mem_insert-next":
       {"display": "mem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___mem_insert":
       {"display": "mem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.keys":
    [{"id": "IndexMap___keys",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___keys":
       {"display": "keys",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.insert":
    [{"id": "IndexMap___insert-next-next-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next-next-next-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next-next-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___insert",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next-next-next-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next-next-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___insert-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next-next-next-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next-next-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___insert-next-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next-next-next-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next-next-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___insert-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next-next-next-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next-next-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert-next":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___insert":
       {"display": "insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.indices":
    [{"id": "IndexMap___indices",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___indices":
       {"display": "indices",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.getIdx_findIdx":
    [{"id": "IndexMap___getIdx_findIdx-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx_findIdx-next-next":
       {"display": "getIdx_findIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx_findIdx-next":
       {"display": "getIdx_findIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx_findIdx":
       {"display": "getIdx_findIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___getIdx_findIdx-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx_findIdx-next-next":
       {"display": "getIdx_findIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx_findIdx-next":
       {"display": "getIdx_findIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx_findIdx":
       {"display": "getIdx_findIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___getIdx_findIdx",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx_findIdx-next-next":
       {"display": "getIdx_findIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx_findIdx-next":
       {"display": "getIdx_findIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx_findIdx":
       {"display": "getIdx_findIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.getIdx?":
    [{"id": "IndexMap___getIdx___-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx___-next":
       {"display": "getIdx?",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx___":
       {"display": "getIdx?",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___getIdx___",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx___-next":
       {"display": "getIdx?",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx___":
       {"display": "getIdx?",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.getIdx":
    [{"id": "IndexMap___getIdx",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx-next":
       {"display": "getIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx":
       {"display": "getIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___getIdx-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx-next":
       {"display": "getIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___getIdx":
       {"display": "getIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.getElem_insert":
    [{"id": "IndexMap___getElem_insert",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___getElem_insert-next-next":
       {"display": "getElem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___getElem_insert-next":
       {"display": "getElem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___getElem_insert":
       {"display": "getElem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___getElem_insert-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___getElem_insert-next-next":
       {"display": "getElem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___getElem_insert-next":
       {"display": "getElem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___getElem_insert":
       {"display": "getElem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___getElem_insert-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___getElem_insert-next-next":
       {"display": "getElem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___getElem_insert-next":
       {"display": "getElem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___getElem_insert":
       {"display": "getElem_insert",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.findIdx_insert_self":
    [{"id": "IndexMap___findIdx_insert_self-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx_insert_self-next-next":
       {"display": "findIdx_insert_self",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx_insert_self-next":
       {"display": "findIdx_insert_self",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx_insert_self":
       {"display": "findIdx_insert_self",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___findIdx_insert_self-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx_insert_self-next-next":
       {"display": "findIdx_insert_self",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx_insert_self-next":
       {"display": "findIdx_insert_self",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx_insert_self":
       {"display": "findIdx_insert_self",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___findIdx_insert_self",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx_insert_self-next-next":
       {"display": "findIdx_insert_self",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx_insert_self-next":
       {"display": "findIdx_insert_self",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx_insert_self":
       {"display": "findIdx_insert_self",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.findIdx?":
    [{"id": "IndexMap___findIdx___",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx___-next":
       {"display": "findIdx?",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx___":
       {"display": "findIdx?",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___findIdx___-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx___-next":
       {"display": "findIdx?",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx___":
       {"display": "findIdx?",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.findIdx":
    [{"id": "IndexMap___findIdx-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx-next":
       {"display": "findIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx":
       {"display": "findIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___findIdx",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx-next":
       {"display": "findIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___findIdx":
       {"display": "findIdx",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.eraseSwap":
    [{"id": "IndexMap___eraseSwap",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___eraseSwap-next":
       {"display": "eraseSwap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___eraseSwap":
       {"display": "eraseSwap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___eraseSwap-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___eraseSwap-next":
       {"display": "eraseSwap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___eraseSwap":
       {"display": "eraseSwap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.emptyWithCapacity":
    [{"id": "IndexMap___emptyWithCapacity-next-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___emptyWithCapacity-next-next-next":
       {"display": "emptyWithCapacity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___emptyWithCapacity-next-next":
       {"display": "emptyWithCapacity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___emptyWithCapacity-next":
       {"display": "emptyWithCapacity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___emptyWithCapacity":
       {"display": "emptyWithCapacity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___emptyWithCapacity",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___emptyWithCapacity-next-next-next":
       {"display": "emptyWithCapacity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___emptyWithCapacity-next-next":
       {"display": "emptyWithCapacity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___emptyWithCapacity-next":
       {"display": "emptyWithCapacity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___emptyWithCapacity":
       {"display": "emptyWithCapacity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___emptyWithCapacity-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___emptyWithCapacity-next-next-next":
       {"display": "emptyWithCapacity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___emptyWithCapacity-next-next":
       {"display": "emptyWithCapacity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___emptyWithCapacity-next":
       {"display": "emptyWithCapacity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___emptyWithCapacity":
       {"display": "emptyWithCapacity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___emptyWithCapacity-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___emptyWithCapacity-next-next-next":
       {"display": "emptyWithCapacity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___emptyWithCapacity-next-next":
       {"display": "emptyWithCapacity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___emptyWithCapacity-next":
       {"display": "emptyWithCapacity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___emptyWithCapacity":
       {"display": "emptyWithCapacity",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.contains":
    [{"id": "IndexMap___contains-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___contains-next":
       {"display": "contains",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___contains":
       {"display": "contains",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap___contains",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___contains-next":
       {"display": "contains",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap___contains":
       {"display": "contains",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap.WF":
    [{"id": "IndexMap___WF",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap___WF":
       {"display": "WF",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IndexMap":
    [{"id": "IndexMap-next-next-next-next-next-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap-next-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap-next-next-next-next-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap-next-next-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IndexMap-next-next-next-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap-next":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]},
       "/The--grind--tactic/Bigger-Examples/#IndexMap":
       {"display": "IndexMap",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "IndexMap"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IfNormalization":
    [{"id": "IfNormalization",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfNormalization":
       {"display": "IfNormalization",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The formal statement"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IfExpr.vars":
    [{"id": "IfExpr___vars",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___vars":
       {"display": "vars",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The formal statement"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IfExpr.var":
    [{"id": "IfExpr___var",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___var":
       {"display": "var",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The formal statement"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IfExpr.normalized":
    [{"id": "IfExpr___normalized",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___normalized":
       {"display": "normalized",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The formal statement"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IfExpr.normalize_spec":
    [{"id": "IfExpr___normalize_spec-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___normalize_spec-next-next":
       {"display": "normalize_spec",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]},
       "/The--grind--tactic/Bigger-Examples/#IfExpr___normalize_spec-next":
       {"display": "normalize_spec",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]},
       "/The--grind--tactic/Bigger-Examples/#IfExpr___normalize_spec":
       {"display": "normalize_spec",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IfExpr___normalize_spec-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___normalize_spec-next-next":
       {"display": "normalize_spec",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]},
       "/The--grind--tactic/Bigger-Examples/#IfExpr___normalize_spec-next":
       {"display": "normalize_spec",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]},
       "/The--grind--tactic/Bigger-Examples/#IfExpr___normalize_spec":
       {"display": "normalize_spec",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IfExpr___normalize_spec",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___normalize_spec-next-next":
       {"display": "normalize_spec",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]},
       "/The--grind--tactic/Bigger-Examples/#IfExpr___normalize_spec-next":
       {"display": "normalize_spec",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]},
       "/The--grind--tactic/Bigger-Examples/#IfExpr___normalize_spec":
       {"display": "normalize_spec",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IfExpr.normalize":
    [{"id": "IfExpr___normalize-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___normalize-next-next":
       {"display": "normalize",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]},
       "/The--grind--tactic/Bigger-Examples/#IfExpr___normalize-next":
       {"display": "normalize",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]},
       "/The--grind--tactic/Bigger-Examples/#IfExpr___normalize":
       {"display": "normalize",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IfExpr___normalize-next-next",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___normalize-next-next":
       {"display": "normalize",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]},
       "/The--grind--tactic/Bigger-Examples/#IfExpr___normalize-next":
       {"display": "normalize",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]},
       "/The--grind--tactic/Bigger-Examples/#IfExpr___normalize":
       {"display": "normalize",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"},
     {"id": "IfExpr___normalize",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___normalize-next-next":
       {"display": "normalize",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]},
       "/The--grind--tactic/Bigger-Examples/#IfExpr___normalize-next":
       {"display": "normalize",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]},
       "/The--grind--tactic/Bigger-Examples/#IfExpr___normalize":
       {"display": "normalize",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IfExpr.normSize":
    [{"id": "IfExpr___normSize",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___normSize":
       {"display": "normSize",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The solution using  grind"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IfExpr.lit":
    [{"id": "IfExpr___lit",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___lit":
       {"display": "lit",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The formal statement"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IfExpr.ite":
    [{"id": "IfExpr___ite",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___ite":
       {"display": "ite",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The formal statement"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IfExpr.hasRedundantIf":
    [{"id": "IfExpr___hasRedundantIf",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___hasRedundantIf":
       {"display": "hasRedundantIf",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The formal statement"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IfExpr.hasNestedIf":
    [{"id": "IfExpr___hasNestedIf",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___hasNestedIf":
       {"display": "hasNestedIf",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The formal statement"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IfExpr.hasConstantIf":
    [{"id": "IfExpr___hasConstantIf",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___hasConstantIf":
       {"display": "hasConstantIf",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The formal statement"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IfExpr.eval":
    [{"id": "IfExpr___eval",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___eval":
       {"display": "eval",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The formal statement"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IfExpr.disjoint":
    [{"id": "IfExpr___disjoint",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr___disjoint":
       {"display": "disjoint",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The formal statement"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IfExpr":
    [{"id": "IfExpr",
      "data":
      {"/The--grind--tactic/Bigger-Examples/#IfExpr":
       {"display": "IfExpr",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Bigger Examples",
         "if - then - else  Normalization",
         "The formal statement"]}},
      "address": "/The--grind--tactic/Bigger-Examples/"}],
    "IdT.run (in The Identity Monad Transformer )":
    [{"id": "IdT___run-_LPAR_in-The-Identity-Monad-Transformer-_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Varieties-of-Monads/#IdT___run-_LPAR_in-The-Identity-Monad-Transformer-_RPAR_":
       {"display": "IdT.run",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Varieties of Monads",
         "Monad Transformers",
         "The Identity Monad Transformer "]}},
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "IdT (in The Identity Monad Transformer )":
    [{"id": "IdT-_LPAR_in-The-Identity-Monad-Transformer-_RPAR_",
      "data":
      {"/Functors___-Monads-and--do--Notation/Varieties-of-Monads/#IdT-_LPAR_in-The-Identity-Monad-Transformer-_RPAR_":
       {"display": "IdT",
        "context":
        ["The Lean Language Reference",
         "Functors, Monads and  do -Notation",
         "Varieties of Monads",
         "Monad Transformers",
         "The Identity Monad Transformer "]}},
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "HotDrink.toString (in Current Namespace)":
    [{"id": "HotDrink___toString-_LPAR_in-Current-Namespace_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#HotDrink___toString-_LPAR_in-Current-Namespace_RPAR_":
       {"display": "toString",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Current Namespace"]}},
      "address": "/Namespaces-and-Sections/"}],
    "HotDrink.tea (in Current Namespace)":
    [{"id": "HotDrink___tea-_LPAR_in-Current-Namespace_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#HotDrink___tea-_LPAR_in-Current-Namespace_RPAR_":
       {"display": "tea",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Current Namespace"]}},
      "address": "/Namespaces-and-Sections/"}],
    "HotDrink.ofString? (in Current Namespace)":
    [{"id": "HotDrink___ofString___-_LPAR_in-Current-Namespace_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#HotDrink___ofString___-_LPAR_in-Current-Namespace_RPAR_":
       {"display": "HotDrink.ofString?",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Current Namespace"]}},
      "address": "/Namespaces-and-Sections/"}],
    "HotDrink.coffee (in Current Namespace)":
    [{"id": "HotDrink___coffee-_LPAR_in-Current-Namespace_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#HotDrink___coffee-_LPAR_in-Current-Namespace_RPAR_":
       {"display": "coffee",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Current Namespace"]}},
      "address": "/Namespaces-and-Sections/"}],
    "HotDrink.cocoa (in Current Namespace)":
    [{"id": "HotDrink___cocoa-_LPAR_in-Current-Namespace_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#HotDrink___cocoa-_LPAR_in-Current-Namespace_RPAR_":
       {"display": "cocoa",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Current Namespace"]}},
      "address": "/Namespaces-and-Sections/"}],
    "HotDrink (in Current Namespace)":
    [{"id": "HotDrink-_LPAR_in-Current-Namespace_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#HotDrink-_LPAR_in-Current-Namespace_RPAR_":
       {"display": "HotDrink",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Current Namespace"]}},
      "address": "/Namespaces-and-Sections/"}],
    "Heap.insert (in Instances are Not Unique)":
    [{"id": "Heap___insert-_LPAR_in-Instances-are-Not-Unique_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#Heap___insert-_LPAR_in-Instances-are-Not-Unique_RPAR_":
       {"display": "Heap.insert",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Instances are Not Unique"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "Heap.contents (in Instances are Not Unique)":
    [{"id": "Heap___contents-_LPAR_in-Instances-are-Not-Unique_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#Heap___contents-_LPAR_in-Instances-are-Not-Unique_RPAR_":
       {"display": "contents",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Instances are Not Unique"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "Heap.bubbleUp (in Instances are Not Unique)":
    [{"id": "Heap___bubbleUp-_LPAR_in-Instances-are-Not-Unique_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#Heap___bubbleUp-_LPAR_in-Instances-are-Not-Unique_RPAR_":
       {"display": "Heap.bubbleUp",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Instances are Not Unique"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "Heap'.insert (in Instances are Not Unique)":
    [{"id": "Heap______insert-_LPAR_in-Instances-are-Not-Unique_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#Heap______insert-_LPAR_in-Instances-are-Not-Unique_RPAR_":
       {"display": "Heap'.insert",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Instances are Not Unique"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "Heap'.contents (in Instances are Not Unique)":
    [{"id": "Heap______contents-_LPAR_in-Instances-are-Not-Unique_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#Heap______contents-_LPAR_in-Instances-are-Not-Unique_RPAR_":
       {"display": "contents",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Instances are Not Unique"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "Heap'.bubbleUp (in Instances are Not Unique)":
    [{"id": "Heap______bubbleUp-_LPAR_in-Instances-are-Not-Unique_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#Heap______bubbleUp-_LPAR_in-Instances-are-Not-Unique_RPAR_":
       {"display": "Heap'.bubbleUp",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Instances are Not Unique"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "Heap' (in Instances are Not Unique)":
    [{"id": "Heap___-_LPAR_in-Instances-are-Not-Unique_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#Heap___-_LPAR_in-Instances-are-Not-Unique_RPAR_":
       {"display": "Heap'",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Instances are Not Unique"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "Heap (in Instances are Not Unique)":
    [{"id": "Heap-_LPAR_in-Instances-are-Not-Unique_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#Heap-_LPAR_in-Instances-are-Not-Unique_RPAR_":
       {"display": "Heap",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Instances are Not Unique"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "Greetings.english (in Named Section)":
    [{"id": "Greetings___english-_LPAR_in-Named-Section_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#Greetings___english-_LPAR_in-Named-Section_RPAR_":
       {"display": "Greetings.english",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Section Scopes",
         "Controlling Section Scopes",
         "Named Section"]}},
      "address": "/Namespaces-and-Sections/"}],
    "Graph.empty (in Default values)":
    [{"id": "Graph___empty-_LPAR_in-Default-values_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Graph___empty-_LPAR_in-Default-values_RPAR_":
       {"display": "Graph.empty",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Fields",
         "Default values"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Graph.adjacency (in Default values)":
    [{"id": "Graph___adjacency-_LPAR_in-Default-values_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Graph___adjacency-_LPAR_in-Default-values_RPAR_":
       {"display": "adjacency",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Fields",
         "Default values"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Graph (in Default values)":
    [{"id": "Graph-_LPAR_in-Default-values_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Graph-_LPAR_in-Default-values_RPAR_":
       {"display": "Graph",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Fields",
         "Default values"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Forest.statement (in Explicit Root Namespace)":
    [{"id": "Forest___statement-_LPAR_in-Explicit-Root-Namespace_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#Forest___statement-_LPAR_in-Explicit-Root-Namespace_RPAR_":
       {"display": "statement",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Explicit Root Namespace"]}},
      "address": "/Namespaces-and-Sections/"}],
    "Forest.nextStatement (in Explicit Root Namespace)":
    [{"id": "Forest___nextStatement-_LPAR_in-Explicit-Root-Namespace_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#Forest___nextStatement-_LPAR_in-Explicit-Root-Namespace_RPAR_":
       {"display": "nextStatement",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Explicit Root Namespace"]}},
      "address": "/Namespaces-and-Sections/"}],
    "Forest.color (in Explicit Root Namespace)":
    [{"id": "Forest___color-_LPAR_in-Explicit-Root-Namespace_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#Forest___color-_LPAR_in-Explicit-Root-Namespace_RPAR_":
       {"display": "color",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Explicit Root Namespace"]}},
      "address": "/Namespaces-and-Sections/"}],
    "Float.zero_eq_zero_plus_zero (in No Kernel Reasoning About Floating-Point Numbers)":
    [{"id":
      "Float___zero_eq_zero_plus_zero-_LPAR_in-No-Kernel-Reasoning-About-Floating-Point-Numbers_RPAR_",
      "data":
      {"/Basic-Types/Floating-Point-Numbers/#Float___zero_eq_zero_plus_zero-_LPAR_in-No-Kernel-Reasoning-About-Floating-Point-Numbers_RPAR_-next":
       {"display": "Float.zero_eq_zero_plus_zero",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Floating-Point Numbers",
         "No Kernel Reasoning About Floating-Point Numbers"]},
       "/Basic-Types/Floating-Point-Numbers/#Float___zero_eq_zero_plus_zero-_LPAR_in-No-Kernel-Reasoning-About-Floating-Point-Numbers_RPAR_":
       {"display": "Float.zero_eq_zero_plus_zero",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Floating-Point Numbers",
         "No Kernel Reasoning About Floating-Point Numbers"]}},
      "address": "/Basic-Types/Floating-Point-Numbers/"},
     {"id":
      "Float___zero_eq_zero_plus_zero-_LPAR_in-No-Kernel-Reasoning-About-Floating-Point-Numbers_RPAR_-next",
      "data":
      {"/Basic-Types/Floating-Point-Numbers/#Float___zero_eq_zero_plus_zero-_LPAR_in-No-Kernel-Reasoning-About-Floating-Point-Numbers_RPAR_-next":
       {"display": "Float.zero_eq_zero_plus_zero",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Floating-Point Numbers",
         "No Kernel Reasoning About Floating-Point Numbers"]},
       "/Basic-Types/Floating-Point-Numbers/#Float___zero_eq_zero_plus_zero-_LPAR_in-No-Kernel-Reasoning-About-Floating-Point-Numbers_RPAR_":
       {"display": "Float.zero_eq_zero_plus_zero",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Floating-Point Numbers",
         "No Kernel Reasoning About Floating-Point Numbers"]}},
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Fix (in Non-strictly-positive inductive types)":
    [{"id": "Fix-_LPAR_in-Non-strictly-positive-inductive-types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Fix-_LPAR_in-Non-strictly-positive-inductive-types_RPAR_":
       {"display": "Fix",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Logical Model",
         "Well-Formedness Requirements",
         "Strict Positivity",
         "Non-strictly-positive inductive types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Fin'.zero (in Ineligible decreasing parameters)":
    [{"id": "Fin______zero-_LPAR_in-Ineligible-decreasing-parameters_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Fin______zero-_LPAR_in-Ineligible-decreasing-parameters_RPAR_":
       {"display": "zero",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Ineligible decreasing parameters"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Fin'.succ (in Ineligible decreasing parameters)":
    [{"id": "Fin______succ-_LPAR_in-Ineligible-decreasing-parameters_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Fin______succ-_LPAR_in-Ineligible-decreasing-parameters_RPAR_":
       {"display": "succ",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Ineligible decreasing parameters"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Fin' (in Ineligible decreasing parameters)":
    [{"id": "Fin___-_LPAR_in-Ineligible-decreasing-parameters_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Fin___-_LPAR_in-Ineligible-decreasing-parameters_RPAR_":
       {"display": "Fin'",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Explicit Structural Recursion",
         "Ineligible decreasing parameters"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "FamilyBike (in #print  and Structure Types)":
    [{"id": "FamilyBike-_LPAR_in-___print--and-Structure-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#FamilyBike-_LPAR_in-___print--and-Structure-Types_RPAR_":
       {"display": "FamilyBike",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "#print  and Structure Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ExtFun":
    [{"id": "ExtFun",
      "data":
      {"/The-Type-System/Quotients/#ExtFun":
       {"display": "ExtFun",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Quotients",
         "Quotients and Function Extensionality"]}},
      "address": "/The-Type-System/Quotients/"}],
    "Exp.var (in Mutual Structural Recursion Over Mutual Types)":
    [{"id":
      "Exp___var-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Exp___var-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_":
       {"display": "var",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Mutual Structural Recursion",
         "Mutual Structural Recursion Over Mutual Types"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Exp.size (in Mutual Structural Recursion Over Mutual Types)":
    [{"id":
      "Exp___size-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Exp___size-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_":
       {"display": "Exp.size",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Mutual Structural Recursion",
         "Mutual Structural Recursion Over Mutual Types"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Exp.app (in Mutual Structural Recursion Over Mutual Types)":
    [{"id":
      "Exp___app-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Exp___app-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_":
       {"display": "app",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Mutual Structural Recursion",
         "Mutual Structural Recursion Over Mutual Types"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Exp (in Mutual Structural Recursion Over Mutual Types)":
    [{"id":
      "Exp-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Exp-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_":
       {"display": "Exp",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Mutual Structural Recursion",
         "Mutual Structural Recursion Over Mutual Types"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "EvenPrime.notOne (in No structure subtyping)":
    [{"id": "EvenPrime___notOne-_LPAR_in-No-structure-subtyping_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#EvenPrime___notOne-_LPAR_in-No-structure-subtyping_RPAR_":
       {"display": "notOne",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "No structure subtyping"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "EvenPrime.isPrime (in No structure subtyping)":
    [{"id": "EvenPrime___isPrime-_LPAR_in-No-structure-subtyping_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#EvenPrime___isPrime-_LPAR_in-No-structure-subtyping_RPAR_":
       {"display": "isPrime",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "No structure subtyping"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "EvenPrime (in No structure subtyping)":
    [{"id": "EvenPrime-_LPAR_in-No-structure-subtyping_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#EvenPrime-_LPAR_in-No-structure-subtyping_RPAR_":
       {"display": "EvenPrime",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "No structure subtyping"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "EvenOddList.nil (in Recursor with parameters and indices)":
    [{"id":
      "EvenOddList___nil-_LPAR_in-Recursor-with-parameters-and-indices_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#EvenOddList___nil-_LPAR_in-Recursor-with-parameters-and-indices_RPAR_":
       {"display": "nil",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Logical Model",
         "Recursors",
         "Recursor Types",
         "Recursor with parameters and indices"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "EvenOddList.nil (in A type with parameter and index)":
    [{"id":
      "EvenOddList___nil-_LPAR_in-A-type-with-parameter-and-index_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#EvenOddList___nil-_LPAR_in-A-type-with-parameter-and-index_RPAR_":
       {"display": "nil",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Example Inductive Types",
         "A type with parameter and index"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "EvenOddList.cons (in Recursor with parameters and indices)":
    [{"id":
      "EvenOddList___cons-_LPAR_in-Recursor-with-parameters-and-indices_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#EvenOddList___cons-_LPAR_in-Recursor-with-parameters-and-indices_RPAR_":
       {"display": "cons",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Logical Model",
         "Recursors",
         "Recursor Types",
         "Recursor with parameters and indices"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "EvenOddList.cons (in A type with parameter and index)":
    [{"id":
      "EvenOddList___cons-_LPAR_in-A-type-with-parameter-and-index_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#EvenOddList___cons-_LPAR_in-A-type-with-parameter-and-index_RPAR_":
       {"display": "cons",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Example Inductive Types",
         "A type with parameter and index"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "EvenOddList (in Recursor with parameters and indices)":
    [{"id": "EvenOddList-_LPAR_in-Recursor-with-parameters-and-indices_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#EvenOddList-_LPAR_in-Recursor-with-parameters-and-indices_RPAR_":
       {"display": "EvenOddList",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Logical Model",
         "Recursors",
         "Recursor Types",
         "Recursor with parameters and indices"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "EvenOddList (in A type with parameter and index)":
    [{"id": "EvenOddList-_LPAR_in-A-type-with-parameter-and-index_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#EvenOddList-_LPAR_in-A-type-with-parameter-and-index_RPAR_":
       {"display": "EvenOddList",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Example Inductive Types",
         "A type with parameter and index"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "EvenNumber.val (in No structure subtyping)":
    [{"id": "EvenNumber___val-_LPAR_in-No-structure-subtyping_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#EvenNumber___val-_LPAR_in-No-structure-subtyping_RPAR_":
       {"display": "val",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "No structure subtyping"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "EvenNumber.isEven (in No structure subtyping)":
    [{"id": "EvenNumber___isEven-_LPAR_in-No-structure-subtyping_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#EvenNumber___isEven-_LPAR_in-No-structure-subtyping_RPAR_":
       {"display": "isEven",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "No structure subtyping"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "EvenNumber (in No structure subtyping)":
    [{"id": "EvenNumber-_LPAR_in-No-structure-subtyping_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#EvenNumber-_LPAR_in-No-structure-subtyping_RPAR_":
       {"display": "EvenNumber",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "No structure subtyping"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "EvenList.nil (in Mutually Defined Inductive Types)":
    [{"id": "EvenList___nil-_LPAR_in-Mutually-Defined-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#EvenList___nil-_LPAR_in-Mutually-Defined-Inductive-Types_RPAR_":
       {"display": "nil",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Mutually Defined Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "EvenList.cons (in Mutually Defined Inductive Types)":
    [{"id": "EvenList___cons-_LPAR_in-Mutually-Defined-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#EvenList___cons-_LPAR_in-Mutually-Defined-Inductive-Types_RPAR_":
       {"display": "cons",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Mutually Defined Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "EvenList (in Mutually Defined Inductive Types)":
    [{"id": "EvenList-_LPAR_in-Mutually-Defined-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#EvenList-_LPAR_in-Mutually-Defined-Inductive-Types_RPAR_":
       {"display": "EvenList",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Mutually Defined Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Even.zero (in Splitting Predicates)":
    [{"id": "Even___zero-_LPAR_in-Splitting-Predicates_RPAR_",
      "data":
      {"/The--grind--tactic/Case-Analysis/#Even___zero-_LPAR_in-Splitting-Predicates_RPAR_":
       {"display": "zero",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Case Analysis",
         "Selection Heuristics",
         "Splitting Predicates"]}},
      "address": "/The--grind--tactic/Case-Analysis/"}],
    "Even.zero (in Even and odd)":
    [{"id": "Even___zero-_LPAR_in-Even-and-odd_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Even___zero-_LPAR_in-Even-and-odd_RPAR_":
       {"display": "zero",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Recursors",
         "Even and odd"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Even.zero (in Even Numbers)":
    [{"id": "Even___zero-_LPAR_in-Even-Numbers_RPAR_",
      "data":
      {"/Introduction/#Even___zero-_LPAR_in-Even-Numbers_RPAR_":
       {"display": "zero",
        "context":
        ["The Lean Language Reference",
         "Introduction",
         "Typographical Conventions",
         "Examples",
         "Even Numbers"]}},
      "address": "/Introduction/"}],
    "Even.zero":
    [{"id": "Even___zero",
      "data":
      {"/Introduction/#Even___zero":
       {"display": "zero",
        "context":
        ["The Lean Language Reference",
         "Introduction",
         "Typographical Conventions",
         "Constant, Syntax, and Tactic References"]}},
      "address": "/Introduction/"}],
    "Even.succ (in Even and odd)":
    [{"id": "Even___succ-_LPAR_in-Even-and-odd_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Even___succ-_LPAR_in-Even-and-odd_RPAR_":
       {"display": "succ",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Recursors",
         "Even and odd"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Even.step (in Splitting Predicates)":
    [{"id": "Even___step-_LPAR_in-Splitting-Predicates_RPAR_",
      "data":
      {"/The--grind--tactic/Case-Analysis/#Even___step-_LPAR_in-Splitting-Predicates_RPAR_":
       {"display": "step",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Case Analysis",
         "Selection Heuristics",
         "Splitting Predicates"]}},
      "address": "/The--grind--tactic/Case-Analysis/"}],
    "Even.plusTwo (in Even Numbers)":
    [{"id": "Even___plusTwo-_LPAR_in-Even-Numbers_RPAR_",
      "data":
      {"/Introduction/#Even___plusTwo-_LPAR_in-Even-Numbers_RPAR_":
       {"display": "plusTwo",
        "context":
        ["The Lean Language Reference",
         "Introduction",
         "Typographical Conventions",
         "Examples",
         "Even Numbers"]}},
      "address": "/Introduction/"}],
    "Even.plusTwo":
    [{"id": "Even___plusTwo",
      "data":
      {"/Introduction/#Even___plusTwo":
       {"display": "plusTwo",
        "context":
        ["The Lean Language Reference",
         "Introduction",
         "Typographical Conventions",
         "Constant, Syntax, and Tactic References"]}},
      "address": "/Introduction/"}],
    "Even.number (in Defining Coercions)":
    [{"id": "Even___number-_LPAR_in-Defining-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Even___number-_LPAR_in-Defining-Coercions_RPAR_":
       {"display": "number",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Defining Coercions"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Even.isEven (in Defining Coercions)":
    [{"id": "Even___isEven-_LPAR_in-Defining-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Even___isEven-_LPAR_in-Defining-Coercions_RPAR_":
       {"display": "isEven",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Defining Coercions"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Even.half (in Default Instances)":
    [{"id": "Even___half-_LPAR_in-Default-Instances_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#Even___half-_LPAR_in-Default-Instances_RPAR_":
       {"display": "half",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Default Instances",
         "Default Instances"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "Even (in Splitting Predicates)":
    [{"id": "Even-_LPAR_in-Splitting-Predicates_RPAR_",
      "data":
      {"/The--grind--tactic/Case-Analysis/#Even-_LPAR_in-Splitting-Predicates_RPAR_":
       {"display": "Even",
        "context":
        ["The Lean Language Reference",
         "The  grind  tactic",
         "Case Analysis",
         "Selection Heuristics",
         "Splitting Predicates"]}},
      "address": "/The--grind--tactic/Case-Analysis/"}],
    "Even (in Even and odd)":
    [{"id": "Even-_LPAR_in-Even-and-odd_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Even-_LPAR_in-Even-and-odd_RPAR_":
       {"display": "Even",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Recursors",
         "Even and odd"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Even (in Even Numbers)":
    [{"id": "Even-_LPAR_in-Even-Numbers_RPAR_",
      "data":
      {"/Introduction/#Even-_LPAR_in-Even-Numbers_RPAR_":
       {"display": "Even",
        "context":
        ["The Lean Language Reference",
         "Introduction",
         "Typographical Conventions",
         "Examples",
         "Even Numbers"]}},
      "address": "/Introduction/"}],
    "Even (in Defining Coercions)":
    [{"id": "Even-_LPAR_in-Defining-Coercions_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Even-_LPAR_in-Defining-Coercions_RPAR_":
       {"display": "Even",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "Defining Coercions"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Even (in Default Instances)":
    [{"id": "Even-_LPAR_in-Default-Instances_RPAR_",
      "data":
      {"/Type-Classes/Instance-Declarations/#Even-_LPAR_in-Default-Instances_RPAR_":
       {"display": "Even",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Instance Declarations",
         "Default Instances",
         "Default Instances"]}},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "Even":
    [{"id": "Even",
      "data":
      {"/Introduction/#Even":
       {"display": "Even",
        "context":
        ["The Lean Language Reference",
         "Introduction",
         "Typographical Conventions",
         "Constant, Syntax, and Tactic References"]}},
      "address": "/Introduction/"}],
    "Eq.unique":
    [{"id": "Eq___unique",
      "data":
      {"/Basic-Propositions/Propositional-Equality/#Eq___unique":
       {"display": "Eq.unique",
        "context":
        ["The Lean Language Reference",
         "Basic Propositions",
         "Propositional Equality",
         "Uniqueness of Equality Proofs"]}},
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "Env.get (in Coercing to Function Types)":
    [{"id": "Env___get-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Env___get-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "Env.get",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Env.extend (in Coercing to Function Types)":
    [{"id": "Env___extend-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Env___extend-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "Env.extend",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Env.empty (in Coercing to Function Types)":
    [{"id": "Env___empty-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Env___empty-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "Env.empty",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "Env (in Coercing to Function Types)":
    [{"id": "Env-_LPAR_in-Coercing-to-Function-Types_RPAR_",
      "data":
      {"/Coercions/Coercing-to-Function-Types/#Env-_LPAR_in-Coercing-to-Function-Types_RPAR_":
       {"display": "Env",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing to Function Types",
         "Coercing to Function Types"]}},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "ElectricVehicle.batteries (in #print  and Structure Types)":
    [{"id":
      "ElectricVehicle___batteries-_LPAR_in-___print--and-Structure-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#ElectricVehicle___batteries-_LPAR_in-___print--and-Structure-Types_RPAR_":
       {"display": "batteries",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "#print  and Structure Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ElectricVehicle (in #print  and Structure Types)":
    [{"id": "ElectricVehicle-_LPAR_in-___print--and-Structure-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#ElectricVehicle-_LPAR_in-___print--and-Structure-Types_RPAR_":
       {"display": "ElectricVehicle",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "#print  and Structure Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ElectricFamilyBike (in #print  and Structure Types)":
    [{"id": "ElectricFamilyBike-_LPAR_in-___print--and-Structure-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#ElectricFamilyBike-_LPAR_in-___print--and-Structure-Types_RPAR_":
       {"display": "ElectricFamilyBike",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "#print  and Structure Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ElectricBike (in #print  and Structure Types)":
    [{"id": "ElectricBike-_LPAR_in-___print--and-Structure-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#ElectricBike-_LPAR_in-___print--and-Structure-Types_RPAR_":
       {"display": "ElectricBike",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "#print  and Structure Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Either.right (in Parameters before and after the colon)":
    [{"id":
      "Either___right-_LPAR_in-Parameters-before-and-after-the-colon_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Either___right-_LPAR_in-Parameters-before-and-after-the-colon_RPAR_":
       {"display": "right",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Example Inductive Types",
         "Parameters before and after the colon"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Either.left (in Parameters before and after the colon)":
    [{"id":
      "Either___left-_LPAR_in-Parameters-before-and-after-the-colon_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Either___left-_LPAR_in-Parameters-before-and-after-the-colon_RPAR_":
       {"display": "left",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Example Inductive Types",
         "Parameters before and after the colon"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Either.inr (in Universes, constructors, and parameters)":
    [{"id":
      "Either___inr-_LPAR_in-Universes___-constructors___-and-parameters_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Either___inr-_LPAR_in-Universes___-constructors___-and-parameters_RPAR_":
       {"display": "inr",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Logical Model",
         "Well-Formedness Requirements",
         "Universe Levels",
         "Universes, constructors, and parameters"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Either.inl (in Universes, constructors, and parameters)":
    [{"id":
      "Either___inl-_LPAR_in-Universes___-constructors___-and-parameters_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Either___inl-_LPAR_in-Universes___-constructors___-and-parameters_RPAR_":
       {"display": "inl",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Logical Model",
         "Well-Formedness Requirements",
         "Universe Levels",
         "Universes, constructors, and parameters"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Either''.right (in Parameters before and after the colon)":
    [{"id":
      "Either_________right-_LPAR_in-Parameters-before-and-after-the-colon_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Either_________right-_LPAR_in-Parameters-before-and-after-the-colon_RPAR_":
       {"display": "right",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Example Inductive Types",
         "Parameters before and after the colon"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Either''.left (in Parameters before and after the colon)":
    [{"id":
      "Either_________left-_LPAR_in-Parameters-before-and-after-the-colon_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Either_________left-_LPAR_in-Parameters-before-and-after-the-colon_RPAR_":
       {"display": "left",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Example Inductive Types",
         "Parameters before and after the colon"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Either'' (in Parameters before and after the colon)":
    [{"id":
      "Either______-_LPAR_in-Parameters-before-and-after-the-colon_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Either______-_LPAR_in-Parameters-before-and-after-the-colon_RPAR_":
       {"display": "Either''",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Example Inductive Types",
         "Parameters before and after the colon"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Either' (in Parameters before and after the colon)":
    [{"id": "Either___-_LPAR_in-Parameters-before-and-after-the-colon_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Either___-_LPAR_in-Parameters-before-and-after-the-colon_RPAR_":
       {"display": "Either'",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Example Inductive Types",
         "Parameters before and after the colon"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Either (in Universes, constructors, and parameters)":
    [{"id":
      "Either-_LPAR_in-Universes___-constructors___-and-parameters_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Either-_LPAR_in-Universes___-constructors___-and-parameters_RPAR_":
       {"display": "Either",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Logical Model",
         "Well-Formedness Requirements",
         "Universe Levels",
         "Universes, constructors, and parameters"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Either (in Parameters before and after the colon)":
    [{"id": "Either-_LPAR_in-Parameters-before-and-after-the-colon_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Either-_LPAR_in-Parameters-before-and-after-the-colon_RPAR_":
       {"display": "Either",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Example Inductive Types",
         "Parameters before and after the colon"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "DivBy3 (in Subtype Coercions)":
    [{"id": "DivBy3-_LPAR_in-Subtype-Coercions_RPAR_",
      "data":
      {"/Basic-Types/Subtypes/#DivBy3-_LPAR_in-Subtype-Coercions_RPAR_":
       {"display": "DivBy3",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "Subtypes",
         "Subtype Coercions"]}},
      "address": "/Basic-Types/Subtypes/"}],
    "Dessert.cupcake (in Using  in  for Local Scopes)":
    [{"id": "Dessert___cupcake-_LPAR_in-Using--in--for-Local-Scopes_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#Dessert___cupcake-_LPAR_in-Using--in--for-Local-Scopes_RPAR_":
       {"display": "Dessert.cupcake",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Section Scopes",
         "Controlling Section Scopes",
         "Using  in  for Local Scopes"]}},
      "address": "/Namespaces-and-Sections/"}],
    "Decision.yes (in CoeOut  vs  Coe  instances)":
    [{"id": "Decision___yes-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Decision___yes-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_":
       {"display": "yes",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "CoeOut  vs  Coe  instances"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Decision.ofBool (in CoeOut  vs  Coe  instances)":
    [{"id": "Decision___ofBool-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Decision___ofBool-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_":
       {"display": "Decision.ofBool",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "CoeOut  vs  Coe  instances"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Decision.no (in CoeOut  vs  Coe  instances)":
    [{"id": "Decision___no-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Decision___no-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_":
       {"display": "no",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "CoeOut  vs  Coe  instances"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Decision.maybe (in CoeOut  vs  Coe  instances)":
    [{"id": "Decision___maybe-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Decision___maybe-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_":
       {"display": "maybe",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "CoeOut  vs  Coe  instances"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Decision (in CoeOut  vs  Coe  instances)":
    [{"id": "Decision-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_",
      "data":
      {"/Coercions/Coercing-Between-Types/#Decision-_LPAR_in-CoeOut--vs--Coe--instances_RPAR_":
       {"display": "Decision",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercing Between Types",
         "CoeOut  vs  Coe  instances"]}},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Decimal.toNat (in Defining Coercions: Decimal Numbers)":
    [{"id":
      "Decimal___toNat-_LPAR_in-Defining-Coercions___-Decimal-Numbers_RPAR_",
      "data":
      {"/Coercions/#Decimal___toNat-_LPAR_in-Defining-Coercions___-Decimal-Numbers_RPAR_":
       {"display": "Decimal.toNat",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Defining Coercions: Decimal Numbers"]}},
      "address": "/Coercions/"}],
    "Decimal.digits (in Defining Coercions: Decimal Numbers)":
    [{"id":
      "Decimal___digits-_LPAR_in-Defining-Coercions___-Decimal-Numbers_RPAR_",
      "data":
      {"/Coercions/#Decimal___digits-_LPAR_in-Defining-Coercions___-Decimal-Numbers_RPAR_":
       {"display": "digits",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Defining Coercions: Decimal Numbers"]}},
      "address": "/Coercions/"}],
    "Decimal (in Defining Coercions: Decimal Numbers)":
    [{"id": "Decimal-_LPAR_in-Defining-Coercions___-Decimal-Numbers_RPAR_",
      "data":
      {"/Coercions/#Decimal-_LPAR_in-Defining-Coercions___-Decimal-Numbers_RPAR_":
       {"display": "Decimal",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Defining Coercions: Decimal Numbers"]}},
      "address": "/Coercions/"}],
    "DRTree (in Invalid Nested Inductive Types)":
    [{"id": "DRTree-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#DRTree-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_":
       {"display": "DRTree",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Invalid Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "D.x (in Disambiguation via Typing)":
    [{"id": "D___x-_LPAR_in-Disambiguation-via-Typing_RPAR_",
      "data":
      {"/Terms/Identifiers/#D___x-_LPAR_in-Disambiguation-via-Typing_RPAR_":
       {"display": "D.x",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Identifiers",
         "Disambiguation via Typing"]}},
      "address": "/Terms/Identifiers/"}],
    "CustomUnit.customUnit (in Definitional Equality of Unit-Like Types)":
    [{"id":
      "CustomUnit___customUnit-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_",
      "data":
      {"/Basic-Types/The-Unit-Type/#CustomUnit___customUnit-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_":
       {"display": "customUnit",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "The Unit Type",
         "Definitional Equality",
         "Definitional Equality of Unit-Like Types"]}},
      "address": "/Basic-Types/The-Unit-Type/"}],
    "CustomUnit (in Definitional Equality of Unit-Like Types)":
    [{"id":
      "CustomUnit-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_",
      "data":
      {"/Basic-Types/The-Unit-Type/#CustomUnit-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_":
       {"display": "CustomUnit",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "The Unit Type",
         "Definitional Equality",
         "Definitional Equality of Unit-Like Types"]}},
      "address": "/Basic-Types/The-Unit-Type/"}],
    "Credential.pin (in Missing resulting type after constructor parameter)":
    [{"id":
      "Credential___pin-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential___pin-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_-next":
       {"display": "pin",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]},
       "/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential___pin-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_":
       {"display": "pin",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]}},
      "address": "/Error-Explanations/lean___ctorResultingTypeMismatch/"},
     {"id":
      "Credential___pin-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_",
      "data":
      {"/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential___pin-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_-next":
       {"display": "pin",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]},
       "/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential___pin-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_":
       {"display": "pin",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]}},
      "address": "/Error-Explanations/lean___ctorResultingTypeMismatch/"}],
    "Credential.password (in Missing resulting type after constructor parameter)":
    [{"id":
      "Credential___password-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential___password-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_-next":
       {"display": "password",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]},
       "/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential___password-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_":
       {"display": "password",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]}},
      "address": "/Error-Explanations/lean___ctorResultingTypeMismatch/"},
     {"id":
      "Credential___password-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_",
      "data":
      {"/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential___password-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_-next":
       {"display": "password",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]},
       "/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential___password-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_":
       {"display": "password",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]}},
      "address": "/Error-Explanations/lean___ctorResultingTypeMismatch/"}],
    "Credential (in Missing resulting type after constructor parameter)":
    [{"id":
      "Credential-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_",
      "data":
      {"/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_-next-next":
       {"display": "Credential",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]},
       "/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_-next":
       {"display": "Credential",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]},
       "/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_":
       {"display": "Credential",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]}},
      "address": "/Error-Explanations/lean___ctorResultingTypeMismatch/"},
     {"id":
      "Credential-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_-next-next",
      "data":
      {"/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_-next-next":
       {"display": "Credential",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]},
       "/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_-next":
       {"display": "Credential",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]},
       "/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_":
       {"display": "Credential",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]}},
      "address": "/Error-Explanations/lean___ctorResultingTypeMismatch/"},
     {"id":
      "Credential-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_-next-next":
       {"display": "Credential",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]},
       "/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_-next":
       {"display": "Credential",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]},
       "/Error-Explanations/lean___ctorResultingTypeMismatch/#Credential-_LPAR_in-Missing-resulting-type-after-constructor-parameter_RPAR_":
       {"display": "Credential",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.ctorResultingTypeMismatch",
         "Examples",
         "Missing resulting type after constructor parameter"]}},
      "address": "/Error-Explanations/lean___ctorResultingTypeMismatch/"}],
    "Color.rgb (in Missing namespace)":
    [{"id": "Color___rgb-_LPAR_in-Missing-namespace_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#Color___rgb-_LPAR_in-Missing-namespace_RPAR_-next-next":
       {"display": "rgb",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color___rgb-_LPAR_in-Missing-namespace_RPAR_-next":
       {"display": "rgb",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color___rgb-_LPAR_in-Missing-namespace_RPAR_":
       {"display": "rgb",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"},
     {"id": "Color___rgb-_LPAR_in-Missing-namespace_RPAR_-next-next",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#Color___rgb-_LPAR_in-Missing-namespace_RPAR_-next-next":
       {"display": "rgb",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color___rgb-_LPAR_in-Missing-namespace_RPAR_-next":
       {"display": "rgb",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color___rgb-_LPAR_in-Missing-namespace_RPAR_":
       {"display": "rgb",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"},
     {"id": "Color___rgb-_LPAR_in-Missing-namespace_RPAR_",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#Color___rgb-_LPAR_in-Missing-namespace_RPAR_-next-next":
       {"display": "rgb",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color___rgb-_LPAR_in-Missing-namespace_RPAR_-next":
       {"display": "rgb",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color___rgb-_LPAR_in-Missing-namespace_RPAR_":
       {"display": "rgb",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"}],
    "Color.grayscale (in Missing namespace)":
    [{"id": "Color___grayscale-_LPAR_in-Missing-namespace_RPAR_-next-next",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#Color___grayscale-_LPAR_in-Missing-namespace_RPAR_-next-next":
       {"display": "grayscale",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color___grayscale-_LPAR_in-Missing-namespace_RPAR_-next":
       {"display": "grayscale",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color___grayscale-_LPAR_in-Missing-namespace_RPAR_":
       {"display": "grayscale",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"},
     {"id": "Color___grayscale-_LPAR_in-Missing-namespace_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#Color___grayscale-_LPAR_in-Missing-namespace_RPAR_-next-next":
       {"display": "grayscale",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color___grayscale-_LPAR_in-Missing-namespace_RPAR_-next":
       {"display": "grayscale",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color___grayscale-_LPAR_in-Missing-namespace_RPAR_":
       {"display": "grayscale",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"},
     {"id": "Color___grayscale-_LPAR_in-Missing-namespace_RPAR_",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#Color___grayscale-_LPAR_in-Missing-namespace_RPAR_-next-next":
       {"display": "grayscale",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color___grayscale-_LPAR_in-Missing-namespace_RPAR_-next":
       {"display": "grayscale",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color___grayscale-_LPAR_in-Missing-namespace_RPAR_":
       {"display": "grayscale",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"}],
    "Color (in Missing namespace)":
    [{"id": "Color-_LPAR_in-Missing-namespace_RPAR_",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#Color-_LPAR_in-Missing-namespace_RPAR_-next-next":
       {"display": "Color",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color-_LPAR_in-Missing-namespace_RPAR_-next":
       {"display": "Color",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color-_LPAR_in-Missing-namespace_RPAR_":
       {"display": "Color",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"},
     {"id": "Color-_LPAR_in-Missing-namespace_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#Color-_LPAR_in-Missing-namespace_RPAR_-next-next":
       {"display": "Color",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color-_LPAR_in-Missing-namespace_RPAR_-next":
       {"display": "Color",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color-_LPAR_in-Missing-namespace_RPAR_":
       {"display": "Color",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"},
     {"id": "Color-_LPAR_in-Missing-namespace_RPAR_-next-next",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#Color-_LPAR_in-Missing-namespace_RPAR_-next-next":
       {"display": "Color",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color-_LPAR_in-Missing-namespace_RPAR_-next":
       {"display": "Color",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]},
       "/Error-Explanations/lean___unknownIdentifier/#Color-_LPAR_in-Missing-namespace_RPAR_":
       {"display": "Color",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Missing namespace"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"}],
    "ColdDrink.water (in Current Namespace)":
    [{"id": "ColdDrink___water-_LPAR_in-Current-Namespace_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#ColdDrink___water-_LPAR_in-Current-Namespace_RPAR_":
       {"display": "water",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Current Namespace"]}},
      "address": "/Namespaces-and-Sections/"}],
    "ColdDrink.toString (in Current Namespace)":
    [{"id": "ColdDrink___toString-_LPAR_in-Current-Namespace_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#ColdDrink___toString-_LPAR_in-Current-Namespace_RPAR_":
       {"display": "_root_.ColdDrink.toString",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Current Namespace"]}},
      "address": "/Namespaces-and-Sections/"}],
    "ColdDrink.juice (in Current Namespace)":
    [{"id": "ColdDrink___juice-_LPAR_in-Current-Namespace_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#ColdDrink___juice-_LPAR_in-Current-Namespace_RPAR_":
       {"display": "juice",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Current Namespace"]}},
      "address": "/Namespaces-and-Sections/"}],
    "ColdDrink (in Current Namespace)":
    [{"id": "ColdDrink-_LPAR_in-Current-Namespace_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#ColdDrink-_LPAR_in-Current-Namespace_RPAR_":
       {"display": "ColdDrink",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Current Namespace"]}},
      "address": "/Namespaces-and-Sections/"}],
    "Codec.type (in Universe level expressions)":
    [{"id": "Codec___type-_LPAR_in-Universe-level-expressions_RPAR_",
      "data":
      {"/The-Type-System/Universes/#Codec___type-_LPAR_in-Universe-level-expressions_RPAR_":
       {"display": "type",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe level expressions"]}},
      "address": "/The-Type-System/Universes/"}],
    "Codec.encode (in Universe level expressions)":
    [{"id": "Codec___encode-_LPAR_in-Universe-level-expressions_RPAR_",
      "data":
      {"/The-Type-System/Universes/#Codec___encode-_LPAR_in-Universe-level-expressions_RPAR_":
       {"display": "encode",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe level expressions"]}},
      "address": "/The-Type-System/Universes/"}],
    "Codec.decode (in Universe level expressions)":
    [{"id": "Codec___decode-_LPAR_in-Universe-level-expressions_RPAR_",
      "data":
      {"/The-Type-System/Universes/#Codec___decode-_LPAR_in-Universe-level-expressions_RPAR_":
       {"display": "decode",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe level expressions"]}},
      "address": "/The-Type-System/Universes/"}],
    "Codec.char (in Universe level expressions)":
    [{"id": "Codec___char-_LPAR_in-Universe-level-expressions_RPAR_",
      "data":
      {"/The-Type-System/Universes/#Codec___char-_LPAR_in-Universe-level-expressions_RPAR_":
       {"display": "Codec.char",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Universes",
         "Polymorphism",
         "Universe level expressions"]}},
      "address": "/The-Type-System/Universes/"}],
    "Clause (in Reducibility and Instance Synthesis)":
    [{"id": "Clause-_LPAR_in-Reducibility-and-Instance-Synthesis_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Clause-_LPAR_in-Reducibility-and-Instance-Synthesis_RPAR_":
       {"display": "Clause",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Controlling Reduction",
         "Reducibility and Instance Synthesis"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Children (in Invalid Nested Inductive Types)":
    [{"id": "Children-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Children-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_":
       {"display": "Children",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Invalid Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "CanRepr.mk (in Universes, constructors, and parameters)":
    [{"id":
      "CanRepr___mk-_LPAR_in-Universes___-constructors___-and-parameters_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#CanRepr___mk-_LPAR_in-Universes___-constructors___-and-parameters_RPAR_":
       {"display": "mk",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Logical Model",
         "Well-Formedness Requirements",
         "Universe Levels",
         "Universes, constructors, and parameters"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "CanRepr (in Universes, constructors, and parameters)":
    [{"id":
      "CanRepr-_LPAR_in-Universes___-constructors___-and-parameters_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#CanRepr-_LPAR_in-Universes___-constructors___-and-parameters_RPAR_":
       {"display": "CanRepr",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Logical Model",
         "Well-Formedness Requirements",
         "Universe Levels",
         "Universes, constructors, and parameters"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "C2.Semigroup.op_assoc (in Class vs Structure Constructors)":
    [{"id":
      "C2___Semigroup___op_assoc-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#C2___Semigroup___op_assoc-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "op_assoc",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "C2.Semigroup (in Class vs Structure Constructors)":
    [{"id": "C2___Semigroup-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#C2___Semigroup-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "Semigroup",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "C2.Monoid.ident_right (in Class vs Structure Constructors)":
    [{"id":
      "C2___Monoid___ident_right-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#C2___Monoid___ident_right-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "ident_right",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "C2.Monoid.ident_left (in Class vs Structure Constructors)":
    [{"id":
      "C2___Monoid___ident_left-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#C2___Monoid___ident_left-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "ident_left",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "C2.Monoid.ident (in Class vs Structure Constructors)":
    [{"id":
      "C2___Monoid___ident-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#C2___Monoid___ident-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "ident",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "C2.Monoid (in Class vs Structure Constructors)":
    [{"id": "C2___Monoid-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#C2___Monoid-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "Monoid",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "C2.Magma.op (in Class vs Structure Constructors)":
    [{"id": "C2___Magma___op-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#C2___Magma___op-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "op",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "C2.Magma (in Class vs Structure Constructors)":
    [{"id": "C2___Magma-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#C2___Magma-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "Magma",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "C1.Monoid.ident_right (in Class vs Structure Constructors)":
    [{"id":
      "C1___Monoid___ident_right-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#C1___Monoid___ident_right-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "ident_right",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "C1.Monoid.ident_left (in Class vs Structure Constructors)":
    [{"id":
      "C1___Monoid___ident_left-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#C1___Monoid___ident_left-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "ident_left",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "C1.Monoid.ident (in Class vs Structure Constructors)":
    [{"id":
      "C1___Monoid___ident-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#C1___Monoid___ident-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "ident",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "C1.Monoid (in Class vs Structure Constructors)":
    [{"id": "C1___Monoid-_LPAR_in-Class-vs-Structure-Constructors_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#C1___Monoid-_LPAR_in-Class-vs-Structure-Constructors_RPAR_":
       {"display": "Monoid",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class vs Structure Constructors"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "C.x (in Disambiguation via Typing)":
    [{"id": "C___x-_LPAR_in-Disambiguation-via-Typing_RPAR_",
      "data":
      {"/Terms/Identifiers/#C___x-_LPAR_in-Disambiguation-via-Typing_RPAR_":
       {"display": "C.x",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Identifiers",
         "Disambiguation via Typing"]}},
      "address": "/Terms/Identifiers/"}],
    "C.a6 (in Opening Nested Namespaces)":
    [{"id": "C___a6-_LPAR_in-Opening-Nested-Namespaces_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#C___a6-_LPAR_in-Opening-Nested-Namespaces_RPAR_":
       {"display": "a6",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Opening Nested Namespaces"]}},
      "address": "/Namespaces-and-Sections/"}],
    "Book.title (in Structure type inheritance with overlapping fields)":
    [{"id":
      "Book___title-_LPAR_in-Structure-type-inheritance-with-overlapping-fields_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Book___title-_LPAR_in-Structure-type-inheritance-with-overlapping-fields_RPAR_":
       {"display": "title",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "Structure type inheritance with overlapping fields"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Book.author (in Structure type inheritance with overlapping fields)":
    [{"id":
      "Book___author-_LPAR_in-Structure-type-inheritance-with-overlapping-fields_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Book___author-_LPAR_in-Structure-type-inheritance-with-overlapping-fields_RPAR_":
       {"display": "author",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "Structure type inheritance with overlapping fields"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Book (in Structure type inheritance with overlapping fields)":
    [{"id":
      "Book-_LPAR_in-Structure-type-inheritance-with-overlapping-fields_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Book-_LPAR_in-Structure-type-inheritance-with-overlapping-fields_RPAR_":
       {"display": "Book",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "Structure type inheritance with overlapping fields"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Binding (in Mutual strict positivity)":
    [{"id": "Binding-_LPAR_in-Mutual-strict-positivity_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Binding-_LPAR_in-Mutual-strict-positivity_RPAR_":
       {"display": "Binding",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Requirements",
         "Positivity",
         "Mutual strict positivity"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Bin.zero (in Coercions and  OfNat)":
    [{"id": "Bin___zero-_LPAR_in-Coercions-and--OfNat_RPAR_",
      "data":
      {"/Coercions/#Bin___zero-_LPAR_in-Coercions-and--OfNat_RPAR_":
       {"display": "zero",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercions and  OfNat"]}},
      "address": "/Coercions/"}],
    "Bin.toString (in Coercions and  OfNat)":
    [{"id": "Bin___toString-_LPAR_in-Coercions-and--OfNat_RPAR_",
      "data":
      {"/Coercions/#Bin___toString-_LPAR_in-Coercions-and--OfNat_RPAR_":
       {"display": "Bin.toString",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercions and  OfNat"]}},
      "address": "/Coercions/"}],
    "Bin.succ (in Coercions and  OfNat)":
    [{"id": "Bin___succ-_LPAR_in-Coercions-and--OfNat_RPAR_",
      "data":
      {"/Coercions/#Bin___succ-_LPAR_in-Coercions-and--OfNat_RPAR_":
       {"display": "Bin.succ",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercions and  OfNat"]}},
      "address": "/Coercions/"}],
    "Bin.one (in Coercions and  OfNat)":
    [{"id": "Bin___one-_LPAR_in-Coercions-and--OfNat_RPAR_",
      "data":
      {"/Coercions/#Bin___one-_LPAR_in-Coercions-and--OfNat_RPAR_":
       {"display": "one",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercions and  OfNat"]}},
      "address": "/Coercions/"}],
    "Bin.ofNat (in Coercions and  OfNat)":
    [{"id": "Bin___ofNat-_LPAR_in-Coercions-and--OfNat_RPAR_",
      "data":
      {"/Coercions/#Bin___ofNat-_LPAR_in-Coercions-and--OfNat_RPAR_":
       {"display": "Bin.ofNat",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercions and  OfNat"]}},
      "address": "/Coercions/"}],
    "Bin.done (in Coercions and  OfNat)":
    [{"id": "Bin___done-_LPAR_in-Coercions-and--OfNat_RPAR_",
      "data":
      {"/Coercions/#Bin___done-_LPAR_in-Coercions-and--OfNat_RPAR_":
       {"display": "done",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercions and  OfNat"]}},
      "address": "/Coercions/"}],
    "Bin (in Coercions and  OfNat)":
    [{"id": "Bin-_LPAR_in-Coercions-and--OfNat_RPAR_",
      "data":
      {"/Coercions/#Bin-_LPAR_in-Coercions-and--OfNat_RPAR_":
       {"display": "Bin",
        "context":
        ["The Lean Language Reference",
         "Coercions",
         "Coercions and  OfNat"]}},
      "address": "/Coercions/"}],
    "Bicycle (in #print  and Structure Types)":
    [{"id": "Bicycle-_LPAR_in-___print--and-Structure-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Bicycle-_LPAR_in-___print--and-Structure-Types_RPAR_":
       {"display": "Bicycle",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "#print  and Structure Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "BalancedTree.rbranch (in Type Refinement)":
    [{"id": "BalancedTree___rbranch-_LPAR_in-Type-Refinement_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#BalancedTree___rbranch-_LPAR_in-Type-Refinement_RPAR_":
       {"display": "rbranch",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Type Refinement"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "BalancedTree.lbranch (in Type Refinement)":
    [{"id": "BalancedTree___lbranch-_LPAR_in-Type-Refinement_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#BalancedTree___lbranch-_LPAR_in-Type-Refinement_RPAR_":
       {"display": "lbranch",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Type Refinement"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "BalancedTree.isPerfectlyBalanced (in Type Refinement)":
    [{"id":
      "BalancedTree___isPerfectlyBalanced-_LPAR_in-Type-Refinement_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#BalancedTree___isPerfectlyBalanced-_LPAR_in-Type-Refinement_RPAR_":
       {"display": "BalancedTree.isPerfectlyBalanced",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Type Refinement"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "BalancedTree.filledWith (in Type Refinement)":
    [{"id": "BalancedTree___filledWith-_LPAR_in-Type-Refinement_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#BalancedTree___filledWith-_LPAR_in-Type-Refinement_RPAR_-next":
       {"display": "BalancedTree.filledWith",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Type Refinement"]},
       "/Terms/Pattern-Matching/#BalancedTree___filledWith-_LPAR_in-Type-Refinement_RPAR_":
       {"display": "BalancedTree.filledWith",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Type Refinement"]}},
      "address": "/Terms/Pattern-Matching/"},
     {"id": "BalancedTree___filledWith-_LPAR_in-Type-Refinement_RPAR_-next",
      "data":
      {"/Terms/Pattern-Matching/#BalancedTree___filledWith-_LPAR_in-Type-Refinement_RPAR_-next":
       {"display": "BalancedTree.filledWith",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Type Refinement"]},
       "/Terms/Pattern-Matching/#BalancedTree___filledWith-_LPAR_in-Type-Refinement_RPAR_":
       {"display": "BalancedTree.filledWith",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Type Refinement"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "BalancedTree.empty (in Type Refinement)":
    [{"id": "BalancedTree___empty-_LPAR_in-Type-Refinement_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#BalancedTree___empty-_LPAR_in-Type-Refinement_RPAR_":
       {"display": "empty",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Type Refinement"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "BalancedTree.branch (in Type Refinement)":
    [{"id": "BalancedTree___branch-_LPAR_in-Type-Refinement_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#BalancedTree___branch-_LPAR_in-Type-Refinement_RPAR_":
       {"display": "branch",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Type Refinement"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "BalancedTree (in Type Refinement)":
    [{"id": "BalancedTree-_LPAR_in-Type-Refinement_RPAR_",
      "data":
      {"/Terms/Pattern-Matching/#BalancedTree-_LPAR_in-Type-Refinement_RPAR_":
       {"display": "BalancedTree",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Pattern Matching",
         "Types",
         "Type Refinement"]}},
      "address": "/Terms/Pattern-Matching/"}],
    "Bad (in Non-strictly-positive inductive types)":
    [{"id": "Bad-_LPAR_in-Non-strictly-positive-inductive-types_RPAR_-next",
      "data":
      {"/The-Type-System/Inductive-Types/#Bad-_LPAR_in-Non-strictly-positive-inductive-types_RPAR_-next":
       {"display": "Bad",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Logical Model",
         "Well-Formedness Requirements",
         "Strict Positivity",
         "Non-strictly-positive inductive types"]},
       "/The-Type-System/Inductive-Types/#Bad-_LPAR_in-Non-strictly-positive-inductive-types_RPAR_":
       {"display": "Bad",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Logical Model",
         "Well-Formedness Requirements",
         "Strict Positivity",
         "Non-strictly-positive inductive types"]}},
      "address": "/The-Type-System/Inductive-Types/"},
     {"id": "Bad-_LPAR_in-Non-strictly-positive-inductive-types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#Bad-_LPAR_in-Non-strictly-positive-inductive-types_RPAR_-next":
       {"display": "Bad",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Logical Model",
         "Well-Formedness Requirements",
         "Strict Positivity",
         "Non-strictly-positive inductive types"]},
       "/The-Type-System/Inductive-Types/#Bad-_LPAR_in-Non-strictly-positive-inductive-types_RPAR_":
       {"display": "Bad",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Logical Model",
         "Well-Formedness Requirements",
         "Strict Positivity",
         "Non-strictly-positive inductive types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "BRTree (in Invalid Nested Inductive Types)":
    [{"id": "BRTree-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#BRTree-_LPAR_in-Invalid-Nested-Inductive-Types_RPAR_":
       {"display": "BRTree",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Mutual Inductive Types",
         "Nested Inductive Types",
         "Invalid Nested Inductive Types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "B.y (in Longer Identifier Prefixes Take Precedence)":
    [{"id": "B___y-_LPAR_in-Longer-Identifier-Prefixes-Take-Precedence_RPAR_",
      "data":
      {"/Terms/Identifiers/#B___y-_LPAR_in-Longer-Identifier-Prefixes-Take-Precedence_RPAR_":
       {"display": "y",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Identifiers",
         "Longer Identifier Prefixes Take Precedence"]}},
      "address": "/Terms/Identifiers/"}],
    "B.x (in Current Namespace Contents Take Precedence Over Opened Namespaces)":
    [{"id":
      "B___x-_LPAR_in-Current-Namespace-Contents-Take-Precedence-Over-Opened-Namespaces_RPAR_",
      "data":
      {"/Terms/Identifiers/#B___x-_LPAR_in-Current-Namespace-Contents-Take-Precedence-Over-Opened-Namespaces_RPAR_":
       {"display": "x",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Identifiers",
         "Current Namespace Contents Take Precedence Over Opened Namespaces"]}},
      "address": "/Terms/Identifiers/"}],
    "B.x (in Ambiguous Identifiers)":
    [{"id": "B___x-_LPAR_in-Ambiguous-Identifiers_RPAR_",
      "data":
      {"/Terms/Identifiers/#B___x-_LPAR_in-Ambiguous-Identifiers_RPAR_":
       {"display": "B.x",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Identifiers",
         "Ambiguous Identifiers"]}},
      "address": "/Terms/Identifiers/"}],
    "B.a4 (in Opening Nested Namespaces)":
    [{"id": "B___a4-_LPAR_in-Opening-Nested-Namespaces_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#B___a4-_LPAR_in-Opening-Nested-Namespaces_RPAR_":
       {"display": "a4",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Opening Nested Namespaces"]}},
      "address": "/Namespaces-and-Sections/"}],
    "B.C.a5 (in Opening Nested Namespaces)":
    [{"id": "B___C___a5-_LPAR_in-Opening-Nested-Namespaces_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#B___C___a5-_LPAR_in-Opening-Nested-Namespaces_RPAR_":
       {"display": "a5",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Opening Nested Namespaces"]}},
      "address": "/Namespaces-and-Sections/"}],
    "B (in Longer Identifier Prefixes Take Precedence)":
    [{"id": "B-_LPAR_in-Longer-Identifier-Prefixes-Take-Precedence_RPAR_",
      "data":
      {"/Terms/Identifiers/#B-_LPAR_in-Longer-Identifier-Prefixes-Take-Precedence_RPAR_":
       {"display": "B",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Identifiers",
         "Longer Identifier Prefixes Take Precedence"]}},
      "address": "/Terms/Identifiers/"}],
    "B (in Deriving Multiple Classes)":
    [{"id": "B-_LPAR_in-Deriving-Multiple-Classes_RPAR_",
      "data":
      {"/Type-Classes/Deriving-Instances/#B-_LPAR_in-Deriving-Multiple-Classes_RPAR_":
       {"display": "B",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Deriving Instances",
         "Deriving Multiple Classes"]}},
      "address": "/Type-Classes/Deriving-Instances/"}],
    "AugmentedIntList.list (in Patterns and default values)":
    [{"id":
      "AugmentedIntList___list-_LPAR_in-Patterns-and-default-values_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#AugmentedIntList___list-_LPAR_in-Patterns-and-default-values_RPAR_":
       {"display": "list",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Patterns and default values"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "AugmentedIntList.isEmpty (in Patterns and default values)":
    [{"id":
      "AugmentedIntList___isEmpty-_LPAR_in-Patterns-and-default-values_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#AugmentedIntList___isEmpty-_LPAR_in-Patterns-and-default-values_RPAR_":
       {"display": "AugmentedIntList.isEmpty",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Patterns and default values"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "AugmentedIntList.augmentation (in Patterns and default values)":
    [{"id":
      "AugmentedIntList___augmentation-_LPAR_in-Patterns-and-default-values_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#AugmentedIntList___augmentation-_LPAR_in-Patterns-and-default-values_RPAR_":
       {"display": "augmentation",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Patterns and default values"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "AugmentedIntList (in Patterns and default values)":
    [{"id": "AugmentedIntList-_LPAR_in-Patterns-and-default-values_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#AugmentedIntList-_LPAR_in-Patterns-and-default-values_RPAR_":
       {"display": "AugmentedIntList",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Patterns and default values"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "AugmentedIntArray.augmentation (in Updating arrays)":
    [{"id": "AugmentedIntArray___augmentation-_LPAR_in-Updating-arrays_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#AugmentedIntArray___augmentation-_LPAR_in-Updating-arrays_RPAR_":
       {"display": "augmentation",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Updating arrays"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "AugmentedIntArray.array (in Updating arrays)":
    [{"id": "AugmentedIntArray___array-_LPAR_in-Updating-arrays_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#AugmentedIntArray___array-_LPAR_in-Updating-arrays_RPAR_":
       {"display": "array",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Updating arrays"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "AugmentedIntArray (in Updating arrays)":
    [{"id": "AugmentedIntArray-_LPAR_in-Updating-arrays_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#AugmentedIntArray-_LPAR_in-Updating-arrays_RPAR_":
       {"display": "AugmentedIntArray",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Constructors",
         "Updating arrays"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "AtLeastOne.mk (in Anonymous constructors)":
    [{"id": "AtLeastOne___mk-_LPAR_in-Anonymous-constructors_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#AtLeastOne___mk-_LPAR_in-Anonymous-constructors_RPAR_":
       {"display": "mk",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Anonymous Constructor Syntax",
         "Anonymous constructors"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "AtLeastOne.head' (in Anonymous constructors)":
    [{"id": "AtLeastOne___head___-_LPAR_in-Anonymous-constructors_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#AtLeastOne___head___-_LPAR_in-Anonymous-constructors_RPAR_":
       {"display": "AtLeastOne.head'",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Anonymous Constructor Syntax",
         "Anonymous constructors"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "AtLeastOne.head (in Anonymous constructors)":
    [{"id": "AtLeastOne___head-_LPAR_in-Anonymous-constructors_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#AtLeastOne___head-_LPAR_in-Anonymous-constructors_RPAR_":
       {"display": "AtLeastOne.head",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Anonymous Constructor Syntax",
         "Anonymous constructors"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "AtLeastOne (in Anonymous constructors)":
    [{"id": "AtLeastOne-_LPAR_in-Anonymous-constructors_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#AtLeastOne-_LPAR_in-Anonymous-constructors_RPAR_":
       {"display": "AtLeastOne",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Inductive Type Declarations",
         "Anonymous Constructor Syntax",
         "Anonymous constructors"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "AtLeast.val_gt_i (in Iterated Automatic Implicit Parameters)":
    [{"id":
      "AtLeast___val_gt_i-_LPAR_in-Iterated-Automatic-Implicit-Parameters_RPAR_",
      "data":
      {"/Definitions/Headers-and-Signatures/#AtLeast___val_gt_i-_LPAR_in-Iterated-Automatic-Implicit-Parameters_RPAR_":
       {"display": "val_gt_i",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Iterated Automatic Implicit Parameters"]}},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "AtLeast.val (in Iterated Automatic Implicit Parameters)":
    [{"id":
      "AtLeast___val-_LPAR_in-Iterated-Automatic-Implicit-Parameters_RPAR_",
      "data":
      {"/Definitions/Headers-and-Signatures/#AtLeast___val-_LPAR_in-Iterated-Automatic-Implicit-Parameters_RPAR_":
       {"display": "val",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Iterated Automatic Implicit Parameters"]}},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "AtLeast.add (in Iterated Automatic Implicit Parameters)":
    [{"id":
      "AtLeast___add-_LPAR_in-Iterated-Automatic-Implicit-Parameters_RPAR_",
      "data":
      {"/Definitions/Headers-and-Signatures/#AtLeast___add-_LPAR_in-Iterated-Automatic-Implicit-Parameters_RPAR_":
       {"display": "AtLeast.add",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Iterated Automatic Implicit Parameters"]}},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "AtLeast (in Iterated Automatic Implicit Parameters)":
    [{"id": "AtLeast-_LPAR_in-Iterated-Automatic-Implicit-Parameters_RPAR_",
      "data":
      {"/Definitions/Headers-and-Signatures/#AtLeast-_LPAR_in-Iterated-Automatic-Implicit-Parameters_RPAR_":
       {"display": "AtLeast",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Iterated Automatic Implicit Parameters"]}},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "ArraySized.size_eq_length (in Dependent projection types)":
    [{"id":
      "ArraySized___size_eq_length-_LPAR_in-Dependent-projection-types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#ArraySized___size_eq_length-_LPAR_in-Dependent-projection-types_RPAR_":
       {"display": "size_eq_length",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Fields",
         "Dependent projection types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ArraySized.array (in Dependent projection types)":
    [{"id": "ArraySized___array-_LPAR_in-Dependent-projection-types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#ArraySized___array-_LPAR_in-Dependent-projection-types_RPAR_":
       {"display": "array",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Fields",
         "Dependent projection types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ArraySized (in Dependent projection types)":
    [{"id": "ArraySized-_LPAR_in-Dependent-projection-types_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#ArraySized-_LPAR_in-Dependent-projection-types_RPAR_":
       {"display": "ArraySized",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Fields",
         "Dependent projection types"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Array.find (in Tail Recursion with Branching)":
    [{"id": "Array___find-_LPAR_in-Tail-Recursion-with-Branching_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#Array___find-_LPAR_in-Tail-Recursion-with-Branching_RPAR_":
       {"display": "Array.find",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Partial Fixpoint Recursion",
         "Tail-Recursive Functions",
         "Tail Recursion with Branching"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "App.size (in Mutual Structural Recursion Over Mutual Types)":
    [{"id":
      "App___size-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#App___size-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_":
       {"display": "App.size",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Mutual Structural Recursion",
         "Mutual Structural Recursion Over Mutual Types"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "App.numArgs (in Mutual Structural Recursion Over Mutual Types)":
    [{"id":
      "App___numArgs-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#App___numArgs-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_":
       {"display": "App.numArgs",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Mutual Structural Recursion",
         "Mutual Structural Recursion Over Mutual Types"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "App.fn (in Mutual Structural Recursion Over Mutual Types)":
    [{"id":
      "App___fn-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#App___fn-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_":
       {"display": "fn",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Mutual Structural Recursion",
         "Mutual Structural Recursion Over Mutual Types"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "App.app (in Mutual Structural Recursion Over Mutual Types)":
    [{"id":
      "App___app-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#App___app-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_":
       {"display": "app",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Mutual Structural Recursion",
         "Mutual Structural Recursion Over Mutual Types"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "App (in Mutual Structural Recursion Over Mutual Types)":
    [{"id":
      "App-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_",
      "data":
      {"/Definitions/Recursive-Definitions/#App-_LPAR_in-Mutual-Structural-Recursion-Over-Mutual-Types_RPAR_":
       {"display": "App",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Recursive Definitions",
         "Structural Recursion",
         "Mutual Structural Recursion",
         "Mutual Structural Recursion Over Mutual Types"]}},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Answer.yes (in Relaxed vs Non-Relaxed Automatic Implicit Parameters)":
    [{"id":
      "Answer___yes-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_",
      "data":
      {"/Definitions/Headers-and-Signatures/#Answer___yes-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_":
       {"display": "yes",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]}},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Answer.no (in Relaxed vs Non-Relaxed Automatic Implicit Parameters)":
    [{"id":
      "Answer___no-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_",
      "data":
      {"/Definitions/Headers-and-Signatures/#Answer___no-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_":
       {"display": "no",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]}},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Answer.maybe (in Relaxed vs Non-Relaxed Automatic Implicit Parameters)":
    [{"id":
      "Answer___maybe-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_",
      "data":
      {"/Definitions/Headers-and-Signatures/#Answer___maybe-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_":
       {"display": "maybe",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]}},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Answer (in Relaxed vs Non-Relaxed Automatic Implicit Parameters)":
    [{"id":
      "Answer-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_",
      "data":
      {"/Definitions/Headers-and-Signatures/#Answer-_LPAR_in-Relaxed-vs-Non-Relaxed-Automatic-Implicit-Parameters_RPAR_":
       {"display": "Answer",
        "context":
        ["The Lean Language Reference",
         "Definitions",
         "Headers and Signatures",
         "Automatic Implicit Parameters",
         "Relaxed vs Non-Relaxed Automatic Implicit Parameters"]}},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "AlsoUnit (in Definitional Equality of Unit-Like Types)":
    [{"id":
      "AlsoUnit-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_",
      "data":
      {"/Basic-Types/The-Unit-Type/#AlsoUnit-_LPAR_in-Definitional-Equality-of-Unit-Like-Types_RPAR_":
       {"display": "AlsoUnit",
        "context":
        ["The Lean Language Reference",
         "Basic Types",
         "The Unit Type",
         "Definitional Equality",
         "Definitional Equality of Unit-Like Types"]}},
      "address": "/Basic-Types/The-Unit-Type/"}],
    "AllNonZero (in Non-Dependent Functions Don't Bind Variables)":
    [{"id":
      "AllNonZero-_LPAR_in-Non-Dependent-Functions-Don___t-Bind-Variables_RPAR_",
      "data":
      {"/The-Type-System/Functions/#AllNonZero-_LPAR_in-Non-Dependent-Functions-Don___t-Bind-Variables_RPAR_-next":
       {"display": "AllNonZero",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Functions",
         "Non-Dependent Functions Don't Bind Variables"]},
       "/The-Type-System/Functions/#AllNonZero-_LPAR_in-Non-Dependent-Functions-Don___t-Bind-Variables_RPAR_":
       {"display": "AllNonZero",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Functions",
         "Non-Dependent Functions Don't Bind Variables"]}},
      "address": "/The-Type-System/Functions/"},
     {"id":
      "AllNonZero-_LPAR_in-Non-Dependent-Functions-Don___t-Bind-Variables_RPAR_-next",
      "data":
      {"/The-Type-System/Functions/#AllNonZero-_LPAR_in-Non-Dependent-Functions-Don___t-Bind-Variables_RPAR_-next":
       {"display": "AllNonZero",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Functions",
         "Non-Dependent Functions Don't Bind Variables"]},
       "/The-Type-System/Functions/#AllNonZero-_LPAR_in-Non-Dependent-Functions-Don___t-Bind-Variables_RPAR_":
       {"display": "AllNonZero",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Functions",
         "Non-Dependent Functions Don't Bind Variables"]}},
      "address": "/The-Type-System/Functions/"}],
    "AddMul' (in Class Abbreviations)":
    [{"id": "AddMul___-_LPAR_in-Class-Abbreviations_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#AddMul___-_LPAR_in-Class-Abbreviations_RPAR_":
       {"display": "AddMul'",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class Abbreviations",
         "Class Abbreviations"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "AddMul (in Class Abbreviations)":
    [{"id": "AddMul-_LPAR_in-Class-Abbreviations_RPAR_",
      "data":
      {"/Type-Classes/Class-Declarations/#AddMul-_LPAR_in-Class-Abbreviations_RPAR_":
       {"display": "AddMul",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Class Declarations",
         "Class Abbreviations",
         "Class Abbreviations"]}},
      "address": "/Type-Classes/Class-Declarations/"}],
    "AddExpr.reprPrec (in Infix Syntax)":
    [{"id": "AddExpr___reprPrec-_LPAR_in-Infix-Syntax_RPAR_",
      "data":
      {"/Interacting-with-Lean/#AddExpr___reprPrec-_LPAR_in-Infix-Syntax_RPAR_":
       {"display": "AddExpr.reprPrec",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "How To Write a  Repr  Instance",
         "Infix Syntax"]}},
      "address": "/Interacting-with-Lean/"}],
    "AddExpr.nat (in Infix Syntax)":
    [{"id": "AddExpr___nat-_LPAR_in-Infix-Syntax_RPAR_",
      "data":
      {"/Interacting-with-Lean/#AddExpr___nat-_LPAR_in-Infix-Syntax_RPAR_":
       {"display": "nat",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "How To Write a  Repr  Instance",
         "Infix Syntax"]}},
      "address": "/Interacting-with-Lean/"}],
    "AddExpr.add (in Infix Syntax)":
    [{"id": "AddExpr___add-_LPAR_in-Infix-Syntax_RPAR_",
      "data":
      {"/Interacting-with-Lean/#AddExpr___add-_LPAR_in-Infix-Syntax_RPAR_":
       {"display": "add",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "How To Write a  Repr  Instance",
         "Infix Syntax"]}},
      "address": "/Interacting-with-Lean/"}],
    "AddExpr (in Infix Syntax)":
    [{"id": "AddExpr-_LPAR_in-Infix-Syntax_RPAR_",
      "data":
      {"/Interacting-with-Lean/#AddExpr-_LPAR_in-Infix-Syntax_RPAR_":
       {"display": "AddExpr",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "How To Write a  Repr  Instance",
         "Infix Syntax"]}},
      "address": "/Interacting-with-Lean/"}],
    "AcademicWork.discipline (in Structure type inheritance with overlapping fields)":
    [{"id":
      "AcademicWork___discipline-_LPAR_in-Structure-type-inheritance-with-overlapping-fields_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#AcademicWork___discipline-_LPAR_in-Structure-type-inheritance-with-overlapping-fields_RPAR_":
       {"display": "discipline",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "Structure type inheritance with overlapping fields"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "AcademicWork.author (in Structure type inheritance with overlapping fields)":
    [{"id":
      "AcademicWork___author-_LPAR_in-Structure-type-inheritance-with-overlapping-fields_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#AcademicWork___author-_LPAR_in-Structure-type-inheritance-with-overlapping-fields_RPAR_":
       {"display": "author",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "Structure type inheritance with overlapping fields"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "AcademicWork (in Structure type inheritance with overlapping fields)":
    [{"id":
      "AcademicWork-_LPAR_in-Structure-type-inheritance-with-overlapping-fields_RPAR_",
      "data":
      {"/The-Type-System/Inductive-Types/#AcademicWork-_LPAR_in-Structure-type-inheritance-with-overlapping-fields_RPAR_":
       {"display": "AcademicWork",
        "context":
        ["The Lean Language Reference",
         "The Type System",
         "Inductive Types",
         "Structure Declarations",
         "Structure Inheritance",
         "Structure type inheritance with overlapping fields"]}},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ABC.toNat (in Atomic Types and  Repr)":
    [{"id": "ABC___toNat-_LPAR_in-Atomic-Types-and--Repr_RPAR_",
      "data":
      {"/Interacting-with-Lean/#ABC___toNat-_LPAR_in-Atomic-Types-and--Repr_RPAR_":
       {"display": "ABC.toNat",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "Atomic Types",
         "Atomic Types and  Repr"]}},
      "address": "/Interacting-with-Lean/"}],
    "ABC.c (in Atomic Types and  Repr)":
    [{"id": "ABC___c-_LPAR_in-Atomic-Types-and--Repr_RPAR_",
      "data":
      {"/Interacting-with-Lean/#ABC___c-_LPAR_in-Atomic-Types-and--Repr_RPAR_":
       {"display": "c",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "Atomic Types",
         "Atomic Types and  Repr"]}},
      "address": "/Interacting-with-Lean/"}],
    "ABC.b (in Atomic Types and  Repr)":
    [{"id": "ABC___b-_LPAR_in-Atomic-Types-and--Repr_RPAR_",
      "data":
      {"/Interacting-with-Lean/#ABC___b-_LPAR_in-Atomic-Types-and--Repr_RPAR_":
       {"display": "b",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "Atomic Types",
         "Atomic Types and  Repr"]}},
      "address": "/Interacting-with-Lean/"}],
    "ABC.a (in Atomic Types and  Repr)":
    [{"id": "ABC___a-_LPAR_in-Atomic-Types-and--Repr_RPAR_",
      "data":
      {"/Interacting-with-Lean/#ABC___a-_LPAR_in-Atomic-Types-and--Repr_RPAR_":
       {"display": "a",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "Atomic Types",
         "Atomic Types and  Repr"]}},
      "address": "/Interacting-with-Lean/"}],
    "ABC (in Atomic Types and  Repr)":
    [{"id": "ABC-_LPAR_in-Atomic-Types-and--Repr_RPAR_",
      "data":
      {"/Interacting-with-Lean/#ABC-_LPAR_in-Atomic-Types-and--Repr_RPAR_":
       {"display": "ABC",
        "context":
        ["The Lean Language Reference",
         "Interacting with Lean",
         "Formatted Output",
         "Repr",
         "Atomic Types",
         "Atomic Types and  Repr"]}},
      "address": "/Interacting-with-Lean/"}],
    "A.y (in Longer Identifier Prefixes Take Precedence)":
    [{"id": "A___y-_LPAR_in-Longer-Identifier-Prefixes-Take-Precedence_RPAR_",
      "data":
      {"/Terms/Identifiers/#A___y-_LPAR_in-Longer-Identifier-Prefixes-Take-Precedence_RPAR_":
       {"display": "y",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Identifiers",
         "Longer Identifier Prefixes Take Precedence"]}},
      "address": "/Terms/Identifiers/"}],
    "A.x (in Protected constant name without namespace prefix)":
    [{"id":
      "A___x-_LPAR_in-Protected-constant-name-without-namespace-prefix_RPAR_",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#A___x-_LPAR_in-Protected-constant-name-without-namespace-prefix_RPAR_-next-next":
       {"display": "A.x",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Protected constant name without namespace prefix"]},
       "/Error-Explanations/lean___unknownIdentifier/#A___x-_LPAR_in-Protected-constant-name-without-namespace-prefix_RPAR_-next":
       {"display": "A.x",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Protected constant name without namespace prefix"]},
       "/Error-Explanations/lean___unknownIdentifier/#A___x-_LPAR_in-Protected-constant-name-without-namespace-prefix_RPAR_":
       {"display": "A.x",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Protected constant name without namespace prefix"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"},
     {"id":
      "A___x-_LPAR_in-Protected-constant-name-without-namespace-prefix_RPAR_-next-next",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#A___x-_LPAR_in-Protected-constant-name-without-namespace-prefix_RPAR_-next-next":
       {"display": "A.x",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Protected constant name without namespace prefix"]},
       "/Error-Explanations/lean___unknownIdentifier/#A___x-_LPAR_in-Protected-constant-name-without-namespace-prefix_RPAR_-next":
       {"display": "A.x",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Protected constant name without namespace prefix"]},
       "/Error-Explanations/lean___unknownIdentifier/#A___x-_LPAR_in-Protected-constant-name-without-namespace-prefix_RPAR_":
       {"display": "A.x",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Protected constant name without namespace prefix"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"},
     {"id":
      "A___x-_LPAR_in-Protected-constant-name-without-namespace-prefix_RPAR_-next",
      "data":
      {"/Error-Explanations/lean___unknownIdentifier/#A___x-_LPAR_in-Protected-constant-name-without-namespace-prefix_RPAR_-next-next":
       {"display": "A.x",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Protected constant name without namespace prefix"]},
       "/Error-Explanations/lean___unknownIdentifier/#A___x-_LPAR_in-Protected-constant-name-without-namespace-prefix_RPAR_-next":
       {"display": "A.x",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Protected constant name without namespace prefix"]},
       "/Error-Explanations/lean___unknownIdentifier/#A___x-_LPAR_in-Protected-constant-name-without-namespace-prefix_RPAR_":
       {"display": "A.x",
        "context":
        ["The Lean Language Reference",
         "Error Explanations",
         "lean.unknownIdentifier",
         "Examples",
         "Protected constant name without namespace prefix"]}},
      "address": "/Error-Explanations/lean___unknownIdentifier/"}],
    "A.x (in Longer Prefixes of Current Namespace Take Precedence)":
    [{"id":
      "A___x-_LPAR_in-Longer-Prefixes-of-Current-Namespace-Take-Precedence_RPAR_",
      "data":
      {"/Terms/Identifiers/#A___x-_LPAR_in-Longer-Prefixes-of-Current-Namespace-Take-Precedence_RPAR_":
       {"display": "x",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Identifiers",
         "Longer Prefixes of Current Namespace Take Precedence"]}},
      "address": "/Terms/Identifiers/"}],
    "A.x (in Current Namespace Contents Take Precedence Over Opened Namespaces)":
    [{"id":
      "A___x-_LPAR_in-Current-Namespace-Contents-Take-Precedence-Over-Opened-Namespaces_RPAR_",
      "data":
      {"/Terms/Identifiers/#A___x-_LPAR_in-Current-Namespace-Contents-Take-Precedence-Over-Opened-Namespaces_RPAR_":
       {"display": "x",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Identifiers",
         "Current Namespace Contents Take Precedence Over Opened Namespaces"]}},
      "address": "/Terms/Identifiers/"}],
    "A.x (in Ambiguous Identifiers)":
    [{"id": "A___x-_LPAR_in-Ambiguous-Identifiers_RPAR_",
      "data":
      {"/Terms/Identifiers/#A___x-_LPAR_in-Ambiguous-Identifiers_RPAR_":
       {"display": "A.x",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Identifiers",
         "Ambiguous Identifiers"]}},
      "address": "/Terms/Identifiers/"}],
    "A.a1 (in Opening Nested Namespaces)":
    [{"id": "A___a1-_LPAR_in-Opening-Nested-Namespaces_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#A___a1-_LPAR_in-Opening-Nested-Namespaces_RPAR_":
       {"display": "a1",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Opening Nested Namespaces"]}},
      "address": "/Namespaces-and-Sections/"}],
    "A.B.a2 (in Opening Nested Namespaces)":
    [{"id": "A___B___a2-_LPAR_in-Opening-Nested-Namespaces_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#A___B___a2-_LPAR_in-Opening-Nested-Namespaces_RPAR_":
       {"display": "a2",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Opening Nested Namespaces"]}},
      "address": "/Namespaces-and-Sections/"}],
    "A.B.C.x (in Longer Prefixes of Current Namespace Take Precedence)":
    [{"id":
      "A___B___C___x-_LPAR_in-Longer-Prefixes-of-Current-Namespace-Take-Precedence_RPAR_",
      "data":
      {"/Terms/Identifiers/#A___B___C___x-_LPAR_in-Longer-Prefixes-of-Current-Namespace-Take-Precedence_RPAR_":
       {"display": "x",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Identifiers",
         "Longer Prefixes of Current Namespace Take Precedence"]}},
      "address": "/Terms/Identifiers/"}],
    "A.B.C.a3 (in Opening Nested Namespaces)":
    [{"id": "A___B___C___a3-_LPAR_in-Opening-Nested-Namespaces_RPAR_",
      "data":
      {"/Namespaces-and-Sections/#A___B___C___a3-_LPAR_in-Opening-Nested-Namespaces_RPAR_":
       {"display": "a3",
        "context":
        ["The Lean Language Reference",
         "Namespaces and Sections",
         "Namespaces",
         "Namespaces and Section Scopes",
         "Opening Nested Namespaces"]}},
      "address": "/Namespaces-and-Sections/"}],
    "A (in Longer Identifier Prefixes Take Precedence)":
    [{"id": "A-_LPAR_in-Longer-Identifier-Prefixes-Take-Precedence_RPAR_",
      "data":
      {"/Terms/Identifiers/#A-_LPAR_in-Longer-Identifier-Prefixes-Take-Precedence_RPAR_":
       {"display": "A",
        "context":
        ["The Lean Language Reference",
         "Terms",
         "Identifiers",
         "Longer Identifier Prefixes Take Precedence"]}},
      "address": "/Terms/Identifiers/"}],
    "A (in Deriving Multiple Classes)":
    [{"id": "A-_LPAR_in-Deriving-Multiple-Classes_RPAR_",
      "data":
      {"/Type-Classes/Deriving-Instances/#A-_LPAR_in-Deriving-Multiple-Classes_RPAR_":
       {"display": "A",
        "context":
        ["The Lean Language Reference",
         "Type Classes",
         "Deriving Instances",
         "Deriving Multiple Classes"]}},
      "address": "/Type-Classes/Deriving-Instances/"}]}},
  "Verso.Genre.Manual.doc.tech":
  {"title": "Terminology",
   "description": "Terminology",
   "contents":
   {"ι reduction":
    [{"id": "--tech-term-___-reduction",
      "data": {"term": "ι-reduction"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ι":
    [{"id": "--tech-term-___-next-next",
      "data": {"term": "ι"},
      "address": "/The-Type-System/"}],
    "η equivalence":
    [{"id": "--tech-term-___-equivalence",
      "data": {"term": "η-equivalence"},
      "address": "/The-Type-System/"}],
    "ζ":
    [{"id": "--tech-term-___-next-next-next",
      "data": {"term": "ζ"},
      "address": "/The-Type-System/"}],
    "δ":
    [{"id": "--tech-term-___-next",
      "data": {"term": "δ"},
      "address": "/The-Type-System/"}],
    "β":
    [{"id": "--tech-term-___",
      "data": {"term": "β"},
      "address": "/The-Type-System/"}],
    "Σ type":
    [{"id": "--tech-term-___-types",
      "data": {"term": "Σ-types"},
      "address": "/Basic-Types/Tuples/"}],
    "workspace":
    [{"id": "--tech-term-workspace",
      "data": {"term": "workspace"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "witnes":
    [{"id": "--tech-term-witness",
      "data": {"term": "witness"},
      "address": "/Basic-Propositions/Quantifiers/"}],
    "whitespace":
    [{"id": "--tech-term-whitespace",
      "data": {"term": "whitespace"},
      "address": "/Source-Files-and-Modules/"}],
    "well typed":
    [{"id": "--tech-term-well-typed",
      "data": {"term": "well-typed"},
      "address": "/The-Type-System/"}],
    "well founded relation":
    [{"id": "--tech-term-well-founded-relation",
      "data": {"term": "well-founded relation"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "well founded recursion":
    [{"id": "--tech-term-well-founded-recursion",
      "data": {"term": "well-founded recursion"},
      "address": "/Elaboration-and-Compilation/"},
     {"id": "--tech-term-well-founded-recursion-next",
      "data": {"term": "well-founded recursion"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "upward propagation":
    [{"id": "--tech-term-Upward-propagation",
      "data": {"term": "Upward propagation"},
      "address": "/The--grind--tactic/Constraint-Propagation/"}],
    "universe polymorphism":
    [{"id": "--tech-term-universe-polymorphism",
      "data": {"term": "universe polymorphism"},
      "address": "/The-Type-System/Universes/"}],
    "universe parameter":
    [{"id": "--tech-term-universe-parameters",
      "data": {"term": "universe parameters"},
      "address": "/The-Type-System/Universes/"}],
    "universe lifting":
    [{"id": "--tech-term-universe-lifting",
      "data": {"term": "universe lifting"},
      "address": "/The-Type-System/Universes/"}],
    "universe level":
    [{"id": "--tech-term-level",
      "data": {"term": "level"},
      "address": "/The-Type-System/Universes/"}],
    "universe":
    [{"id": "--tech-term-universes",
      "data": {"term": "universes"},
      "address": "/The-Type-System/Universes/"}],
    "unit like type":
    [{"id": "--tech-term-Unit-like-types",
      "data": {"term": "Unit-like types"},
      "address": "/Basic-Types/The-Unit-Type/"}],
    "unexpander":
    [{"id": "--tech-term-unexpanders",
      "data": {"term": "unexpanders"},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "unboxed":
    [{"id": "--tech-term-Unboxed",
      "data": {"term": "Unboxed"},
      "address": "/Run-Time-Code/Boxing/"}],
    "type constructor":
    [{"id": "--tech-term-type-constructors",
      "data": {"term": "type constructors"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "type clas":
    [{"id": "--tech-term-type-class",
      "data": {"term": "type class"},
      "address": "/Type-Classes/"}],
    "type ascription":
    [{"id": "--tech-term-Type-ascriptions",
      "data": {"term": "Type ascriptions"},
      "address": "/Terms/Type-Ascription/"}],
    "transitive dependency":
    [{"id": "--tech-term-transitive-dependencies",
      "data": {"term": "transitive dependencies"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "trace file":
    [{"id": "--tech-term-trace-files",
      "data": {"term": "trace files"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "trace":
    [{"id": "--tech-term-traces",
      "data": {"term": "traces"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "total":
    [{"id": "--tech-term-total",
      "data": {"term": "total"},
      "address": "/The-Type-System/Functions/"}],
    "toolchain override":
    [{"id": "--tech-term-toolchain-override",
      "data": {"term": "toolchain override"},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "toolchain file":
    [{"id": "--tech-term-toolchain-file",
      "data": {"term": "toolchain file"},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "toolchain":
    [{"id": "--tech-term-toolchain",
      "data": {"term": "toolchain"},
      "address": "/Build-Tools-and-Distribution/"}],
    "token antiquotation":
    [{"id": "--tech-term-token-antiquotations",
      "data": {"term": "token antiquotations"},
      "address": "/Notations-and-Macros/Macros/"}],
    "token":
    [{"id": "--tech-term-tokens",
      "data": {"term": "tokens"},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "thunk":
    [{"id": "--tech-term-thunk",
      "data": {"term": "thunk"},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "theorem":
    [{"id": "--tech-term-theorems",
      "data": {"term": "theorems"},
      "address": "/Definitions/Theorems/"}],
    "test driver":
    [{"id": "--tech-term-test-driver",
      "data": {"term": "test driver"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "term elaborator":
    [{"id": "--tech-term-Term-elaborators",
      "data": {"term": "Term elaborators"},
      "address": "/Notations-and-Macros/Elaborators/"}],
    "term":
    [{"id": "--tech-term-Terms",
      "data": {"term": "Terms"},
      "address": "/The-Type-System/"},
     {"id": "--tech-term-Terms-next",
      "data": {"term": "Terms"},
      "address": "/Terms/"}],
    "technical terminology":
    [{"id": "--tech-term-Technical-terminology",
      "data": {"term": "Technical terminology"},
      "address": "/Introduction/"}],
    "task":
    [{"id": "--tech-term-Tasks",
      "data": {"term": "Tasks"},
      "address": "/IO/Tasks-and-Threads/"}],
    "target":
    [{"id": "--tech-term-target",
      "data": {"term": "target"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "tail position":
    [{"id": "--tech-term-tail-position",
      "data": {"term": "tail position"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "synthetic hole":
    [{"id": "--tech-term-synthetic-holes",
      "data": {"term": "synthetic holes"},
      "address": "/Terms/Holes/"}],
    "synthetic":
    [{"id": "--tech-term-Synthetic",
      "data": {"term": "Synthetic"},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "synthesi":
    [{"id": "--tech-term-synthesizes",
      "data": {"term": "synthesizes"},
      "address": "/Type-Classes/"}],
    "syntax rule":
    [{"id": "--tech-term-syntax-rules",
      "data": {"term": "syntax rules"},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "syntax kind":
    [{"id": "--tech-term-syntax-kind",
      "data": {"term": "syntax kind"},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "syntax category":
    [{"id": "--tech-term-syntax-categories",
      "data": {"term": "syntax categories"},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "sum type":
    [{"id": "--tech-term-Sum-types",
      "data": {"term": "Sum types"},
      "address": "/Basic-Types/Sum-Types/"}],
    "subsingleton":
    [{"id": "--tech-term-subsingleton",
      "data": {"term": "subsingleton"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "subgoal":
    [{"id": "--tech-term-subgoals",
      "data": {"term": "subgoals"},
      "address": "/Tactic-Proofs/"}],
    "structure instance":
    [{"id": "--tech-term-structure-instance",
      "data": {"term": "structure instance"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "structure":
    [{"id": "--tech-term-Structures",
      "data": {"term": "Structures"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "strictly positive":
    [{"id": "--tech-term-strictly-positive",
      "data": {"term": "strictly positive"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "strict sub term":
    [{"id": "--tech-term-strict-sub-term",
      "data": {"term": "strict sub-term"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "strict implicit":
    [{"id": "--tech-term-Strict-implicit",
      "data": {"term": "Strict implicit"},
      "address": "/Terms/Functions/"}],
    "stream":
    [{"id": "--tech-term-Streams",
      "data": {"term": "Streams"},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "state monad":
    [{"id": "--tech-term-State-monads",
      "data": {"term": "State monads"},
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "standard output":
    [{"id": "--tech-term-standard-output",
      "data": {"term": "standard output"},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "standard input":
    [{"id": "--tech-term-standard-input",
      "data": {"term": "standard input"},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "standard error":
    [{"id": "--tech-term-standard-error",
      "data": {"term": "standard error"},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "splice suffix":
    [{"id": "--tech-term-splice-suffix",
      "data": {"term": "splice suffix"},
      "address": "/Notations-and-Macros/Macros/"}],
    "splice":
    [{"id": "--tech-term-splices",
      "data": {"term": "splices"},
      "address": "/Notations-and-Macros/Macros/"}],
    "source information":
    [{"id": "--tech-term-source-information",
      "data": {"term": "source information"},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "source directory":
    [{"id": "--tech-term-source-directory",
      "data": {"term": "source directory"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "sort":
    [{"id": "--tech-term-sorts",
      "data": {"term": "sorts"},
      "address": "/The-Type-System/Universes/"}],
    "simproc":
    [{"id": "--tech-term-simprocs",
      "data": {"term": "simprocs"},
      "address": "/The-Simplifier/Rewrite-Rules/"}],
    "simp set":
    [{"id": "--tech-term-simp-set",
      "data": {"term": "simp set"},
      "address": "/The-Simplifier/Simp-sets/"}],
    "simp normal form":
    [{"id": "--tech-term-simp-normal-form",
      "data": {"term": "simp normal form"},
      "address": "/The-Simplifier/Simp-Normal-Forms/"}],
    "signature":
    [{"id": "--tech-term-signature",
      "data": {"term": "signature"},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "severity":
    [{"id": "--tech-term-severity",
      "data": {"term": "severity"},
      "address": "/Interacting-with-Lean/"}],
    "setoid":
    [{"id": "--tech-term-setoid",
      "data": {"term": "setoid"},
      "address": "/The-Type-System/Quotients/"}],
    "semireducible":
    [{"id": "--tech-term-Semireducible",
      "data": {"term": "Semireducible"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "semi output parameter":
    [{"id": "--tech-term-Semi-output-parameters",
      "data": {"term": "Semi-output parameters"},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "section variable":
    [{"id": "--tech-term-Section-variables",
      "data": {"term": "Section variables"},
      "address": "/Namespaces-and-Sections/"}],
    "section scope":
    [{"id": "--tech-term-section-scope",
      "data": {"term": "section scope"},
      "address": "/Namespaces-and-Sections/"}],
    "section":
    [{"id": "--tech-term-section",
      "data": {"term": "section"},
      "address": "/Namespaces-and-Sections/"}],
    "scientific literal":
    [{"id": "--tech-term-scientific-literals",
      "data": {"term": "scientific literals"},
      "address": "/Terms/Literals/"}],
    "round":
    [{"id": "--tech-term-round",
      "data": {"term": "round"},
      "address": "/The--grind--tactic/E___matching/"}],
    "root package":
    [{"id": "--tech-term-root-package",
      "data": {"term": "root package"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "root directory":
    [{"id": "--tech-term-root-directory",
      "data": {"term": "root directory"},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "right hand side":
    [{"id": "--tech-term-right-hand-side",
      "data": {"term": "right-hand side"},
      "address": "/Terms/Pattern-Matching/"}],
    "right fold":
    [{"id": "--tech-term-Right-folds",
      "data": {"term": "Right folds"},
      "address": "/Basic-Types/Linked-Lists/"}],
    "right associative":
    [{"id": "--tech-term-Right-associative",
      "data": {"term": "Right-associative"},
      "address": "/Notations-and-Macros/Custom-Operators/"}],
    "resolve":
    [{"id": "--tech-term-resolving-next",
      "data": {"term": "resolving"},
      "address": "/IO/Tasks-and-Threads/"},
     {"id": "--tech-term-resolving",
      "data": {"term": "resolving"},
      "address": "/Terms/Identifiers/"},
     {"id": "--tech-term-resolve",
      "data": {"term": "resolving"},
      "address": "/IO/Tasks-and-Threads/"}],
    "require":
    [{"id": "--tech-term-require",
      "data": {"term": "require"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "repl":
    [{"id": "--tech-term-REPL",
      "data": {"term": "REPL"},
      "address": "/Interacting-with-Lean/"}],
    "relevant":
    [{"id": "--tech-term-relevant",
      "data": {"term": "relevant"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "reference count":
    [{"id": "--tech-term-reference-counting",
      "data": {"term": "reference counting"},
      "address": "/Run-Time-Code/Reference-Counting/"}],
    "reduction":
    [{"id": "--tech-term-reduction",
      "data": {"term": "reduction"},
      "address": "/The-Type-System/"}],
    "reducible":
    [{"id": "--tech-term-Reducible",
      "data": {"term": "Reducible"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "reducibility":
    [{"id": "--tech-term-reducibility",
      "data": {"term": "reducibility"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "recursor":
    [{"id": "--tech-term-recursor",
      "data": {"term": "recursor"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "realizing":
    [{"id": "--tech-term-realizing",
      "data": {"term": "realizing"},
      "address": "/Terms/Identifiers/"}],
    "reader monad":
    [{"id": "--tech-term-Reader-monads",
      "data": {"term": "Reader monads"},
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "raw string literal":
    [{"id": "--tech-term-raw-string-literals",
      "data": {"term": "raw string literals"},
      "address": "/Basic-Types/Strings/"}],
    "raw identifier":
    [{"id": "--tech-term-raw-identifier",
      "data": {"term": "raw identifier"},
      "address": "/Source-Files-and-Modules/"}],
    "raw":
    [{"id": "--tech-term-raw",
      "data": {"term": "raw"},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "quotient type":
    [{"id": "--tech-term-Quotient-types",
      "data": {"term": "Quotient types"},
      "address": "/The-Type-System/Quotients/"}],
    "quotation":
    [{"id": "--tech-term-Quotation",
      "data": {"term": "Quotation"},
      "address": "/Notations-and-Macros/Macros/"}],
    "quasiquotation":
    [{"id": "--tech-term-Quasiquotation",
      "data": {"term": "Quasiquotation"},
      "address": "/Notations-and-Macros/Macros/"}],
    "public scope":
    [{"id": "--tech-term-public-scope",
      "data": {"term": "public scope"},
      "address": "/The-Module-System/Visibility/"}],
    "protected":
    [{"id": "--tech-term-protected",
      "data": {"term": "protected"},
      "address": "/Namespaces-and-Sections/"}],
    "propositional extensionality":
    [{"id": "--tech-term-Extensionality",
      "data": {"term": "Extensionality"},
      "address": "/The-Type-System/Propositions/"}],
    "propositional equality":
    [{"id": "--tech-term-Propositional-equality",
      "data": {"term": "Propositional equality"},
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "proposition":
    [{"id": "--tech-term-Propositions",
      "data": {"term": "Propositions"},
      "address": "/The-Type-System/Propositions/"}],
    "proof term":
    [{"id": "--tech-term-proof-terms",
      "data": {"term": "proof terms"},
      "address": "/Tactic-Proofs/"}],
    "proof state":
    [{"id": "--tech-term-proof-state",
      "data": {"term": "proof state"},
      "address": "/Tactic-Proofs/"}],
    "proof irrelevance":
    [{"id": "--tech-term-proof-irrelevance",
      "data": {"term": "proof irrelevance"},
      "address": "/The-Type-System/"}],
    "projection function":
    [{"id": "--tech-term-projection-function",
      "data": {"term": "projection function"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "private scope":
    [{"id": "--tech-term-private-scope",
      "data": {"term": "private scope"},
      "address": "/The-Module-System/Visibility/"}],
    "private":
    [{"id": "--tech-term-private",
      "data": {"term": "private"},
      "address": "/Definitions/Modifiers/"}],
    "priority":
    [{"id": "--tech-term-priority",
      "data": {"term": "priority"},
      "address": "/IO/Tasks-and-Threads/"},
     {"id": "--tech-term-priorities",
      "data": {"term": "priority"},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "prelude":
    [{"id": "--tech-term-prelude",
      "data": {"term": "prelude"},
      "address": "/Source-Files-and-Modules/"}],
    "predicative":
    [{"id": "--tech-term-predicative",
      "data": {"term": "predicative"},
      "address": "/The-Type-System/Universes/"}],
    "precedence":
    [{"id": "--tech-term-precedence",
      "data": {"term": "precedence"},
      "address": "/Notations-and-Macros/Custom-Operators/"}],
    "pre resolved identifier":
    [{"id": "--tech-term-pre-resolved-identifiers",
      "data": {"term": "pre-resolved identifiers"},
      "address": "/Notations-and-Macros/Macros/"}],
    "pre definition":
    [{"id": "--tech-term-pre-definition",
      "data": {"term": "pre-definition"},
      "address": "/Elaboration-and-Compilation/"}],
    "placeholder term":
    [{"id": "--tech-term-placeholder-term",
      "data": {"term": "placeholder term"},
      "address": "/Terms/Holes/"}],
    "pattern variable":
    [{"id": "--tech-term-Pattern-variables",
      "data": {"term": "Pattern variables"},
      "address": "/Terms/Pattern-Matching/"}],
    "pattern matching":
    [{"id": "--tech-term-Pattern-matching",
      "data": {"term": "Pattern matching"},
      "address": "/Terms/Pattern-Matching/"}],
    "pattern":
    [{"id": "--tech-term-patterns",
      "data": {"term": "patterns"},
      "address": "/Terms/Pattern-Matching/"}],
    "path dependency":
    [{"id": "--tech-term-path-dependencies",
      "data": {"term": "path dependencies"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "path":
    [{"id": "--tech-term-paths",
      "data": {"term": "paths"},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "partial fixpoint":
    [{"id": "--tech-term-partial-fixpoint",
      "data": {"term": "partial fixpoint"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "partial correctness theorem":
    [{"id": "--tech-term-partial-correctness-theorem",
      "data": {"term": "partial correctness theorem"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "parent projection":
    [{"id": "--tech-term-parent-projections",
      "data": {"term": "parent projections"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "parameter":
    [{"id": "--tech-term-parameters",
      "data": {"term": "parameters"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "package directory":
    [{"id": "--tech-term-package-directory",
      "data": {"term": "package directory"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "package configuration":
    [{"id": "--tech-term-package-configuration",
      "data": {"term": "package configuration"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "package":
    [{"id": "--tech-term-package",
      "data": {"term": "package"},
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id": "--tech-term-packages",
      "data": {"term": "package"},
      "address": "/Source-Files-and-Modules/"}],
    "owned":
    [{"id": "--tech-term-owned",
      "data": {"term": "owned"},
      "address": "/Run-Time-Code/Foreign-Function-Interface/"}],
    "output parameter":
    [{"id": "--tech-term-output-parameter",
      "data": {"term": "output parameter"},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "original":
    [{"id": "--tech-term-Original",
      "data": {"term": "Original"},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "origin":
    [{"id": "--tech-term-origin",
      "data": {"term": "origin"},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "optional parameter":
    [{"id": "--tech-term-optional-parameters",
      "data": {"term": "optional parameters"},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "opened namespace":
    [{"id": "--tech-term-opened-namespaces",
      "data": {"term": "opened namespaces"},
      "address": "/Namespaces-and-Sections/"}],
    "opened":
    [{"id": "--tech-term-opened",
      "data": {"term": "opened"},
      "address": "/Namespaces-and-Sections/"}],
    "opaque constant":
    [{"id": "--tech-term-Opaque-constants",
      "data": {"term": "Opaque constants"},
      "address": "/Definitions/Definitions/"}],
    "olean":
    [{"id": "--tech-term-___olean-file-next",
      "data": {"term": ".olean file"},
      "address": "/Source-Files-and-Modules/"}],
    "notation item":
    [{"id": "--tech-term-notation-items-next",
      "data": {"term": "notation items"},
      "address": "/Notations-and-Macros/Notations/"},
     {"id": "--tech-term-notation-items",
      "data": {"term": "notation items"},
      "address": "/Notations-and-Macros/Notations/"}],
    "notation":
    [{"id": "--tech-term-notation",
      "data": {"term": "notation"},
      "address": "/Notations-and-Macros/Notations/"}],
    "normal form":
    [{"id": "--tech-term-normal-form",
      "data": {"term": "normal form"},
      "address": "/The-Type-System/"}],
    "non terminal simp":
    [{"id": "--tech-term-non-terminal-simps",
      "data": {"term": "non-terminal simps"},
      "address": "/The-Simplifier/Terminal-vs-Non-Terminal-Positions/"}],
    "non dependent":
    [{"id": "--tech-term-Non-Dependent",
      "data": {"term": "Non-Dependent"},
      "address": "/The-Type-System/Functions/"}],
    "non associative":
    [{"id": "--tech-term-Non-associative",
      "data": {"term": "Non-associative"},
      "address": "/Notations-and-Macros/Custom-Operators/"}],
    "node":
    [{"id": "--tech-term-Nodes",
      "data": {"term": "Nodes"},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "nested inductive type":
    [{"id": "--tech-term-Nested-inductive-types",
      "data": {"term": "Nested inductive types"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "natural number":
    [{"id": "--tech-term-natural-numbers",
      "data": {"term": "natural numbers"},
      "address": "/Basic-Types/Natural-Numbers/"}],
    "namespace":
    [{"id": "--tech-term-namespaces",
      "data": {"term": "namespaces"},
      "address": "/Namespaces-and-Sections/"}],
    "named pattern":
    [{"id": "--tech-term-Named-patterns",
      "data": {"term": "Named patterns"},
      "address": "/Terms/Pattern-Matching/"}],
    "named argument":
    [{"id": "--tech-term-named-arguments",
      "data": {"term": "named arguments"},
      "address": "/Terms/Function-Application/"}],
    "mutually recursive":
    [{"id": "--tech-term-mutually-recursive",
      "data": {"term": "mutually recursive"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "mutual block":
    [{"id": "--tech-term-mutual-block",
      "data": {"term": "mutual block"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "multi pattern":
    [{"id": "--tech-term-multi-pattern",
      "data": {"term": "multi-pattern"},
      "address": "/The--grind--tactic/E___matching/"}],
    "motive":
    [{"id": "--tech-term-motive",
      "data": {"term": "motive"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "morally canonical":
    [{"id": "--tech-term-morally-canonical",
      "data": {"term": "morally canonical"},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "monad transformer":
    [{"id": "--tech-term-monad-transformer",
      "data": {"term": "monad transformer"},
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "monad law":
    [{"id": "--tech-term-monad-laws",
      "data": {"term": "monad laws"},
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "monad":
    [{"id": "--tech-term-Monad",
      "data": {"term": "Monad"},
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "modus ponen":
    [{"id": "--tech-term-modus-ponens",
      "data": {"term": "modus ponens"},
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "module root":
    [{"id": "--tech-term-module-roots",
      "data": {"term": "module roots"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "module header":
    [{"id": "--tech-term-module-header",
      "data": {"term": "module header"},
      "address": "/Source-Files-and-Modules/"}],
    "module":
    [{"id": "--tech-term-module",
      "data": {"term": "module"},
      "address": "/Source-Files-and-Modules/"}],
    "modifier":
    [{"id": "--tech-term-modifiers",
      "data": {"term": "modifiers"},
      "address": "/Definitions/Modifiers/"}],
    "model based theory combination":
    [{"id": "--tech-term-model-based-theory-combination",
      "data": {"term": "model-based theory combination"},
      "address": "/The--grind--tactic/Linear-Integer-Arithmetic/"}],
    "mixfix":
    [{"id": "--tech-term-mixfix",
      "data": {"term": "mixfix"},
      "address": "/Notations-and-Macros/Notations/"}],
    "minor premise":
    [{"id": "--tech-term-minor-premise",
      "data": {"term": "minor premise"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "minimal":
    [{"id": "--tech-term-minimal",
      "data": {"term": "minimal"},
      "address": "/The--grind--tactic/E___matching/"}],
    "method":
    [{"id": "--tech-term-methods",
      "data": {"term": "methods"},
      "address": "/Type-Classes/"}],
    "metavariable":
    [{"id": "--tech-term-metavariables",
      "data": {"term": "metavariables"},
      "address": "/Tactic-Proofs/Reading-Proof-States/"}],
    "message log":
    [{"id": "--tech-term-message-log",
      "data": {"term": "message log"},
      "address": "/Interacting-with-Lean/"}],
    "measure":
    [{"id": "--tech-term-measure",
      "data": {"term": "measure"},
      "address": "/Elaboration-and-Compilation/"},
     {"id": "--tech-term-measure-next",
      "data": {"term": "measure"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "match discriminant":
    [{"id": "--tech-term-match-discriminants",
      "data": {"term": "match discriminants"},
      "address": "/Terms/Pattern-Matching/"}],
    "match alternative":
    [{"id": "--tech-term-match-alternatives",
      "data": {"term": "match alternatives"},
      "address": "/Terms/Pattern-Matching/"}],
    "map":
    [{"id": "--tech-term-map",
      "data": {"term": "map"},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "manifest":
    [{"id": "--tech-term-manifest",
      "data": {"term": "manifest"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "major premise":
    [{"id": "--tech-term-major-premise",
      "data": {"term": "major premise"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "main goal":
    [{"id": "--tech-term-main-goal",
      "data": {"term": "main goal"},
      "address": "/Tactic-Proofs/"}],
    "macro scope":
    [{"id": "--tech-term-macro-scopes",
      "data": {"term": "macro scopes"},
      "address": "/Notations-and-Macros/Macros/"}],
    "macro expansion":
    [{"id": "--tech-term-macro-expansion",
      "data": {"term": "macro expansion"},
      "address": "/Notations-and-Macros/Macros/"}],
    "macro":
    [{"id": "--tech-term-Macros",
      "data": {"term": "Macros"},
      "address": "/Notations-and-Macros/Macros/"},
     {"id": "--tech-term-macro",
      "data": {"term": "Macros"},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "log":
    [{"id": "--tech-term-log",
      "data": {"term": "log"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "local longest match rule":
    [{"id": "--tech-term-local-longest-match-rule",
      "data": {"term": "local longest-match rule"},
      "address": "/Notations-and-Macros/Custom-Operators/"}],
    "local instance":
    [{"id": "--tech-term-Local-instances",
      "data": {"term": "Local instances"},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "lint driver":
    [{"id": "--tech-term-lint-driver",
      "data": {"term": "lint driver"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "linearly":
    [{"id": "--tech-term-linearly",
      "data": {"term": "linearly"},
      "address": "/Basic-Types/Arrays/"}],
    "lift":
    [{"id": "--tech-term-lifting",
      "data": {"term": "lifting"},
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "library directory":
    [{"id": "--tech-term-library-directories",
      "data": {"term": "library directories"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "library":
    [{"id": "--tech-term-libraries",
      "data": {"term": "Libraries"},
      "address": "/Source-Files-and-Modules/"},
     {"id": "--tech-term-Libraries",
      "data": {"term": "Libraries"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "left fold":
    [{"id": "--tech-term-Left-folds",
      "data": {"term": "Left folds"},
      "address": "/Basic-Types/Linked-Lists/"}],
    "left associative":
    [{"id": "--tech-term-Left-associative",
      "data": {"term": "Left-associative"},
      "address": "/Notations-and-Macros/Custom-Operators/"}],
    "lazy evaluation":
    [{"id": "--tech-term-lazy-evaluation",
      "data": {"term": "lazy evaluation"},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "law":
    [{"id": "--tech-term-laws",
      "data": {"term": "laws"},
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "lake script":
    [{"id": "--tech-term-Lake-scripts",
      "data": {"term": "Lake scripts"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "lake home":
    [{"id": "--tech-term-Lake-home",
      "data": {"term": "Lake home"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "kleisli composition":
    [{"id": "--tech-term-Kleisli-composition",
      "data": {"term": "Kleisli composition"},
      "address": "/Functors___-Monads-and--do--Notation/API-Reference/"}],
    "kind":
    [{"id": "--tech-term-kind",
      "data": {"term": "kind"},
      "address": "/Elaboration-and-Compilation/"}],
    "kernel":
    [{"id": "--tech-term-kernel",
      "data": {"term": "kernel"},
      "address": "/Elaboration-and-Compilation/"}],
    "irrelevant":
    [{"id": "--tech-term-irrelevant",
      "data": {"term": "irrelevant"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "irreducible":
    [{"id": "--tech-term-Irreducible",
      "data": {"term": "Irreducible"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "interpolated string":
    [{"id": "--tech-term-interpolated-string",
      "data": {"term": "interpolated string"},
      "address": "/Basic-Types/Strings/"}],
    "intensional":
    [{"id": "--tech-term-intensional",
      "data": {"term": "intensional"},
      "address": "/The-Type-System/Functions/"}],
    "instance implicit":
    [{"id": "--tech-term-instance-implicit-next",
      "data": {"term": "instance-implicit"},
      "address": "/Type-Classes/"},
     {"id": "--tech-term-instance-implicit",
      "data": {"term": "instance-implicit"},
      "address": "/Terms/Functions/"}],
    "instance":
    [{"id": "--tech-term-instances",
      "data": {"term": "instances"},
      "address": "/Type-Classes/"}],
    "injection":
    [{"id": "--tech-term-injections",
      "data": {"term": "injections"},
      "address": "/Basic-Types/Sum-Types/"}],
    "initialize":
    [{"id": "--tech-term-initialized",
      "data": {"term": "initialized"},
      "address": "/Run-Time-Code/Foreign-Function-Interface/"}],
    "initialization":
    [{"id": "--tech-term-initialization",
      "data": {"term": "initialization"},
      "address": "/Elaboration-and-Compilation/"}],
    "initial target":
    [{"id": "--tech-term-initial-targets",
      "data": {"term": "initial targets"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "info tree":
    [{"id": "--tech-term-info-trees",
      "data": {"term": "info trees"},
      "address": "/Elaboration-and-Compilation/"}],
    "inductive type":
    [{"id": "--tech-term-Inductive-types",
      "data": {"term": "Inductive types"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "indexed family":
    [{"id": "--tech-term-indexed-families",
      "data": {"term": "indexed families"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "indexable":
    [{"id": "--tech-term-indexable",
      "data": {"term": "indexable"},
      "address": "/The--grind--tactic/E___matching/"}],
    "index":
    [{"id": "--tech-term-indices",
      "data": {"term": "indices"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "incremental build":
    [{"id": "--tech-term-incremental-build",
      "data": {"term": "incremental build"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "inaccessible pattern":
    [{"id": "--tech-term-Inaccessible-patterns",
      "data": {"term": "Inaccessible patterns"},
      "address": "/Terms/Pattern-Matching/"}],
    "inaccessible":
    [{"id": "--tech-term-inaccessible",
      "data": {"term": "inaccessible"},
      "address": "/Tactic-Proofs/Reading-Proof-States/"}],
    "impredicative":
    [{"id": "--tech-term-impredicative",
      "data": {"term": "impredicative"},
      "address": "/The-Type-System/Universes/"}],
    "import statement":
    [{"id": "--tech-term-import-statements",
      "data": {"term": "import statements"},
      "address": "/Source-Files-and-Modules/"}],
    "implicit":
    [{"id": "--tech-term-implicit",
      "data": {"term": "implicit"},
      "address": "/Terms/Functions/"}],
    "identifier component":
    [{"id": "--tech-term-Identifier-components",
      "data": {"term": "Identifier components"},
      "address": "/Source-Files-and-Modules/"}],
    "identifier capture":
    [{"id": "--tech-term-Identifier-capture",
      "data": {"term": "Identifier capture"},
      "address": "/Notations-and-Macros/Macros/"}],
    "identifier":
    [{"id": "--tech-term-Identifiers",
      "data": {"term": "Identifiers"},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "hygiene":
    [{"id": "--tech-term-hygienic",
      "data": {"term": "hygienic"},
      "address": "/Notations-and-Macros/Macros/"}],
    "hole":
    [{"id": "--tech-term-hole",
      "data": {"term": "hole"},
      "address": "/Terms/Holes/"}],
    "hierarchical identifier":
    [{"id": "--tech-term-hierarchical-identifiers",
      "data": {"term": "hierarchical identifiers"},
      "address": "/Source-Files-and-Modules/"}],
    "heterogeneous equality":
    [{"id": "--tech-term-Heterogeneous-equality",
      "data": {"term": "Heterogeneous equality"},
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "header":
    [{"id": "--tech-term-header",
      "data": {"term": "header"},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "guillemet":
    [{"id": "--tech-term-guillemets",
      "data": {"term": "guillemets"},
      "address": "/Source-Files-and-Modules/"}],
    "goal":
    [{"id": "--tech-term-goals",
      "data": {"term": "goals"},
      "address": "/Tactic-Proofs/"}],
    "global instance":
    [{"id": "--tech-term-Global-instances",
      "data": {"term": "Global instances"},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "glob":
    [{"id": "--tech-term-globs",
      "data": {"term": "globs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "git dependency":
    [{"id": "--tech-term-Git-dependencies",
      "data": {"term": "Git dependencies"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "generation":
    [{"id": "--tech-term-generation",
      "data": {"term": "generation"},
      "address": "/The--grind--tactic/E___matching/"}],
    "generalized field notation":
    [{"id": "--tech-term-generalized-field-notation",
      "data": {"term": "generalized field notation"},
      "address": "/Terms/Function-Application/"}],
    "gap":
    [{"id": "--tech-term-gaps",
      "data": {"term": "gaps"},
      "address": "/Basic-Types/Strings/"}],
    "gadget":
    [{"id": "--tech-term-gadgets",
      "data": {"term": "gadgets"},
      "address": "/Type-Classes/Class-Declarations/"}],
    "functor":
    [{"id": "--tech-term-Functor",
      "data": {"term": "Functor"},
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "function type":
    [{"id": "--tech-term-function-types",
      "data": {"term": "function types"},
      "address": "/The-Type-System/Functions/"}],
    "function abstraction":
    [{"id": "--tech-term-function-abstractions",
      "data": {"term": "function abstractions"},
      "address": "/The-Type-System/Functions/"}],
    "function":
    [{"id": "--tech-term-Functions",
      "data": {"term": "Functions"},
      "address": "/The-Type-System/Functions/"}],
    "forward rule":
    [{"id": "--tech-term-forward-rules",
      "data": {"term": "forward rules"},
      "address": "/The--grind--tactic/Constraint-Propagation/"}],
    "force":
    [{"id": "--tech-term-forcing",
      "data": {"term": "forcing"},
      "address": "/Basic-Types/Lazy-Computations/"}],
    "fixed prefix":
    [{"id": "--tech-term-fixed-prefix",
      "data": {"term": "fixed prefix"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "fixed parameter":
    [{"id": "--tech-term-fixed-parameter",
      "data": {"term": "fixed parameter"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "file handle":
    [{"id": "--tech-term-File-Handles",
      "data": {"term": "File Handles"},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "file":
    [{"id": "--tech-term-Files",
      "data": {"term": "Files"},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "field resolution order":
    [{"id": "--tech-term-field-resolution-order",
      "data": {"term": "field resolution order"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "field notation":
    [{"id": "--tech-term-field-notation",
      "data": {"term": "field notation"},
      "address": "/Terms/Function-Application/"}],
    "facet":
    [{"id": "--tech-term-facet",
      "data": {"term": "facet"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "external library":
    [{"id": "--tech-term-External-libraries",
      "data": {"term": "External libraries"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "extensional map":
    [{"id": "--tech-term-Extensional-maps",
      "data": {"term": "Extensional maps"},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "extension":
    [{"id": "--tech-term-extensions",
      "data": {"term": "extensions"},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "extended splice":
    [{"id": "--tech-term-extended-splices",
      "data": {"term": "extended splices"},
      "address": "/Notations-and-Macros/Macros/"}],
    "expression":
    [{"id": "--tech-term-expressions",
      "data": {"term": "expressions"},
      "address": "/The-Type-System/"}],
    "exporting":
    [{"id": "--tech-term-Exporting",
      "data": {"term": "Exporting"},
      "address": "/Namespaces-and-Sections/"}],
    "expected type's namespace":
    [{"id": "--tech-term-expected-type___s-namespace",
      "data": {"term": "expected type's namespace"},
      "address": "/Terms/Identifiers/"}],
    "expansion":
    [{"id": "--tech-term-expansion",
      "data": {"term": "expansion"},
      "address": "/Notations-and-Macros/Custom-Operators/"}],
    "executable":
    [{"id": "--tech-term-executables",
      "data": {"term": "Executables"},
      "address": "/Source-Files-and-Modules/"},
     {"id": "--tech-term-Executables",
      "data": {"term": "Executables"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "exception monad":
    [{"id": "--tech-term-Exception-monads",
      "data": {"term": "Exception monads"},
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "example":
    [{"id": "--tech-term-example",
      "data": {"term": "example"},
      "address": "/Definitions/Example-Declarations/"}],
    "erasing":
    [{"id": "--tech-term-erasing",
      "data": {"term": "erasing"},
      "address": "/Attributes/"}],
    "equivalence relation":
    [{"id": "--tech-term-equivalence-relation",
      "data": {"term": "equivalence relation"},
      "address": "/The-Type-System/Quotients/"}],
    "equational lemma":
    [{"id": "--tech-term-equational-lemmas",
      "data": {"term": "equational lemmas"},
      "address": "/Elaboration-and-Compilation/"}],
    "environment extension":
    [{"id": "--tech-term-environment-extensions",
      "data": {"term": "environment extensions"},
      "address": "/Elaboration-and-Compilation/"}],
    "enum inductive":
    [{"id": "--tech-term-enum-inductive",
      "data": {"term": "enum inductive"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ellipsi":
    [{"id": "--tech-term-ellipsis",
      "data": {"term": "ellipsis"},
      "address": "/Terms/Function-Application/"}],
    "elaborator":
    [{"id": "--tech-term-Elaboration",
      "data": {"term": "elaborators"},
      "address": "/Elaboration-and-Compilation/"},
     {"id": "--tech-term-elaborators",
      "data": {"term": "elaborators"},
      "address": "/Notations-and-Macros/Elaborators/"}],
    "e matching instance":
    [{"id": "--tech-term-instance",
      "data": {"term": "instance"},
      "address": "/The--grind--tactic/E___matching/"}],
    "e matching":
    [{"id": "--tech-term-E-matching",
      "data": {"term": "E-matching"},
      "address": "/The--grind--tactic/E___matching/"}],
    "dynamic array":
    [{"id": "--tech-term-dynamic-arrays",
      "data": {"term": "dynamic arrays"},
      "address": "/Basic-Types/Arrays/"}],
    "downward propagation":
    [{"id": "--tech-term-downward-propagation",
      "data": {"term": "downward propagation"},
      "address": "/The--grind--tactic/Constraint-Propagation/"}],
    "domain":
    [{"id": "--tech-term-domain",
      "data": {"term": "domain"},
      "address": "/The-Type-System/Functions/"}],
    "documentation comment":
    [{"id": "--tech-term-Documentation-comments",
      "data": {"term": "Documentation comments"},
      "address": "/Definitions/Modifiers/"}],
    "documentation":
    [{"id": "--tech-term-documentation",
      "data": {"term": "documentation"},
      "address": "/Source-Files-and-Modules/"}],
    "do notation":
    [{"id": "--tech-term-do-notation",
      "data": {"term": "do-notation"},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "do item":
    [{"id": "--tech-term-do-items",
      "data": {"term": "do items"},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "discriminant refinement":
    [{"id": "--tech-term-discriminant-refinement",
      "data": {"term": "discriminant refinement"},
      "address": "/Terms/Pattern-Matching/"}],
    "directory":
    [{"id": "--tech-term-Directories",
      "data": {"term": "Directories"},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "direct dependency":
    [{"id": "--tech-term-direct-dependencies",
      "data": {"term": "direct dependencies"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "dictionary":
    [{"id": "--tech-term-dictionaries",
      "data": {"term": "dictionaries"},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "diamond":
    [{"id": "--tech-term-Diamonds",
      "data": {"term": "Diamonds"},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "deriving handler":
    [{"id": "--tech-term-deriving-handlers",
      "data": {"term": "deriving handlers"},
      "address": "/Type-Classes/Deriving-Instances/"}],
    "deriving":
    [{"id": "--tech-term-deriving",
      "data": {"term": "deriving"},
      "address": "/Type-Classes/Deriving-Instances/"}],
    "derivation":
    [{"id": "--tech-term-derivation",
      "data": {"term": "derivation"},
      "address": "/The-Type-System/"}],
    "dependent sum":
    [{"id": "--tech-term-dependent-sums",
      "data": {"term": "dependent sums"},
      "address": "/Basic-Types/Tuples/"}],
    "dependent product":
    [{"id": "--tech-term-dependent-products",
      "data": {"term": "dependent products"},
      "address": "/The-Type-System/Functions/"}],
    "dependent pair":
    [{"id": "--tech-term-Dependent-pairs",
      "data": {"term": "Dependent pairs"},
      "address": "/Basic-Types/Tuples/"}],
    "dependent map":
    [{"id": "--tech-term-dependent-map",
      "data": {"term": "dependent map"},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "dependent coercion":
    [{"id": "--tech-term-Dependent-coercions",
      "data": {"term": "Dependent coercions"},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "dependent":
    [{"id": "--tech-term-Dependent",
      "data": {"term": "Dependent"},
      "address": "/The-Type-System/Functions/"}],
    "delaborator":
    [{"id": "--tech-term-delaborators",
      "data": {"term": "delaborators"},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "definitional equality":
    [{"id": "--tech-term-definitional-equality",
      "data": {"term": "definitional equality"},
      "address": "/The-Type-System/"}],
    "defined constant":
    [{"id": "--tech-term-defined-constants",
      "data": {"term": "defined constants"},
      "address": "/The-Type-System/"}],
    "default toolchain":
    [{"id": "--tech-term-default-toolchain",
      "data": {"term": "default toolchain"},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "default target":
    [{"id": "--tech-term-default-targets",
      "data": {"term": "default targets"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "default instance":
    [{"id": "--tech-term-default-instances",
      "data": {"term": "default instances"},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "default facet":
    [{"id": "--tech-term-default-facet",
      "data": {"term": "default facet"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "decreasing parameter":
    [{"id": "--tech-term-decreasing-parameter",
      "data": {"term": "decreasing parameter"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "declaration name":
    [{"id": "--tech-term-declaration-name",
      "data": {"term": "declaration name"},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "decidable":
    [{"id": "--tech-term-decidable",
      "data": {"term": "decidable"},
      "address": "/Type-Classes/Basic-Classes/"}],
    "de bruijn indice":
    [{"id": "--tech-term-de-Bruijn-indices",
      "data": {"term": "de Bruijn indices"},
      "address": "/The--grind--tactic/E___matching/"}],
    "cycle":
    [{"id": "--tech-term-cycles",
      "data": {"term": "cycles"},
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "custom toolchain name":
    [{"id": "--tech-term-custom-toolchain-name",
      "data": {"term": "custom toolchain name"},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "custom target":
    [{"id": "--tech-term-Custom-targets",
      "data": {"term": "Custom targets"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "custom simp set":
    [{"id": "--tech-term-Custom-simp-sets",
      "data": {"term": "Custom simp sets"},
      "address": "/The-Simplifier/Simp-sets/"}],
    "custom eliminator":
    [{"id": "--tech-term-Custom-eliminators",
      "data": {"term": "Custom eliminators"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "currying":
    [{"id": "--tech-term-currying",
      "data": {"term": "currying"},
      "address": "/The-Type-System/Functions/"}],
    "current namespace":
    [{"id": "--tech-term-current-namespace-next",
      "data": {"term": "current namespace"},
      "address": "/Namespaces-and-Sections/"},
     {"id": "--tech-term-current-namespace",
      "data": {"term": "current namespace"},
      "address": "/Namespaces-and-Sections/"}],
    "current do block":
    [{"id": "--tech-term-current-do-block",
      "data": {"term": "current do block"},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "cumulative":
    [{"id": "--tech-term-cumulative",
      "data": {"term": "cumulative"},
      "address": "/The-Type-System/Universes/"}],
    "coverage":
    [{"id": "--tech-term-coverage",
      "data": {"term": "coverage"},
      "address": "/The--grind--tactic/E___matching/"}],
    "cover":
    [{"id": "--tech-term-cover",
      "data": {"term": "cover"},
      "address": "/The--grind--tactic/E___matching/"}],
    "course of values recursion":
    [{"id": "--tech-term-course-of-values-recursion",
      "data": {"term": "course-of-values recursion"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "constructor":
    [{"id": "--tech-term-constructors",
      "data": {"term": "constructors"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "constraint propagation":
    [{"id": "--tech-term-Constraint-propagation",
      "data": {"term": "Constraint propagation"},
      "address": "/The--grind--tactic/Constraint-Propagation/"}],
    "congruence closure":
    [{"id": "--tech-term-Congruence-closure",
      "data": {"term": "Congruence closure"},
      "address": "/The--grind--tactic/Congruence-Closure/"}],
    "configure package":
    [{"id": "--tech-term-Configuring",
      "data": {"term": "Configuring"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "configuration item":
    [{"id": "--tech-term-configuration-items",
      "data": {"term": "configuration items"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "command elaborator":
    [{"id": "--tech-term-Command-elaborators",
      "data": {"term": "Command elaborators"},
      "address": "/Notations-and-Macros/Elaborators/"}],
    "command":
    [{"id": "--tech-term-commands",
      "data": {"term": "commands"},
      "address": "/Source-Files-and-Modules/"}],
    "coercion insertion":
    [{"id": "--tech-term-coercion-insertion",
      "data": {"term": "coercion insertion"},
      "address": "/Coercions/Coercion-Insertion/"}],
    "coercion":
    [{"id": "--tech-term-coercion",
      "data": {"term": "coercion"},
      "address": "/Coercions/"}],
    "codomain":
    [{"id": "--tech-term-codomain",
      "data": {"term": "codomain"},
      "address": "/The-Type-System/Functions/"}],
    "class abbreviation":
    [{"id": "--tech-term-class-abbreviations",
      "data": {"term": "class abbreviations"},
      "address": "/Type-Classes/Class-Declarations/"}],
    "choice node":
    [{"id": "--tech-term-choice-node",
      "data": {"term": "choice node"},
      "address": "/Elaboration-and-Compilation/"}],
    "channel":
    [{"id": "--tech-term-channel",
      "data": {"term": "channel"},
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "cast":
    [{"id": "--tech-term-casts",
      "data": {"term": "casts"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "case label":
    [{"id": "--tech-term-case-label",
      "data": {"term": "case label"},
      "address": "/Tactic-Proofs/Reading-Proof-States/"}],
    "canonical":
    [{"id": "--tech-term-canonical",
      "data": {"term": "canonical"},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "candidate measure":
    [{"id": "--tech-term-Candidate-measures",
      "data": {"term": "Candidate measures"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "cancel":
    [{"id": "--tech-term-cancelled",
      "data": {"term": "cancelled"},
      "address": "/IO/Tasks-and-Threads/"}],
    "build directory":
    [{"id": "--tech-term-build-directory",
      "data": {"term": "build directory"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "build":
    [{"id": "--tech-term-build",
      "data": {"term": "build"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "buffered":
    [{"id": "--tech-term-buffered",
      "data": {"term": "buffered"},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "bracketed binder":
    [{"id": "--tech-term-bracketed-binders",
      "data": {"term": "bracketed binders"},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "boxed":
    [{"id": "--tech-term-Boxed",
      "data": {"term": "Boxed"},
      "address": "/Run-Time-Code/Boxing/"}],
    "borrowed":
    [{"id": "--tech-term-borrowed",
      "data": {"term": "borrowed"},
      "address": "/Run-Time-Code/Foreign-Function-Interface/"}],
    "binary directory":
    [{"id": "--tech-term-binary-directory",
      "data": {"term": "binary directory"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "basic termination measure":
    [{"id": "--tech-term-basic-termination-measures",
      "data": {"term": "basic termination measures"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "axiom":
    [{"id": "--tech-term-Axioms",
      "data": {"term": "Axioms"},
      "address": "/Axioms/"}],
    "auxiliary matching function":
    [{"id": "--tech-term-auxiliary-matching-functions",
      "data": {"term": "auxiliary matching functions"},
      "address": "/Elaboration-and-Compilation/"}],
    "automatic parameter":
    [{"id": "--tech-term-automatic-parameters",
      "data": {"term": "automatic parameters"},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "automatic implicit parameter":
    [{"id": "--tech-term-automatic-implicit-parameters",
      "data": {"term": "automatic implicit parameters"},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "attribute instance":
    [{"id": "--tech-term-attribute-instances",
      "data": {"term": "attribute instances"},
      "address": "/Attributes/"}],
    "attribute":
    [{"id": "--tech-term-Attributes",
      "data": {"term": "Attributes"},
      "address": "/Attributes/"}],
    "atomic":
    [{"id": "--tech-term-atomic",
      "data": {"term": "atomic"},
      "address": "/Tactic-Proofs/Reading-Proof-States/"}],
    "atom":
    [{"id": "--tech-term-Atoms",
      "data": {"term": "Atoms"},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "associativity":
    [{"id": "--tech-term-associativity",
      "data": {"term": "associativity"},
      "address": "/Notations-and-Macros/Custom-Operators/"}],
    "associative array":
    [{"id": "--tech-term-associative-arrays",
      "data": {"term": "associative arrays"},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "artifact":
    [{"id": "--tech-term-artifact",
      "data": {"term": "artifact"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "applicative functor":
    [{"id": "--tech-term-Applicative-functors",
      "data": {"term": "Applicative functors"},
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "application binary interface":
    [{"id": "--tech-term-Application-Binary-Interface",
      "data": {"term": "Application Binary Interface"},
      "address": "/Run-Time-Code/Foreign-Function-Interface/"}],
    "antiquotation":
    [{"id": "--tech-term-antiquotations",
      "data": {"term": "antiquotations"},
      "address": "/Notations-and-Macros/Macros/"}],
    "anonymous constructor syntax":
    [{"id": "--tech-term-anonymous-constructor-syntax",
      "data": {"term": "anonymous constructor syntax"},
      "address": "/The-Type-System/Inductive-Types/"}],
    "ad hoc polymorphism":
    [{"id": "--tech-term-ad-hoc-polymorphism",
      "data": {"term": "ad-hoc polymorphism"},
      "address": "/Type-Classes/"}],
    "absolute path":
    [{"id": "--tech-term-Absolute-paths",
      "data": {"term": "Absolute paths"},
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    ".olean file":
    [{"id": "--tech-term-___olean-file",
      "data": {"term": ".olean file"},
      "address": "/Elaboration-and-Compilation/"}]}},
  "Verso.Genre.Manual.doc.tactic.conv":
  {"title": "Conversion Tactics",
   "description": "Conversion Tactics",
   "contents":
   {"Lean.Parser.Tactic.Conv.«conv·._»":
    [{"id": "Lean___Parser___Tactic___Conv____FLQQ_conv________FLQQ_-next",
      "data": {"userName": "· ..."},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"},
     {"id": "Lean___Parser___Tactic___Conv____FLQQ_conv________FLQQ_",
      "data": {"userName": "· ..."},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.«conv_<;>_»":
    [{"id":
      "Lean___Parser___Tactic___Conv____FLQQ_conv__LT__SEMI__GT___FLQQ_",
      "data": {"userName": "<;>"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.«convNext__=>_»":
    [{"id": "Lean___Parser___Tactic___Conv____FLQQ_convNext______GT___FLQQ_",
      "data": {"userName": "next ... => ..."},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.zeta":
    [{"id": "Lean___Parser___Tactic___Conv___zeta",
      "data": {"userName": "zeta"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.whnf":
    [{"id": "Lean___Parser___Tactic___Conv___whnf",
      "data": {"userName": "whnf"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.unfold":
    [{"id": "Lean___Parser___Tactic___Conv___unfold",
      "data": {"userName": "unfold"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.skip":
    [{"id": "Lean___Parser___Tactic___Conv___skip",
      "data": {"userName": "skip"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.simpMatch":
    [{"id": "Lean___Parser___Tactic___Conv___simpMatch",
      "data": {"userName": "simp_match"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.simp":
    [{"id": "Lean___Parser___Tactic___Conv___simp",
      "data": {"userName": "simp"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.rhs":
    [{"id": "Lean___Parser___Tactic___Conv___rhs",
      "data": {"userName": "rhs"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.rewrite":
    [{"id": "Lean___Parser___Tactic___Conv___rewrite",
      "data": {"userName": "rewrite"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.reduce":
    [{"id": "Lean___Parser___Tactic___Conv___reduce",
      "data": {"userName": "reduce"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.pattern":
    [{"id": "Lean___Parser___Tactic___Conv___pattern",
      "data": {"userName": "pattern"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.paren":
    [{"id": "Lean___Parser___Tactic___Conv___paren",
      "data": {"userName": "( ... )"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.normCast":
    [{"id": "Lean___Parser___Tactic___Conv___normCast",
      "data": {"userName": "norm_cast"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.nestedTacticCore":
    [{"id": "Lean___Parser___Tactic___Conv___nestedTacticCore",
      "data": {"userName": "tactic'"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.nestedTactic":
    [{"id": "Lean___Parser___Tactic___Conv___nestedTactic",
      "data": {"userName": "tactic"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.nestedConv":
    [{"id": "Lean___Parser___Tactic___Conv___nestedConv",
      "data": {"userName": "{ ... }"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.lhs":
    [{"id": "Lean___Parser___Tactic___Conv___lhs",
      "data": {"userName": "lhs"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.fun":
    [{"id": "Lean___Parser___Tactic___Conv___fun",
      "data": {"userName": "fun"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.focus":
    [{"id": "Lean___Parser___Tactic___Conv___focus",
      "data": {"userName": "focus"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.first":
    [{"id": "Lean___Parser___Tactic___Conv___first",
      "data": {"userName": "first"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.failIfSuccess":
    [{"id": "Lean___Parser___Tactic___Conv___failIfSuccess",
      "data": {"userName": "fail_if_success"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.ext":
    [{"id": "Lean___Parser___Tactic___Conv___ext",
      "data": {"userName": "ext"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.enter":
    [{"id": "Lean___Parser___Tactic___Conv___enter",
      "data": {"userName": "enter"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.dsimp":
    [{"id": "Lean___Parser___Tactic___Conv___dsimp",
      "data": {"userName": "dsimp"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.delta":
    [{"id": "Lean___Parser___Tactic___Conv___delta",
      "data": {"userName": "delta"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.convTry_":
    [{"id": "Lean___Parser___Tactic___Conv___convTry_",
      "data": {"userName": "try"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.convTrace_state":
    [{"id": "Lean___Parser___Tactic___Conv___convTrace_state",
      "data": {"userName": "trace_state"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.convRw__":
    [{"id": "Lean___Parser___Tactic___Conv___convRw__",
      "data": {"userName": "rw"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.convRight":
    [{"id": "Lean___Parser___Tactic___Conv___convRight",
      "data": {"userName": "right"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.convRfl":
    [{"id": "Lean___Parser___Tactic___Conv___convRfl",
      "data": {"userName": "rfl"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.convRepeat_":
    [{"id": "Lean___Parser___Tactic___Conv___convRepeat_",
      "data": {"userName": "repeat"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.convLeft":
    [{"id": "Lean___Parser___Tactic___Conv___convLeft",
      "data": {"userName": "left"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.convIntro___":
    [{"id": "Lean___Parser___Tactic___Conv___convIntro___",
      "data": {"userName": "intro"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.convErw__":
    [{"id": "Lean___Parser___Tactic___Conv___convErw__",
      "data": {"userName": "erw"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.convDone":
    [{"id": "Lean___Parser___Tactic___Conv___convDone",
      "data": {"userName": "done"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.convConvSeq":
    [{"id": "Lean___Parser___Tactic___Conv___convConvSeq",
      "data": {"userName": "conv => ..."},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.convArgs":
    [{"id": "Lean___Parser___Tactic___Conv___convArgs",
      "data": {"userName": "args"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.convApply_":
    [{"id": "Lean___Parser___Tactic___Conv___convApply_",
      "data": {"userName": "apply"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.congr":
    [{"id": "Lean___Parser___Tactic___Conv___congr",
      "data": {"userName": "congr"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.change":
    [{"id": "Lean___Parser___Tactic___Conv___change",
      "data": {"userName": "change"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.case'":
    [{"id": "Lean___Parser___Tactic___Conv___case___",
      "data": {"userName": "case' ... => ..."},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.case":
    [{"id": "Lean___Parser___Tactic___Conv___case",
      "data": {"userName": "case ... => ..."},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.arg":
    [{"id": "Lean___Parser___Tactic___Conv___arg",
      "data": {"userName": "arg [@]i"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.anyGoals":
    [{"id": "Lean___Parser___Tactic___Conv___anyGoals",
      "data": {"userName": "any_goals"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.allGoals":
    [{"id": "Lean___Parser___Tactic___Conv___allGoals",
      "data": {"userName": "all_goals"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}]}},
  "Verso.Genre.Manual.doc.tactic":
  {"title": "Tactic Documentation",
   "description": "Tactic Documentation",
   "contents":
   {"«tacticBy_cases_:_»":
    [{"id": "by_cases",
      "data": {"userName": "by_cases"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tacticSimp_wf":
    [{"id": "simp_wf",
      "data": {"userName": "simp_wf"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tacticGet_elem_tactic_trivial":
    [{"id": "get_elem_tactic_trivial",
      "data": {"userName": "get_elem_tactic_trivial"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tacticGet_elem_tactic":
    [{"id": "get_elem_tactic",
      "data": {"userName": "get_elem_tactic"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tacticFunext___":
    [{"id": "funext-next",
      "data": {"userName": "funext"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tacticDecreasing_with_":
    [{"id": "decreasing_with",
      "data": {"userName": "decreasing_with"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "tacticDecreasing_trivial":
    [{"id": "decreasing_trivial",
      "data": {"userName": "decreasing_trivial"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "tacticDecreasing_tactic":
    [{"id": "decreasing_tactic",
      "data": {"userName": "decreasing_tactic"},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.solveTactic":
    [{"id": "solve",
      "data": {"userName": "solve"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.cdot":
    [{"id": "___",
      "data": {"userName": "Lean.cdot"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.calcTactic":
    [{"id": "calc",
      "data": {"userName": "calc"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.«tactic_<;>_»":
    [{"id": "_LT__SEMI__GT_",
      "data": {"userName": "<;>"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.«tacticNomatch_,,»":
    [{"id": "nomatch",
      "data": {"userName": "nomatch"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.«tacticNext_=>_»":
    [{"id": "next",
      "data": {"userName": "next"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.«tacticExists_,,»":
    [{"id": "exists",
      "data": {"userName": "exists"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.withUnfoldingAll":
    [{"id": "with_unfolding_all",
      "data": {"userName": "with_unfolding_all"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"},
     {"id": "with_unfolding_all-next",
      "data": {"userName": "with_unfolding_all"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.withReducibleAndInstances":
    [{"id": "with_reducible_and_instances",
      "data": {"userName": "with_reducible_and_instances"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"},
     {"id": "with_reducible_and_instances-next",
      "data": {"userName": "with_reducible_and_instances"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.withReducible":
    [{"id": "with_reducible-next",
      "data": {"userName": "with_reducible"},
      "address": "/Tactic-Proofs/Tactic-Reference/"},
     {"id": "with_reducible",
      "data": {"userName": "with_reducible"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.unfold":
    [{"id": "unfold",
      "data": {"userName": "unfold"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.traceState":
    [{"id": "trace_state",
      "data": {"userName": "trace_state"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.traceMessage":
    [{"id": "trace",
      "data": {"userName": "trace"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticUnhygienic_":
    [{"id": "unhygienic",
      "data": {"userName": "unhygienic"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticTry_":
    [{"id": "try",
      "data": {"userName": "try"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.tacticTrivial":
    [{"id": "trivial",
      "data": {"userName": "trivial"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticSuffices_":
    [{"id": "suffices",
      "data": {"userName": "suffices"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticStop_":
    [{"id": "stop",
      "data": {"userName": "stop"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticSorry":
    [{"id": "sorry",
      "data": {"userName": "sorry"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticSimpa?_":
    [{"id": "simpa___-next",
      "data": {"userName": "simpa?"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticSimpa?!_":
    [{"id": "simpa______",
      "data": {"userName": "simpa?!"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticSimpa!_":
    [{"id": "simpa___",
      "data": {"userName": "simpa!"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticSimp_all?!_":
    [{"id": "simp_all______",
      "data": {"userName": "simp_all?!"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticSimp?!_":
    [{"id": "simp______",
      "data": {"userName": "simp?!"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticRwa__":
    [{"id": "rwa",
      "data": {"userName": "rwa"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticRw_mod_cast___":
    [{"id": "rw_mod_cast",
      "data": {"userName": "rw_mod_cast"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticRfl'":
    [{"id": "rfl___",
      "data": {"userName": "rfl'"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticRfl":
    [{"id": "rfl",
      "data": {"userName": "rfl"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticRepeat_":
    [{"id": "repeat",
      "data": {"userName": "repeat"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.tacticNorm_cast__":
    [{"id": "norm_cast",
      "data": {"userName": "norm_cast"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticNofun":
    [{"id": "nofun",
      "data": {"userName": "nofun"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticLet__":
    [{"id": "let",
      "data": {"userName": "let"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.tacticLetI__":
    [{"id": "letI",
      "data": {"userName": "letI"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.tacticLet'__":
    [{"id": "let___",
      "data": {"userName": "let'"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.tacticIterate____":
    [{"id": "iterate",
      "data": {"userName": "iterate"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.tacticInfer_instance":
    [{"id": "infer_instance",
      "data": {"userName": "infer_instance"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticHave__":
    [{"id": "have-next",
      "data": {"userName": "have"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"},
     {"id": "have",
      "data": {"userName": "have"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.tacticHave'":
    [{"id": "have___",
      "data": {"userName": "have'"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.tacticExfalso":
    [{"id": "exfalso",
      "data": {"userName": "exfalso"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticExact_mod_cast_":
    [{"id": "exact_mod_cast",
      "data": {"userName": "exact_mod_cast"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticErw___":
    [{"id": "erw",
      "data": {"userName": "erw"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticDsimp?!_":
    [{"id": "dsimp______",
      "data": {"userName": "dsimp?!"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticBv_omega":
    [{"id": "bv_omega",
      "data": {"userName": "bv_omega"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticAssumption_mod_cast_":
    [{"id": "assumption_mod_cast",
      "data": {"userName": "assumption_mod_cast"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticApply_mod_cast_":
    [{"id": "apply_mod_cast",
      "data": {"userName": "apply_mod_cast"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticAnd_intros":
    [{"id": "and_intros",
      "data": {"userName": "and_intros"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticAdmit":
    [{"id": "admit",
      "data": {"userName": "admit"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacticAc_nf_":
    [{"id": "ac_nf",
      "data": {"userName": "ac_nf"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.tacIfThenElse":
    [{"id": "if-_________-then-_________-else-_________",
      "data": {"userName": "Lean.Parser.Tactic.tacIfThenElse"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.tacDepIfThenElse":
    [{"id": "if-h-___-_________-then-_________-else-_________",
      "data": {"userName": "Lean.Parser.Tactic.tacDepIfThenElse"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.symmSaturate":
    [{"id": "symm_saturate",
      "data": {"userName": "symm_saturate"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.symm":
    [{"id": "symm",
      "data": {"userName": "symm"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.substVars":
    [{"id": "subst_vars",
      "data": {"userName": "subst_vars"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.substEqs":
    [{"id": "subst_eqs",
      "data": {"userName": "subst_eqs"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.subst":
    [{"id": "subst",
      "data": {"userName": "subst"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.split":
    [{"id": "split",
      "data": {"userName": "split"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.specialize":
    [{"id": "specialize",
      "data": {"userName": "specialize"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.solveByElim":
    [{"id": "solve_by_elim",
      "data": {"userName": "solve_by_elim"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.sleep":
    [{"id": "sleep",
      "data": {"userName": "sleep"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.skip":
    [{"id": "skip",
      "data": {"userName": "skip"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.simpa":
    [{"id": "simpa",
      "data": {"userName": "simpa"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.simpTrace":
    [{"id": "simp___-next",
      "data": {"userName": "simp?"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.simpAutoUnfold":
    [{"id": "simp___",
      "data": {"userName": "simp!"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.simpArithBang":
    [{"id": "simp_arith___",
      "data": {"userName": "simp_arith!"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.simpArith":
    [{"id": "simp_arith",
      "data": {"userName": "simp_arith"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.simpAllTrace":
    [{"id": "simp_all___-next",
      "data": {"userName": "simp_all?"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.simpAllAutoUnfold":
    [{"id": "simp_all___",
      "data": {"userName": "simp_all!"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.simpAllArithBang":
    [{"id": "simp_all_arith___",
      "data": {"userName": "simp_all_arith!"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.simpAllArith":
    [{"id": "simp_all_arith",
      "data": {"userName": "simp_all_arith"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.simpAll":
    [{"id": "simp_all",
      "data": {"userName": "simp_all"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.simp":
    [{"id": "simp",
      "data": {"userName": "simp"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.showTerm":
    [{"id": "show_term",
      "data": {"userName": "show_term"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.show":
    [{"id": "show",
      "data": {"userName": "show"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.set_option":
    [{"id": "set_option",
      "data": {"userName": "Lean.Parser.Tactic.set_option"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.rwSeq":
    [{"id": "rw",
      "data": {"userName": "rw"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.runTac":
    [{"id": "run_tac",
      "data": {"userName": "run_tac"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.rotateRight":
    [{"id": "rotate_right",
      "data": {"userName": "rotate_right"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.rotateLeft":
    [{"id": "rotate_left",
      "data": {"userName": "rotate_left"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.rintro":
    [{"id": "rintro",
      "data": {"userName": "rintro"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.right":
    [{"id": "right",
      "data": {"userName": "right"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.rewrites?":
    [{"id": "rw___",
      "data": {"userName": "rw?"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.rewriteSeq":
    [{"id": "rewrite",
      "data": {"userName": "rewrite"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.revert":
    [{"id": "revert",
      "data": {"userName": "revert"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.replace":
    [{"id": "replace",
      "data": {"userName": "replace"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.repeat1'":
    [{"id": "repeat1___",
      "data": {"userName": "repeat1'"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.repeat'":
    [{"id": "repeat___",
      "data": {"userName": "repeat'"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.renameI":
    [{"id": "rename_i",
      "data": {"userName": "rename_i"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.rename":
    [{"id": "rename",
      "data": {"userName": "rename"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.refine'":
    [{"id": "refine___",
      "data": {"userName": "refine'"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.refine":
    [{"id": "refine",
      "data": {"userName": "refine"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.rcases":
    [{"id": "rcases",
      "data": {"userName": "rcases"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.pushCast":
    [{"id": "push_cast",
      "data": {"userName": "push_cast"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.open":
    [{"id": "open",
      "data": {"userName": "Lean.Parser.Tactic.open"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.omega":
    [{"id": "omega",
      "data": {"userName": "omega"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.obtain":
    [{"id": "obtain",
      "data": {"userName": "obtain"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.nativeDecide":
    [{"id": "native_decide",
      "data": {"userName": "native_decide"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mvcgenMacro":
    [{"id": "mvcgen",
      "data": {"userName": "mvcgen"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mstopMacro":
    [{"id": "mstop",
      "data": {"userName": "mstop"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mstartMacro":
    [{"id": "mstart",
      "data": {"userName": "mstart"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mspecializePure":
    [{"id": "mspecialize_pure",
      "data": {"userName": "mspecialize_pure"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mspecializeMacro":
    [{"id": "mspecialize",
      "data": {"userName": "mspecialize"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mspec":
    [{"id": "mspec",
      "data": {"userName": "mspec"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mright":
    [{"id": "mright",
      "data": {"userName": "mright"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mreplaceMacro":
    [{"id": "mreplace",
      "data": {"userName": "mreplace"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mrefine":
    [{"id": "mrefine",
      "data": {"userName": "mrefine"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mpureIntro":
    [{"id": "mpure_intro",
      "data": {"userName": "mpure_intro"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mpure":
    [{"id": "mpure",
      "data": {"userName": "mpure"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mleftMacro":
    [{"id": "mleft",
      "data": {"userName": "mleft"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mintro":
    [{"id": "mintro",
      "data": {"userName": "mintro"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mhaveMacro":
    [{"id": "mhave",
      "data": {"userName": "mhave"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mframeMacro":
    [{"id": "mframe",
      "data": {"userName": "mframe"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mexistsMacro":
    [{"id": "mexists",
      "data": {"userName": "mexists"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mexfalsoMacro":
    [{"id": "mexfalso",
      "data": {"userName": "mexfalso"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mexactMacro":
    [{"id": "mexact",
      "data": {"userName": "mexact"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mdup":
    [{"id": "mdup",
      "data": {"userName": "mdup"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mconstructor":
    [{"id": "mconstructor",
      "data": {"userName": "mconstructor"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mclear":
    [{"id": "mclear",
      "data": {"userName": "mclear"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.mcases":
    [{"id": "mcases",
      "data": {"userName": "mcases"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.match":
    [{"id": "match",
      "data": {"userName": "Lean.Parser.Tactic.match"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.massumption":
    [{"id": "massumption",
      "data": {"userName": "massumption"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.letrec":
    [{"id": "let-rec",
      "data": {"userName": "let"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.left":
    [{"id": "left",
      "data": {"userName": "left"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.intros":
    [{"id": "intros",
      "data": {"userName": "intros"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.introMatch":
    [{"id":
      "intro-___-_________-____GT_-_________-___-_________-____GT_-_________",
      "data": {"userName": "Lean.Parser.Tactic.introMatch"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.intro":
    [{"id": "intro",
      "data": {"userName": "intro"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.injections":
    [{"id": "injections",
      "data": {"userName": "injections"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.injection":
    [{"id": "injection",
      "data": {"userName": "injection"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.induction":
    [{"id": "induction",
      "data": {"userName": "induction"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.guardTarget":
    [{"id": "guard_target",
      "data": {"userName": "guard_target"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.guardHyp":
    [{"id": "guard_hyp",
      "data": {"userName": "guard_hyp"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.guardExpr":
    [{"id": "guard_expr",
      "data": {"userName": "guard_expr"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.grind":
    [{"id": "grind",
      "data": {"userName": "grind"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.generalize":
    [{"id": "generalize",
      "data": {"userName": "generalize"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.funInduction":
    [{"id": "fun_induction",
      "data": {"userName": "fun_induction"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.funCases":
    [{"id": "fun_cases",
      "data": {"userName": "fun_cases"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.focus":
    [{"id": "focus",
      "data": {"userName": "focus"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.first":
    [{"id": "first",
      "data": {"userName": "first"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.falseOrByContra":
    [{"id": "false_or_by_contra",
      "data": {"userName": "false_or_by_contra"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.failIfSuccess":
    [{"id": "fail_if_success",
      "data": {"userName": "fail_if_success"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.fail":
    [{"id": "fail",
      "data": {"userName": "fail"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.exposeNames":
    [{"id": "expose_names",
      "data": {"userName": "expose_names"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.exact?":
    [{"id": "exact___",
      "data": {"userName": "exact?"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.exact":
    [{"id": "exact",
      "data": {"userName": "exact"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.eqRefl":
    [{"id": "eq_refl",
      "data": {"userName": "eq_refl"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.dsimpTrace":
    [{"id": "dsimp___-next",
      "data": {"userName": "dsimp?"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.dsimpAutoUnfold":
    [{"id": "dsimp___",
      "data": {"userName": "dsimp!"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.dsimp":
    [{"id": "dsimp",
      "data": {"userName": "dsimp"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.done":
    [{"id": "done",
      "data": {"userName": "done"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.delta":
    [{"id": "delta",
      "data": {"userName": "delta"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.decide":
    [{"id": "decide",
      "data": {"userName": "decide"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.dbgTrace":
    [{"id": "dbg_trace",
      "data": {"userName": "dbg_trace"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.contradiction":
    [{"id": "contradiction",
      "data": {"userName": "contradiction"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.constructor":
    [{"id": "constructor",
      "data": {"userName": "constructor"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.congr":
    [{"id": "congr",
      "data": {"userName": "congr"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.clear":
    [{"id": "clear",
      "data": {"userName": "clear"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.classical":
    [{"id": "classical",
      "data": {"userName": "classical"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.changeWith":
    [{"id": "change-_________-with-_________",
      "data": {"userName": "change"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.change":
    [{"id": "change",
      "data": {"userName": "change"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.cases":
    [{"id": "cases",
      "data": {"userName": "cases"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.case'":
    [{"id": "case___",
      "data": {"userName": "case'"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.case":
    [{"id": "case",
      "data": {"userName": "case"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.bvTrace":
    [{"id": "bv_decide___",
      "data": {"userName": "bv_decide?"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.bvNormalize":
    [{"id": "bv_normalize",
      "data": {"userName": "bv_normalize"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.bvDecide":
    [{"id": "bv_decide",
      "data": {"userName": "bv_decide"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.bvCheck":
    [{"id": "bv_check",
      "data": {"userName": "bv_check"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.assumption":
    [{"id": "assumption",
      "data": {"userName": "assumption"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.as_aux_lemma":
    [{"id": "as_aux_lemma",
      "data": {"userName": "as_aux_lemma"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.applyRules":
    [{"id": "apply_rules",
      "data": {"userName": "apply_rules"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.applyRfl":
    [{"id": "apply_rfl",
      "data": {"userName": "apply_rfl"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.applyAssumption":
    [{"id": "apply_assumption",
      "data": {"userName": "apply_assumption"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.apply?":
    [{"id": "apply___",
      "data": {"userName": "apply?"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.apply":
    [{"id": "apply",
      "data": {"userName": "apply"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.anyGoals":
    [{"id": "any_goals",
      "data": {"userName": "any_goals"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.allGoals":
    [{"id": "all_goals",
      "data": {"userName": "all_goals"},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.acRfl":
    [{"id": "ac_rfl",
      "data": {"userName": "ac_rfl"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.acNf0":
    [{"id": "ac_nf0",
      "data": {"userName": "ac_nf0"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Tactic.Conv.convTactic":
    [{"id": "conv___",
      "data": {"userName": "conv'"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"},
     {"id": "conv___-next",
      "data": {"userName": "conv'"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.conv":
    [{"id": "conv-next",
      "data": {"userName": "conv"},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Elab.Tactic.Ext.tacticExt1___":
    [{"id": "ext1",
      "data": {"userName": "ext1"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Elab.Tactic.Ext.ext":
    [{"id": "ext",
      "data": {"userName": "ext"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Elab.Tactic.Ext.applyExtTheorem":
    [{"id": "apply_ext_theorem",
      "data": {"userName": "apply_ext_theorem"},
      "address": "/Tactic-Proofs/Tactic-Reference/"}]}},
  "Verso.Genre.Manual.doc.syntaxKind":
  {"title": "Verso.Genre.Manual.doc.syntaxKind",
   "description": "Verso.Genre.Manual.doc.syntaxKind",
   "contents":
   {"«term∃_,_»":
    [{"id": "_FLQQ_term_________FLQQ_",
      "data": null,
      "address": "/Basic-Propositions/Quantifiers/"},
     {"id": "_FLQQ_term_________FLQQ_-next",
      "data": null,
      "address": "/Basic-Propositions/Quantifiers/"}],
    "«term‹_›»":
    [{"id": "_FLQQ_term_FLQ___FRQ__FLQQ_",
      "data": null,
      "address": "/Tactic-Proofs/Reading-Proof-States/"}],
    "«termΣ_,_»":
    [{"id": "_FLQQ_term_________FLQQ_-next-next-next-next-next-next",
      "data": null,
      "address": "/Basic-Types/Tuples/"},
     {"id": "_FLQQ_term_________FLQQ_-next-next-next-next-next",
      "data": null,
      "address": "/Basic-Types/Tuples/"}],
    "«termΣ'_,_»":
    [{"id": "_FLQQ_term____________FLQQ_-next",
      "data": null,
      "address": "/Basic-Types/Tuples/"},
     {"id": "_FLQQ_term____________FLQQ_",
      "data": null,
      "address": "/Basic-Types/Tuples/"}],
    "«term¬_»":
    [{"id": "_FLQQ_term_____FLQQ_",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "«term{_:_//_}»":
    [{"id": "_FLQQ_term___________________FLQQ_-next",
      "data": null,
      "address": "/Basic-Types/Subtypes/"},
     {"id": "_FLQQ_term___________________FLQQ_",
      "data": null,
      "address": "/Basic-Types/Subtypes/"}],
    "«term_⊕_»":
    [{"id":
      "_FLQQ_term______FLQQ_-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "«term_⊕'_»":
    [{"id": "_FLQQ_term_________FLQQ_-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "«term_≥_»":
    [{"id": "_FLQQ_term______FLQQ_-next-next",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "«term_≤_»":
    [{"id": "_FLQQ_term______FLQQ_-next",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "«term_≍_»":
    [{"id": "_FLQQ_term______FLQQ_-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "«term_≈_»":
    [{"id": "_FLQQ_term______FLQQ_",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "«term_∨_»":
    [{"id": "_FLQQ_term______FLQQ_-next-next-next-next",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "«term_∧_»":
    [{"id": "_FLQQ_term______FLQQ_-next-next-next",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "«term_↔_»":
    [{"id": "_FLQQ_term______FLQQ_-next-next-next-next-next",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "«term_×_»":
    [{"id": "_FLQQ_term______FLQQ_-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Basic-Types/Tuples/"}],
    "«term_×__1»":
    [{"id": "_FLQQ_term______1_FLQQ_",
      "data": null,
      "address": "/Basic-Types/Tuples/"}],
    "«term_×'_»":
    [{"id": "_FLQQ_term_________FLQQ_-next-next-next-next",
      "data": null,
      "address": "/Basic-Types/Tuples/"}],
    "«term_||_»":
    [{"id": "_FLQQ_term_________FLQQ_-next-next-next",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "«term_|>_»":
    [{"id": "_FLQQ_term_____GT___FLQQ_",
      "data": null,
      "address": "/Terms/Function-Application/"}],
    "«term_>_»":
    [{"id": "_FLQQ_term__GT___FLQQ_",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "«term_>>=_»":
    [{"id": "_FLQQ_term__GT__GT______FLQQ_",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_>=>_»":
    [{"id": "_FLQQ_term__GT_____GT___FLQQ_",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_=_»":
    [{"id": "_FLQQ_term______FLQQ_-next-next-next-next-next-next",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "«term_=<<_»":
    [{"id": "_FLQQ_term_____LT__LT___FLQQ_",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_<|_»":
    [{"id": "_FLQQ_term__LT______FLQQ_",
      "data": null,
      "address": "/Terms/Function-Application/"}],
    "«term_<|>_»":
    [{"id": "_FLQQ_term__LT_____GT___FLQQ_-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_<_»":
    [{"id": "_FLQQ_term__LT___FLQQ_",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "«term_<=<_»":
    [{"id": "_FLQQ_term__LT_____LT___FLQQ_",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_<*_»":
    [{"id": "_FLQQ_term__LT______FLQQ_-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_<*>_»":
    [{"id": "_FLQQ_term__LT_____GT___FLQQ_-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_<&>_»":
    [{"id": "_FLQQ_term__LT_____GT___FLQQ_-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_<$>_»":
    [{"id": "_FLQQ_term__LT_____GT___FLQQ_",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_::_»":
    [{"id":
      "_FLQQ_term_________FLQQ_-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "«term_*>_»":
    [{"id": "_FLQQ_term_____GT___FLQQ_-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_&&_»":
    [{"id": "_FLQQ_term_________FLQQ_-next-next",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "«term[_]»":
    [{"id": "_FLQQ_term_LSQ___RSQ__FLQQ_-next",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"},
     {"id": "_FLQQ_term_LSQ___RSQ__FLQQ_",
      "data": null,
      "address": "/Terms/Literals/"}],
    "«termExists_,_»":
    [{"id": "_FLQQ_termExists______FLQQ_-next",
      "data": null,
      "address": "/Basic-Propositions/Quantifiers/"},
     {"id": "_FLQQ_termExists______FLQQ_",
      "data": null,
      "address": "/Basic-Propositions/Quantifiers/"}],
    "«term#[_,]»":
    [{"id": "_FLQQ_term____LSQ______RSQ__FLQQ_",
      "data": null,
      "address": "/Terms/Literals/"},
     {"id": "_FLQQ_term____LSQ______RSQ__FLQQ_-next",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "«stx_<|>_»":
    [{"id": "_FLQQ_stx__LT_____GT___FLQQ_",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "«stx_,+»":
    [{"id": "_FLQQ_stx________FLQQ_-next",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "«stx_,+,?»":
    [{"id": "_FLQQ_stx______________FLQQ_-next",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "«stx_,*»":
    [{"id": "_FLQQ_stx________FLQQ_",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "«stx_,*,?»":
    [{"id": "_FLQQ_stx______________FLQQ_",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "«stx_+»":
    [{"id": "_FLQQ_stx_____FLQQ_-next",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "«stx_*»":
    [{"id": "_FLQQ_stx_____FLQQ_",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "«prio(_)»":
    [{"id": "_FLQQ_prio_LPAR___RPAR__FLQQ_",
      "data": null,
      "address": "/Type-Classes/Instance-Declarations/"}],
    "«prec(_)»":
    [{"id": "_FLQQ_prec_LPAR___RPAR__FLQQ_",
      "data": null,
      "address": "/Notations-and-Macros/Precedence/"}],
    "termIfThenElse":
    [{"id": "termIfThenElse",
      "data": null,
      "address": "/Terms/Conditionals/"}],
    "termIfLet":
    [{"id": "termIfLet", "data": null, "address": "/Terms/Conditionals/"}],
    "termDepIfThenElse":
    [{"id": "termDepIfThenElse",
      "data": null,
      "address": "/Terms/Conditionals/"}],
    "term!_":
    [{"id": "term____", "data": null, "address": "/Basic-Types/Booleans/"}],
    "stx_?":
    [{"id": "stx____",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "stx!_":
    [{"id": "stx____-next",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "str.antiquot":
    [{"id": "str___antiquot",
      "data": null,
      "address": "/Notations-and-Macros/Notations/"}],
    "prioMid":
    [{"id": "prioMid",
      "data": null,
      "address": "/Type-Classes/Instance-Declarations/"}],
    "prioLow":
    [{"id": "prioLow",
      "data": null,
      "address": "/Type-Classes/Instance-Declarations/"}],
    "prioHigh":
    [{"id": "prioHigh",
      "data": null,
      "address": "/Type-Classes/Instance-Declarations/"}],
    "prioDefault":
    [{"id": "prioDefault",
      "data": null,
      "address": "/Type-Classes/Instance-Declarations/"}],
    "precMin":
    [{"id": "precMin",
      "data": null,
      "address": "/Notations-and-Macros/Precedence/"}],
    "precMax":
    [{"id": "precMax",
      "data": null,
      "address": "/Notations-and-Macros/Precedence/"}],
    "precLead":
    [{"id": "precLead",
      "data": null,
      "address": "/Notations-and-Macros/Precedence/"}],
    "precArg":
    [{"id": "precArg",
      "data": null,
      "address": "/Notations-and-Macros/Precedence/"}],
    "num.antiquot":
    [{"id": "num___antiquot",
      "data": null,
      "address": "/Type-Classes/Instance-Declarations/"},
     {"id": "num___antiquot-next",
      "data": null,
      "address": "/Notations-and-Macros/Precedence/"}],
    "ident.antiquot":
    [{"id": "ident___antiquot",
      "data": null,
      "address": "/Terms/Functions/"}],
    "coeSortNotation":
    [{"id": "coeSortNotation",
      "data": null,
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "coeNotation":
    [{"id": "coeNotation",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "coeFunNotation":
    [{"id": "coeFunNotation",
      "data": null,
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "boolIfThenElse":
    [{"id": "boolIfThenElse",
      "data": null,
      "address": "/Terms/Conditionals/"}],
    "Std.HashMap.«term_~m_»":
    [{"id": "Std___HashMap____FLQQ_term____m__FLQQ_",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"},
     {"id": "Std___HashMap____FLQQ_term____m__FLQQ_-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.«term_~m_»":
    [{"id": "Std___DHashMap____FLQQ_term____m__FLQQ_",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Manual.FreeSyntax.more":
    [{"id": "Manual___FreeSyntax___more-next-next",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"},
     {"id": "Manual___FreeSyntax___more-next",
      "data": null,
      "address": "/Terms/Function-Application/"},
     {"id": "Manual___FreeSyntax___more",
      "data": null,
      "address": "/Terms/Function-Application/"},
     {"id": "Manual___FreeSyntax___more-next-next-next",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Manual.FreeSyntax.embed":
    [{"id": "Manual___FreeSyntax___embed",
      "data": null,
      "address": "/Terms/Functions/"}],
    "Manual.FreeSyntax.done":
    [{"id": "Manual___FreeSyntax___done",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"},
     {"id": "Manual___FreeSyntax___done-next",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id": "Manual___FreeSyntax___done-next-next",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "List.«term_~_»":
    [{"id": "List____FLQQ_term______FLQQ_",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.«term_<:+_»":
    [{"id": "List____FLQQ_term__LT_________FLQQ_-next",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.«term_<:+:_»":
    [{"id": "List____FLQQ_term__LT____________FLQQ_",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.«term_<+_»":
    [{"id": "List____FLQQ_term__LT______FLQQ_",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.«term_<+:_»":
    [{"id": "List____FLQQ_term__LT_________FLQQ_",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "Lean.«term_Matches_|»":
    [{"id": "Lean____FLQQ_term_Matches_____FLQQ_",
      "data": null,
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.reduceCmd":
    [{"id": "Lean___reduceCmd",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Lean.guardMsgsWhitespaceArg":
    [{"id": "Lean___guardMsgsWhitespaceArg-next",
      "data": null,
      "address": "/Interacting-with-Lean/"},
     {"id": "Lean___guardMsgsWhitespaceArg-next-next",
      "data": null,
      "address": "/Interacting-with-Lean/"},
     {"id": "Lean___guardMsgsWhitespaceArg-next-next-next",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Lean.guardMsgsSpecElt":
    [{"id": "Lean___guardMsgsSpecElt-next-next-next",
      "data": null,
      "address": "/Interacting-with-Lean/"},
     {"id": "Lean___guardMsgsSpecElt-next",
      "data": null,
      "address": "/Interacting-with-Lean/"},
     {"id": "Lean___guardMsgsSpecElt-next-next",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Lean.guardMsgsFilter":
    [{"id": "Lean___guardMsgsFilter-next",
      "data": null,
      "address": "/Interacting-with-Lean/"},
     {"id": "Lean___guardMsgsFilter-next-next-next",
      "data": null,
      "address": "/Interacting-with-Lean/"},
     {"id": "Lean___guardMsgsFilter-next-next",
      "data": null,
      "address": "/Interacting-with-Lean/"},
     {"id": "Lean___guardMsgsFilter-next-next-next-next",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Lean.guardMsgsCmd":
    [{"id": "Lean___guardMsgsCmd",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Lean.PrettyPrinter.Delaborator.attrApp_delab_":
    [{"id": "Lean___PrettyPrinter___Delaborator___attrApp_delab_",
      "data": null,
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "Lean.Parser.commandUnseal__":
    [{"id": "Lean___Parser___commandUnseal__",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Parser.commandSeal__":
    [{"id": "Lean___Parser___commandSeal__",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Parser.Termination.terminationBy":
    [{"id": "Lean___Parser___Termination___terminationBy-next",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "Lean___Parser___Termination___terminationBy-next-next-next",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Parser.Term.typeAscription":
    [{"id": "Lean___Parser___Term___typeAscription-next",
      "data": null,
      "address": "/Terms/Type-Ascription/"},
     {"id": "Lean___Parser___Term___typeAscription",
      "data": null,
      "address": "/Terms/Functions/"}],
    "Lean.Parser.Term.tuple":
    [{"id": "Lean___Parser___Term___tuple",
      "data": null,
      "address": "/Basic-Types/Tuples/"}],
    "Lean.Parser.Term.syntheticHole":
    [{"id": "Lean___Parser___Term___syntheticHole-next",
      "data": null,
      "address": "/Terms/Holes/"},
     {"id": "Lean___Parser___Term___syntheticHole",
      "data": null,
      "address": "/Terms/Holes/"}],
    "Lean.Parser.Term.subst":
    [{"id": "Lean___Parser___Term___subst",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "Lean.Parser.Term.structInstField":
    [{"id": "Lean___Parser___Term___structInstField-next",
      "data": null,
      "address": "/The-Type-System/Inductive-Types/"},
     {"id": "Lean___Parser___Term___structInstField",
      "data": null,
      "address": "/The-Type-System/Inductive-Types/"}],
    "Lean.Parser.Term.structInst":
    [{"id": "Lean___Parser___Term___structInst-next",
      "data": null,
      "address": "/The-Type-System/Inductive-Types/"},
     {"id": "Lean___Parser___Term___structInst",
      "data": null,
      "address": "/The-Type-System/Inductive-Types/"}],
    "Lean.Parser.Term.strictImplicitBinder":
    [{"id": "Lean___Parser___Term___strictImplicitBinder",
      "data": null,
      "address": "/Definitions/Headers-and-Signatures/"},
     {"id": "Lean___Parser___Term___strictImplicitBinder-next-next-next",
      "data": null,
      "address": "/Terms/Functions/"},
     {"id": "Lean___Parser___Term___strictImplicitBinder-next",
      "data": null,
      "address": "/Definitions/Headers-and-Signatures/"},
     {"id": "Lean___Parser___Term___strictImplicitBinder-next-next",
      "data": null,
      "address": "/Terms/Functions/"}],
    "Lean.Parser.Term.stateRefT":
    [{"id": "Lean___Parser___Term___stateRefT",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Lean.Parser.Term.show":
    [{"id": "Lean___Parser___Term___show-next",
      "data": null,
      "address": "/Terms/Type-Ascription/"},
     {"id": "Lean___Parser___Term___show",
      "data": null,
      "address": "/Terms/Type-Ascription/"}],
    "Lean.Parser.Term.proj":
    [{"id": "Lean___Parser___Term___proj",
      "data": null,
      "address": "/Terms/Function-Application/"}],
    "Lean.Parser.Term.pipeProj":
    [{"id": "Lean___Parser___Term___pipeProj-next",
      "data": null,
      "address": "/Terms/Function-Application/"},
     {"id": "Lean___Parser___Term___pipeProj",
      "data": null,
      "address": "/Terms/Function-Application/"}],
    "Lean.Parser.Term.paren":
    [{"id": "Lean___Parser___Term___paren",
      "data": null,
      "address": "/Terms/Functions/"}],
    "Lean.Parser.Term.nomatch":
    [{"id": "Lean___Parser___Term___nomatch",
      "data": null,
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.Parser.Term.nofun":
    [{"id": "Lean___Parser___Term___nofun",
      "data": null,
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.Parser.Term.namedPattern":
    [{"id": "Lean___Parser___Term___namedPattern",
      "data": null,
      "address": "/Terms/Pattern-Matching/"},
     {"id": "Lean___Parser___Term___namedPattern-next",
      "data": null,
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.Parser.Term.matchDiscr":
    [{"id": "Lean___Parser___Term___matchDiscr",
      "data": null,
      "address": "/Terms/Pattern-Matching/"},
     {"id": "Lean___Parser___Term___matchDiscr-next",
      "data": null,
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.Parser.Term.match":
    [{"id": "Lean___Parser___Term___match",
      "data": null,
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.Parser.Term.instBinder":
    [{"id": "Lean___Parser___Term___instBinder-next-next",
      "data": null,
      "address": "/Terms/Functions/"},
     {"id": "Lean___Parser___Term___instBinder-next",
      "data": null,
      "address": "/Terms/Functions/"},
     {"id": "Lean___Parser___Term___instBinder",
      "data": null,
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Lean.Parser.Term.inaccessible":
    [{"id": "Lean___Parser___Term___inaccessible",
      "data": null,
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.Parser.Term.implicitBinder":
    [{"id": "Lean___Parser___Term___implicitBinder-next",
      "data": null,
      "address": "/Terms/Functions/"},
     {"id": "Lean___Parser___Term___implicitBinder",
      "data": null,
      "address": "/Definitions/Headers-and-Signatures/"},
     {"id": "Lean___Parser___Term___implicitBinder-next-next",
      "data": null,
      "address": "/Terms/Functions/"}],
    "Lean.Parser.Term.hole":
    [{"id": "Lean___Parser___Term___hole",
      "data": null,
      "address": "/Terms/Holes/"}],
    "Lean.Parser.Term.fun":
    [{"id": "Lean___Parser___Term___fun-next-next-next",
      "data": null,
      "address": "/Terms/Functions/"},
     {"id": "Lean___Parser___Term___fun-next-next",
      "data": null,
      "address": "/Terms/Functions/"},
     {"id": "Lean___Parser___Term___fun-next-next-next-next-next",
      "data": null,
      "address": "/Terms/Pattern-Matching/"},
     {"id": "Lean___Parser___Term___fun",
      "data": null,
      "address": "/Terms/Functions/"},
     {"id": "Lean___Parser___Term___fun-next-next-next-next",
      "data": null,
      "address": "/Terms/Functions/"},
     {"id": "Lean___Parser___Term___fun-next",
      "data": null,
      "address": "/Terms/Functions/"}],
    "Lean.Parser.Term.forall":
    [{"id": "Lean___Parser___Term___forall-next",
      "data": null,
      "address": "/Basic-Propositions/Quantifiers/"},
     {"id": "Lean___Parser___Term___forall-next-next",
      "data": null,
      "address": "/Basic-Propositions/Quantifiers/"},
     {"id": "Lean___Parser___Term___forall-next-next-next",
      "data": null,
      "address": "/Basic-Propositions/Quantifiers/"},
     {"id": "Lean___Parser___Term___forall",
      "data": null,
      "address": "/Basic-Propositions/Quantifiers/"}],
    "Lean.Parser.Term.explicitBinder":
    [{"id": "Lean___Parser___Term___explicitBinder-next",
      "data": null,
      "address": "/Definitions/Headers-and-Signatures/"},
     {"id": "Lean___Parser___Term___explicitBinder",
      "data": null,
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Lean.Parser.Term.doSeqItem":
    [{"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id": "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id": "Lean___Parser___Term___doSeqItem-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id": "Lean___Parser___Term___doSeqItem-next-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id": "Lean___Parser___Term___doSeqItem-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doReassignArrow":
    [{"id": "Lean___Parser___Term___doReassignArrow",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id": "Lean___Parser___Term___doReassignArrow-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doReassign":
    [{"id": "Lean___Parser___Term___doReassign-next",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id": "Lean___Parser___Term___doReassign",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.do":
    [{"id": "Lean___Parser___Term___do",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.depArrow":
    [{"id": "Lean___Parser___Term___depArrow-next-next-next",
      "data": null,
      "address": "/Terms/Function-Types/"},
     {"id": "Lean___Parser___Term___depArrow-next-next",
      "data": null,
      "address": "/Terms/Function-Types/"},
     {"id": "Lean___Parser___Term___depArrow-next-next-next-next-next-next",
      "data": null,
      "address": "/Terms/Function-Types/"},
     {"id": "Lean___Parser___Term___depArrow-next-next-next-next",
      "data": null,
      "address": "/Terms/Function-Types/"},
     {"id":
      "Lean___Parser___Term___depArrow-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Terms/Function-Types/"},
     {"id": "Lean___Parser___Term___depArrow-next",
      "data": null,
      "address": "/Terms/Function-Types/"},
     {"id": "Lean___Parser___Term___depArrow-next-next-next-next-next",
      "data": null,
      "address": "/Terms/Function-Types/"},
     {"id": "Lean___Parser___Term___depArrow",
      "data": null,
      "address": "/Terms/Function-Types/"}],
    "Lean.Parser.Term.byTactic":
    [{"id": "Lean___Parser___Term___byTactic-next",
      "data": null,
      "address": "/Tactic-Proofs/Running-Tactics/"},
     {"id": "Lean___Parser___Term___byTactic-next-next",
      "data": null,
      "address": "/Tactic-Proofs/Running-Tactics/"}],
    "Lean.Parser.Term.borrowed":
    [{"id": "Lean___Parser___Term___borrowed",
      "data": null,
      "address": "/Run-Time-Code/Foreign-Function-Interface/"}],
    "Lean.Parser.Term.attributes":
    [{"id": "Lean___Parser___Term___attributes-next",
      "data": null,
      "address": "/Attributes/"}],
    "Lean.Parser.Term.attrKind":
    [{"id": "Lean___Parser___Term___attrKind-next-next",
      "data": null,
      "address": "/Attributes/"},
     {"id": "Lean___Parser___Term___attrKind-next",
      "data": null,
      "address": "/Attributes/"},
     {"id": "Lean___Parser___Term___attrKind",
      "data": null,
      "address": "/Attributes/"}],
    "Lean.Parser.Term.attrInstance":
    [{"id": "Lean___Parser___Term___attrInstance-next",
      "data": null,
      "address": "/Attributes/"}],
    "Lean.Parser.Term.arrow":
    [{"id": "Lean___Parser___Term___arrow",
      "data": null,
      "address": "/Terms/Function-Types/"}],
    "Lean.Parser.Term.anonymousCtor":
    [{"id": "Lean___Parser___Term___anonymousCtor",
      "data": null,
      "address": "/The-Type-System/Inductive-Types/"}],
    "Lean.Parser.Tactic.simp":
    [{"id": "Lean___Parser___Tactic___simp",
      "data": null,
      "address": "/The-Simplifier/Invoking-the-Simplifier/"}],
    "Lean.Parser.Tactic.optConfig":
    [{"id": "Lean___Parser___Tactic___optConfig-next",
      "data": null,
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.configItem":
    [{"id": "Lean___Parser___Tactic___configItem-next-next",
      "data": null,
      "address": "/Tactic-Proofs/The-Tactic-Language/"},
     {"id": "Lean___Parser___Tactic___configItem-next-next-next-next",
      "data": null,
      "address": "/Tactic-Proofs/The-Tactic-Language/"},
     {"id": "Lean___Parser___Tactic___configItem-next",
      "data": null,
      "address": "/Tactic-Proofs/The-Tactic-Language/"},
     {"id": "Lean___Parser___Tactic___configItem-next-next-next",
      "data": null,
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.Conv.enterArg":
    [{"id": "Lean___Parser___Tactic___Conv___enterArg-next",
      "data": null,
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"},
     {"id": "Lean___Parser___Tactic___Conv___enterArg-next-next",
      "data": null,
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"},
     {"id": "Lean___Parser___Tactic___Conv___enterArg-next-next-next",
      "data": null,
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Syntax.unary":
    [{"id": "Lean___Parser___Syntax___unary",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"},
     {"id": "Lean___Parser___Syntax___unary-next",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"},
     {"id": "Lean___Parser___Syntax___unary-next-next",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.subPrio":
    [{"id": "Lean___Parser___Syntax___subPrio",
      "data": null,
      "address": "/Type-Classes/Instance-Declarations/"}],
    "Lean.Parser.Syntax.subPrec":
    [{"id": "Lean___Parser___Syntax___subPrec",
      "data": null,
      "address": "/Notations-and-Macros/Precedence/"}],
    "Lean.Parser.Syntax.sepBy1":
    [{"id": "Lean___Parser___Syntax___sepBy1",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"},
     {"id": "Lean___Parser___Syntax___sepBy1-next-next",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"},
     {"id": "Lean___Parser___Syntax___sepBy1-next",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.sepBy":
    [{"id": "Lean___Parser___Syntax___sepBy",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"},
     {"id": "Lean___Parser___Syntax___sepBy-next",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"},
     {"id": "Lean___Parser___Syntax___sepBy-next-next",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.paren":
    [{"id": "Lean___Parser___Syntax___paren",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.nonReserved":
    [{"id": "Lean___Parser___Syntax___nonReserved",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.cat":
    [{"id": "Lean___Parser___Syntax___cat",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.binary":
    [{"id": "Lean___Parser___Syntax___binary",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.atom":
    [{"id": "Lean___Parser___Syntax___atom",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.addPrio":
    [{"id": "Lean___Parser___Syntax___addPrio",
      "data": null,
      "address": "/Type-Classes/Instance-Declarations/"}],
    "Lean.Parser.Syntax.addPrec":
    [{"id": "Lean___Parser___Syntax___addPrec",
      "data": null,
      "address": "/Notations-and-Macros/Precedence/"}],
    "Lean.Parser.Module.prelude":
    [{"id": "Lean___Parser___Module___prelude-next",
      "data": null,
      "address": "/Source-Files-and-Modules/"}],
    "Lean.Parser.Module.module":
    [{"id": "Lean___Parser___Module___module-next",
      "data": null,
      "address": "/Source-Files-and-Modules/"}],
    "Lean.Parser.Module.import":
    [{"id": "Lean___Parser___Module___import-next",
      "data": null,
      "address": "/Source-Files-and-Modules/"}],
    "Lean.Parser.Module.header":
    [{"id": "Lean___Parser___Module___header-next-next",
      "data": null,
      "address": "/Source-Files-and-Modules/"},
     {"id": "Lean___Parser___Module___header-next",
      "data": null,
      "address": "/Source-Files-and-Modules/"}],
    "Lean.Parser.Command.where":
    [{"id": "Lean___Parser___Command___where",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.version":
    [{"id": "Lean___Parser___Command___version",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.variable":
    [{"id": "Lean___Parser___Command___variable",
      "data": null,
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.universe":
    [{"id": "Lean___Parser___Command___universe-next",
      "data": null,
      "address": "/The-Type-System/Universes/"}],
    "Lean.Parser.Command.synth":
    [{"id": "Lean___Parser___Command___synth",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.syntaxCat":
    [{"id": "Lean___Parser___Command___syntaxCat",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Command.syntax":
    [{"id": "Lean___Parser___Command___syntax",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Command.section":
    [{"id": "Lean___Parser___Command___section",
      "data": null,
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.printEqns":
    [{"id": "Lean___Parser___Command___printEqns",
      "data": null,
      "address": "/Interacting-with-Lean/"},
     {"id": "Lean___Parser___Command___printEqns-next",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.printAxioms":
    [{"id": "Lean___Parser___Command___printAxioms",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.print":
    [{"id": "Lean___Parser___Command___print",
      "data": null,
      "address": "/Interacting-with-Lean/"},
     {"id": "Lean___Parser___Command___print-next",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.optDeriving":
    [{"id": "Lean___Parser___Command___optDeriving-next",
      "data": null,
      "address": "/Type-Classes/Deriving-Instances/"}],
    "Lean.Parser.Command.optDeclSig":
    [{"id": "Lean___Parser___Command___optDeclSig",
      "data": null,
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Lean.Parser.Command.openSimple":
    [{"id": "Lean___Parser___Command___openSimple",
      "data": null,
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.openScoped":
    [{"id": "Lean___Parser___Command___openScoped",
      "data": null,
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.openRenaming":
    [{"id": "Lean___Parser___Command___openRenaming",
      "data": null,
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.openOnly":
    [{"id": "Lean___Parser___Command___openOnly",
      "data": null,
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.openHiding":
    [{"id": "Lean___Parser___Command___openHiding",
      "data": null,
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.open":
    [{"id": "Lean___Parser___Command___open",
      "data": null,
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.notation":
    [{"id": "Lean___Parser___Command___notation",
      "data": null,
      "address": "/Notations-and-Macros/Notations/"}],
    "Lean.Parser.Command.namespace":
    [{"id": "Lean___Parser___Command___namespace",
      "data": null,
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.mutual":
    [{"id": "Lean___Parser___Command___mutual",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Parser.Command.mixfix":
    [{"id": "Lean___Parser___Command___mixfix-next-next-next-next",
      "data": null,
      "address": "/Notations-and-Macros/Custom-Operators/"},
     {"id": "Lean___Parser___Command___mixfix-next-next-next",
      "data": null,
      "address": "/Notations-and-Macros/Custom-Operators/"},
     {"id": "Lean___Parser___Command___mixfix",
      "data": null,
      "address": "/Notations-and-Macros/Custom-Operators/"},
     {"id": "Lean___Parser___Command___mixfix-next-next",
      "data": null,
      "address": "/Notations-and-Macros/Custom-Operators/"},
     {"id": "Lean___Parser___Command___mixfix-next",
      "data": null,
      "address": "/Notations-and-Macros/Custom-Operators/"}],
    "Lean.Parser.Command.macro_rules":
    [{"id": "Lean___Parser___Command___macro_rules",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Parser.Command.macroArg":
    [{"id": "Lean___Parser___Command___macroArg-next",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"},
     {"id": "Lean___Parser___Command___macroArg-next-next",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Parser.Command.macro":
    [{"id": "Lean___Parser___Command___macro",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Parser.Command.instance":
    [{"id": "Lean___Parser___Command___instance-next-next",
      "data": null,
      "address": "/Type-Classes/Instance-Declarations/"},
     {"id": "Lean___Parser___Command___instance-next-next-next",
      "data": null,
      "address": "/Type-Classes/Instance-Declarations/"},
     {"id": "Lean___Parser___Command___instance-next",
      "data": null,
      "address": "/Type-Classes/Instance-Declarations/"}],
    "Lean.Parser.Command.initialize":
    [{"id": "Lean___Parser___Command___initialize-next-next",
      "data": null,
      "address": "/Elaboration-and-Compilation/"},
     {"id": "Lean___Parser___Command___initialize-next",
      "data": null,
      "address": "/Elaboration-and-Compilation/"},
     {"id": "Lean___Parser___Command___initialize-next-next-next",
      "data": null,
      "address": "/Elaboration-and-Compilation/"},
     {"id": "Lean___Parser___Command___initialize",
      "data": null,
      "address": "/Elaboration-and-Compilation/"}],
    "Lean.Parser.Command.in":
    [{"id": "Lean___Parser___Command___in",
      "data": null,
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.identPrec":
    [{"id": "Lean___Parser___Command___identPrec",
      "data": null,
      "address": "/Notations-and-Macros/Notations/"}],
    "Lean.Parser.Command.grindPattern":
    [{"id": "Lean___Parser___Command___grindPattern",
      "data": null,
      "address": "/The--grind--tactic/E___matching/"}],
    "Lean.Parser.Command.export":
    [{"id": "Lean___Parser___Command___export",
      "data": null,
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.evalBang":
    [{"id": "Lean___Parser___Command___evalBang",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.eval":
    [{"id": "Lean___Parser___Command___eval",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.eraseAttr":
    [{"id": "Lean___Parser___Command___eraseAttr-next",
      "data": null,
      "address": "/Attributes/"}],
    "Lean.Parser.Command.end":
    [{"id": "Lean___Parser___Command___end-next",
      "data": null,
      "address": "/Namespaces-and-Sections/"},
     {"id": "Lean___Parser___Command___end",
      "data": null,
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.elab_rules":
    [{"id": "Lean___Parser___Command___elab_rules",
      "data": null,
      "address": "/Notations-and-Macros/Elaborators/"}],
    "Lean.Parser.Command.docComment":
    [{"id": "Lean___Parser___Command___docComment",
      "data": null,
      "address": "/Definitions/Modifiers/"}],
    "Lean.Parser.Command.deriving":
    [{"id": "Lean___Parser___Command___deriving-next",
      "data": null,
      "address": "/Type-Classes/Deriving-Instances/"}],
    "Lean.Parser.Command.declaration":
    [{"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Definitions/Example-Declarations/"},
     {"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Type-Classes/Class-Declarations/"},
     {"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Definitions/Example-Declarations/"},
     {"id": "Lean___Parser___Command___declaration-next",
      "data": null,
      "address": "/The-Type-System/Inductive-Types/"},
     {"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Definitions/Theorems/"},
     {"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Type-Classes/Class-Declarations/"},
     {"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Definitions/Definitions/"},
     {"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Definitions/Definitions/"},
     {"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Definitions/Example-Declarations/"},
     {"id": "Lean___Parser___Command___declaration-next-next-next",
      "data": null,
      "address": "/Definitions/Definitions/"},
     {"id": "Lean___Parser___Command___declaration-next-next-next-next-next",
      "data": null,
      "address": "/Definitions/Definitions/"},
     {"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Definitions/Definitions/"},
     {"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Definitions/Theorems/"},
     {"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Definitions/Definitions/"},
     {"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Definitions/Definitions/"},
     {"id": "Lean___Parser___Command___declaration",
      "data": null,
      "address": "/The-Type-System/Inductive-Types/"},
     {"id": "Lean___Parser___Command___declaration-next-next-next-next",
      "data": null,
      "address": "/Definitions/Definitions/"},
     {"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Definitions/Theorems/"}],
    "Lean.Parser.Command.declSig":
    [{"id": "Lean___Parser___Command___declSig",
      "data": null,
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Lean.Parser.Command.declModifiers":
    [{"id": "Lean___Parser___Command___declModifiers",
      "data": null,
      "address": "/Definitions/Modifiers/"}],
    "Lean.Parser.Command.declId":
    [{"id": "Lean___Parser___Command___declId",
      "data": null,
      "address": "/Definitions/Headers-and-Signatures/"},
     {"id": "Lean___Parser___Command___declId-next",
      "data": null,
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Lean.Parser.Command.check_failure":
    [{"id": "Lean___Parser___Command___check_failure",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.check":
    [{"id": "Lean___Parser___Command___check",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.axiom":
    [{"id": "Lean___Parser___Command___axiom-next",
      "data": null,
      "address": "/Axioms/"}],
    "Lean.Parser.Command.attribute":
    [{"id": "Lean___Parser___Command___attribute",
      "data": null,
      "address": "/Attributes/"}],
    "Lean.Parser.Attr.wf_preprocess":
    [{"id": "Lean___Parser___Attr___wf_preprocess",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Parser.Attr.simple":
    [{"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Notations-and-Macros/Elaborators/"},
     {"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"},
     {"id": "Lean___Parser___Attr___simple-next-next-next-next",
      "data": null,
      "address": "/Terms/Function-Application/"},
     {"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"},
     {"id": "Lean___Parser___Attr___simple-next-next",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "Lean___Parser___Attr___simple-next-next-next",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"},
     {"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"},
     {"id": "Lean___Parser___Attr___simple-next-next-next-next-next",
      "data": null,
      "address": "/Terms/Pattern-Matching/"},
     {"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"},
     {"id": "Lean___Parser___Attr___simple-next-next-next-next-next-next",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"},
     {"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Notations-and-Macros/Elaborators/"},
     {"id": "Lean___Parser___Attr___simple",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"},
     {"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"},
     {"id": "Lean___Parser___Attr___simple-next",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"},
     {"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/Notations-and-Macros/Elaborators/"}],
    "Lean.Parser.Attr.simp":
    [{"id": "Lean___Parser___Attr___simp-next-next",
      "data": null,
      "address": "/The-Simplifier/Simp-sets/"},
     {"id": "Lean___Parser___Attr___simp",
      "data": null,
      "address": "/The-Simplifier/Simp-sets/"},
     {"id": "Lean___Parser___Attr___simp-next",
      "data": null,
      "address": "/The-Simplifier/Simp-sets/"},
     {"id": "Lean___Parser___Attr___simp-next-next-next",
      "data": null,
      "address": "/The-Simplifier/Simp-sets/"}],
    "Lean.Parser.Attr.macro":
    [{"id": "Lean___Parser___Attr___macro",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Parser.Attr.instance":
    [{"id": "Lean___Parser___Attr___instance",
      "data": null,
      "address": "/Type-Classes/Instance-Declarations/"}],
    "Lean.Parser.Attr.grindMod":
    [{"id": "Lean___Parser___Attr___grindMod-next",
      "data": null,
      "address": "/The--grind--tactic/E___matching/"},
     {"id": "Lean___Parser___Attr___grindMod-next-next-next",
      "data": null,
      "address": "/The--grind--tactic/E___matching/"},
     {"id":
      "Lean___Parser___Attr___grindMod-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/The--grind--tactic/E___matching/"},
     {"id":
      "Lean___Parser___Attr___grindMod-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/The--grind--tactic/E___matching/"},
     {"id":
      "Lean___Parser___Attr___grindMod-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/The--grind--tactic/E___matching/"},
     {"id":
      "Lean___Parser___Attr___grindMod-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/The--grind--tactic/E___matching/"},
     {"id":
      "Lean___Parser___Attr___grindMod-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data": null,
      "address": "/The--grind--tactic/E___matching/"},
     {"id":
      "Lean___Parser___Attr___grindMod-next-next-next-next-next-next-next",
      "data": null,
      "address": "/The--grind--tactic/E___matching/"},
     {"id": "Lean___Parser___Attr___grindMod-next-next-next-next-next",
      "data": null,
      "address": "/The--grind--tactic/E___matching/"}],
    "Lean.Parser.Attr.grind?":
    [{"id": "Lean___Parser___Attr___grind___",
      "data": null,
      "address": "/The--grind--tactic/E___matching/"}],
    "Lean.Parser.Attr.grind":
    [{"id": "Lean___Parser___Attr___grind-next",
      "data": null,
      "address": "/The--grind--tactic/E___matching/"},
     {"id": "Lean___Parser___Attr___grind",
      "data": null,
      "address": "/The--grind--tactic/Case-Analysis/"}],
    "Lean.Parser.Attr.extern":
    [{"id": "Lean___Parser___Attr___extern",
      "data": null,
      "address": "/Run-Time-Code/Foreign-Function-Interface/"}],
    "Lean.Parser.Attr.export":
    [{"id": "Lean___Parser___Attr___export",
      "data": null,
      "address": "/Run-Time-Code/Foreign-Function-Interface/"}],
    "Lean.Parser.Attr.default_instance":
    [{"id": "Lean___Parser___Attr___default_instance",
      "data": null,
      "address": "/Type-Classes/Instance-Declarations/"}],
    "Lean.Attr.coe":
    [{"id": "Lean___Attr___coe",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Lake.DSL.targetCommand":
    [{"id": "Lake___DSL___targetCommand",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.scriptDecl":
    [{"id": "Lake___DSL___scriptDecl",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.runIO":
    [{"id": "Lake___DSL___runIO",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.requireDecl":
    [{"id": "Lake___DSL___requireDecl",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.postUpdateDecl":
    [{"id": "Lake___DSL___postUpdateDecl",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.packageFacetDecl":
    [{"id": "Lake___DSL___packageFacetDecl",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.packageCommand":
    [{"id": "Lake___DSL___packageCommand",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id": "Lake___DSL___packageCommand-next-next",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id": "Lake___DSL___packageCommand-next",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.moduleFacetDecl":
    [{"id": "Lake___DSL___moduleFacetDecl",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.metaIf":
    [{"id": "Lake___DSL___metaIf",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.libraryFacetDecl":
    [{"id": "Lake___DSL___libraryFacetDecl",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.leanLibCommand":
    [{"id": "Lake___DSL___leanLibCommand-next",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id": "Lake___DSL___leanLibCommand",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id": "Lake___DSL___leanLibCommand-next-next",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.leanExeCommand":
    [{"id": "Lake___DSL___leanExeCommand-next-next",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id": "Lake___DSL___leanExeCommand-next",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id": "Lake___DSL___leanExeCommand",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.getConfig":
    [{"id": "Lake___DSL___getConfig",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.fromClause":
    [{"id": "Lake___DSL___fromClause-next",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id": "Lake___DSL___fromClause",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.externLibCommand":
    [{"id": "Lake___DSL___externLibCommand",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.dirConst":
    [{"id": "Lake___DSL___dirConst",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.declField":
    [{"id": "Lake___DSL___declField-next",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.cmdDo":
    [{"id": "Lake___DSL___cmdDo-next",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id": "Lake___DSL___cmdDo",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Int.«term-[_+1]»":
    [{"id": "Int____FLQQ_term-_LSQ_____1_RSQ__FLQQ_",
      "data": null,
      "address": "/Basic-Types/Integers/"}],
    "Bool.«term_^^_»":
    [{"id": "Bool____FLQQ_term_________FLQQ_",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "BitVec.«term__#__»":
    [{"id": "BitVec____FLQQ_term________FLQQ_",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.«term__#'__»":
    [{"id": "BitVec____FLQQ_term___________FLQQ_",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "Array.«term__[_:_]»":
    [{"id": "Array____FLQQ_term___LSQ_______RSQ__FLQQ_",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.«term__[_:]»":
    [{"id": "Array____FLQQ_term___LSQ______RSQ__FLQQ_",
      "data": null,
      "address": "/Basic-Types/Arrays/"}]}},
  "Verso.Genre.Manual.doc.option":
  {"title": "Compiler options",
   "description": "Compiler options",
   "contents":
   {"trace.grind.split":
    [{"id": "trace___grind___split",
      "data": null,
      "address": "/The--grind--tactic/Case-Analysis/"}],
    "trace.grind.ematch.instance":
    [{"id": "trace___grind___ematch___instance",
      "data": null,
      "address": "/The--grind--tactic/E___matching/"}],
    "trace.compiler.ir.result":
    [{"id": "trace___compiler___ir___result",
      "data": null,
      "address": "/Run-Time-Code/Reference-Counting/"}],
    "trace.Meta.Tactic.simp.rewrite":
    [{"id": "trace___Meta___Tactic___simp___rewrite",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "trace.Meta.Tactic.simp.discharge":
    [{"id": "trace___Meta___Tactic___simp___discharge",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "trace.Elab.definition.wf":
    [{"id": "trace___Elab___definition___wf",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "tactic.skipAssignedInstances":
    [{"id": "tactic___skipAssignedInstances",
      "data": null,
      "address": "/Tactic-Proofs/Options/"}],
    "tactic.simp.trace":
    [{"id": "tactic___simp___trace-next",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"},
     {"id": "tactic___simp___trace",
      "data": null,
      "address": "/Tactic-Proofs/Options/"}],
    "tactic.hygienic":
    [{"id": "tactic___hygienic",
      "data": null,
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "tactic.customEliminators":
    [{"id": "tactic___customEliminators",
      "data": null,
      "address": "/Tactic-Proofs/Options/"}],
    "synthInstance.maxSize":
    [{"id": "synthInstance___maxSize",
      "data": null,
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "synthInstance.maxHeartbeats":
    [{"id": "synthInstance___maxHeartbeats",
      "data": null,
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "simprocs":
    [{"id": "simprocs",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "relaxedAutoImplicit":
    [{"id": "relaxedAutoImplicit",
      "data": null,
      "address": "/Definitions/Headers-and-Signatures/"}],
    "pp.proofs.threshold":
    [{"id": "pp___proofs___threshold",
      "data": null,
      "address": "/Tactic-Proofs/Reading-Proof-States/"}],
    "pp.proofs":
    [{"id": "pp___proofs",
      "data": null,
      "address": "/Tactic-Proofs/Reading-Proof-States/"}],
    "pp.mvars":
    [{"id": "pp___mvars",
      "data": null,
      "address": "/Tactic-Proofs/Reading-Proof-States/"}],
    "pp.maxSteps":
    [{"id": "pp___maxSteps",
      "data": null,
      "address": "/Tactic-Proofs/Reading-Proof-States/"}],
    "pp.match":
    [{"id": "pp___match",
      "data": null,
      "address": "/Elaboration-and-Compilation/"}],
    "pp.fieldNotation":
    [{"id": "pp___fieldNotation",
      "data": null,
      "address": "/Terms/Function-Application/"}],
    "pp.deepTerms.threshold":
    [{"id": "pp___deepTerms___threshold",
      "data": null,
      "address": "/Tactic-Proofs/Reading-Proof-States/"}],
    "pp.deepTerms":
    [{"id": "pp___deepTerms",
      "data": null,
      "address": "/Tactic-Proofs/Reading-Proof-States/"}],
    "linter.unnecessarySimpa":
    [{"id": "linter___unnecessarySimpa",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "inductive.autoPromoteIndices":
    [{"id": "inductive___autoPromoteIndices",
      "data": null,
      "address": "/The-Type-System/Inductive-Types/"}],
    "guard_msgs.diff":
    [{"id": "guard_msgs___diff",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "eval.type":
    [{"id": "eval___type",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "eval.pp":
    [{"id": "eval___pp", "data": null, "address": "/Interacting-with-Lean/"}],
    "eval.derive.repr":
    [{"id": "eval___derive___repr",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "bootstrap.inductiveCheckResultingUniverse":
    [{"id": "bootstrap___inductiveCheckResultingUniverse",
      "data": null,
      "address": "/The-Type-System/Inductive-Types/"}],
    "backward.synthInstance.canonInstances":
    [{"id": "backward___synthInstance___canonInstances",
      "data": null,
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "autoLift":
    [{"id": "autoLift",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "autoImplicit":
    [{"id": "autoImplicit",
      "data": null,
      "address": "/Definitions/Headers-and-Signatures/"}],
    "allowUnsafeReducibility":
    [{"id": "allowUnsafeReducibility",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}]}},
  "Verso.Genre.Manual.doc":
  {"title": "Lean constant reference",
   "description": "Lean constant reference",
   "contents":
   {"withTheReader":
    [{"id": "withTheReader",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "wfParam":
    [{"id": "wfParam",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "unsafeIO":
    [{"id": "unsafeIO",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "unsafeEIO":
    [{"id": "unsafeEIO",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "unsafeCast":
    [{"id": "unsafeCast",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "unsafeBaseIO":
    [{"id": "unsafeBaseIO",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "type_eq_of_heq":
    [{"id": "type_eq_of_heq",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "tryCatchThe":
    [{"id": "tryCatchThe",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "throwThe":
    [{"id": "throwThe",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "stdSplit":
    [{"id": "stdSplit", "data": null, "address": "/IO/Random-Numbers/"}],
    "stdRange":
    [{"id": "stdRange", "data": null, "address": "/IO/Random-Numbers/"}],
    "stdNext":
    [{"id": "stdNext", "data": null, "address": "/IO/Random-Numbers/"}],
    "semiOutParam":
    [{"id": "semiOutParam",
      "data": null,
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "runST":
    [{"id": "runST", "data": null, "address": "/IO/Mutable-References/"}],
    "runEST":
    [{"id": "runEST", "data": null, "address": "/IO/Mutable-References/"}],
    "rfl":
    [{"id": "rfl-next",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "reprStr":
    [{"id": "reprStr", "data": null, "address": "/Interacting-with-Lean/"}],
    "reprArg":
    [{"id": "reprArg", "data": null, "address": "/Interacting-with-Lean/"}],
    "repr":
    [{"id": "repr-next", "data": null, "address": "/Interacting-with-Lean/"}],
    "readThe":
    [{"id": "readThe",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "randNat":
    [{"id": "randNat", "data": null, "address": "/IO/Random-Numbers/"}],
    "randBool":
    [{"id": "randBool", "data": null, "address": "/IO/Random-Numbers/"}],
    "ptrEqList":
    [{"id": "ptrEqList",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "ptrEq":
    [{"id": "ptrEq",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "ptrAddrUnsafe":
    [{"id": "ptrAddrUnsafe",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "propext":
    [{"id": "propext",
      "data": null,
      "address": "/The-Type-System/Propositions/"}],
    "outParam":
    [{"id": "outParam",
      "data": null,
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "orM":
    [{"id": "orM",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/API-Reference/"}],
    "optional":
    [{"id": "optional",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/API-Reference/"}],
    "optParam":
    [{"id": "optParam",
      "data": null,
      "address": "/Terms/Function-Application/"}],
    "notM":
    [{"id": "notM",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/API-Reference/"}],
    "modifyThe":
    [{"id": "modifyThe",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "modifyGetThe":
    [{"id": "modifyGetThe",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "modify":
    [{"id": "modify",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "mkStdGen":
    [{"id": "mkStdGen", "data": null, "address": "/IO/Random-Numbers/"}],
    "mixHash":
    [{"id": "mixHash",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "minOfLe":
    [{"id": "minOfLe",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "maxOfLe":
    [{"id": "maxOfLe",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "ltOfOrd":
    [{"id": "ltOfOrd",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "leOfOrd":
    [{"id": "leOfOrd",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "isExclusiveUnsafe":
    [{"id": "isExclusiveUnsafe",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "invImage":
    [{"id": "invImage",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "inferInstanceAs":
    [{"id": "inferInstanceAs",
      "data": null,
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "inferInstance":
    [{"id": "inferInstance",
      "data": null,
      "address": "/Type-Classes/Instance-Synthesis/"}],
    "heq_of_heq_of_eq":
    [{"id": "heq_of_heq_of_eq",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "heq_of_eqRec_eq":
    [{"id": "heq_of_eqRec_eq",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "heq_of_eq":
    [{"id": "heq_of_eq",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "hash_eq":
    [{"id": "hash_eq",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "guard":
    [{"id": "guard",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/API-Reference/"}],
    "getThe":
    [{"id": "getThe",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "getModify":
    [{"id": "getModify",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "funext":
    [{"id": "funext",
      "data": null,
      "address": "/The-Type-System/Functions/"}],
    "eq_of_heq":
    [{"id": "eq_of_heq",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "eqRec_heq":
    [{"id": "eqRec_heq",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "dbgTraceIfShared":
    [{"id": "dbgTraceIfShared",
      "data": null,
      "address": "/Run-Time-Code/Reference-Counting/"}],
    "controlAt":
    [{"id": "controlAt",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "control":
    [{"id": "control",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "congrFun":
    [{"id": "congrFun",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "congrArg":
    [{"id": "congrArg",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "congr":
    [{"id": "congr-next",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "cond":
    [{"id": "cond", "data": null, "address": "/Basic-Types/Booleans/"}],
    "compareOn":
    [{"id": "compareOn",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "compareOfLessAndEq":
    [{"id": "compareOfLessAndEq",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "compareOfLessAndBEq":
    [{"id": "compareOfLessAndBEq",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "compareLex":
    [{"id": "compareLex",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "cast_heq":
    [{"id": "cast_heq",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "cast":
    [{"id": "cast",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "binderNameHint":
    [{"id": "binderNameHint",
      "data": null,
      "address": "/Tactic-Proofs/Naming-Bound-Variables/"}],
    "autoParam":
    [{"id": "autoParam",
      "data": null,
      "address": "/Terms/Function-Application/"}],
    "andM":
    [{"id": "andM",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/API-Reference/"}],
    "absurd":
    [{"id": "absurd",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "[anonymous]":
    [{"id": "IO___Process___SpawnArgs___mk",
      "data": null,
      "address": "/IO/Processes/"},
     {"id": "Lean___Grind___CommRing___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"},
     {"id": "Applicative___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"},
     {"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"},
     {"id": "Lean___Grind___NatModule___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"},
     {"id": "Monad___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"},
     {"id": "LawfulApplicative___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"},
     {"id": "Lean___Grind___Field___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"},
     {"id": "Lean___Grind___IntModule___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"},
     {"id": "Lean___Order___CCPO___mk",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"},
     {"id": "Lean___Grind___CommSemiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"},
     {"id": "Lean___Grind___PartialOrder___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"},
     {"id": "GetElem______mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"},
     {"id": "LawfulMonad___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"},
     {"id": "Lake___LeanExeConfig___mk",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id": "EquivBEq___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"},
     {"id": "Lean___Grind___OrderedRing___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"},
     {"id": "Lean___Grind___LinearOrder___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"},
     {"id": "Lean___Grind___Ring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"},
     {"id": "Lake___LeanLibConfig___mk",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id": "LawfulBEq___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"},
     {"id": "Alternative___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Zero.zero":
    [{"id": "Zero___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Zero.mk":
    [{"id": "Zero___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Zero":
    [{"id": "Zero___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "WellFoundedRelation.wf":
    [{"id": "WellFoundedRelation___mk",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "WellFoundedRelation.rel":
    [{"id": "WellFoundedRelation___mk",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "WellFoundedRelation.mk":
    [{"id": "WellFoundedRelation___mk",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "WellFoundedRelation":
    [{"id": "WellFoundedRelation___mk",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "WellFounded.intro":
    [{"id": "WellFounded___intro",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "WellFounded.fix":
    [{"id": "WellFounded___fix",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "WellFounded":
    [{"id": "WellFounded___intro",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Unit.unit":
    [{"id": "Unit___unit",
      "data": null,
      "address": "/Basic-Types/The-Unit-Type/"}],
    "Unit":
    [{"id": "Unit", "data": null, "address": "/Basic-Types/The-Unit-Type/"}],
    "USize.xor":
    [{"id": "USize___xor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.toUInt8":
    [{"id": "USize___toUInt8",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.toUInt64":
    [{"id": "USize___toUInt64",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.toUInt32":
    [{"id": "USize___toUInt32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.toUInt16":
    [{"id": "USize___toUInt16",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.toNat":
    [{"id": "USize___toNat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.toISize":
    [{"id": "USize___toISize",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.toFloat32":
    [{"id": "USize___toFloat32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.toFloat":
    [{"id": "USize___toFloat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.toFin":
    [{"id": "USize___toFin",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.toBitVec":
    [{"id": "USize___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.sub":
    [{"id": "USize___sub",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.size":
    [{"id": "USize___size",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.shiftRight":
    [{"id": "USize___shiftRight",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.shiftLeft":
    [{"id": "USize___shiftLeft",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.repr":
    [{"id": "USize___repr",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.ofNatTruncate":
    [{"id": "USize___ofNatTruncate",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.ofNatLT":
    [{"id": "USize___ofNatLT",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.ofNat32":
    [{"id": "USize___ofNat32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.ofNat":
    [{"id": "USize___ofNat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.ofFin":
    [{"id": "USize___ofFin",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.ofBitVec":
    [{"id": "USize___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.neg":
    [{"id": "USize___neg",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.mul":
    [{"id": "USize___mul",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.mod":
    [{"id": "USize___mod",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.lt":
    [{"id": "USize___lt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.lor":
    [{"id": "USize___lor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.log2":
    [{"id": "USize___log2",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.le":
    [{"id": "USize___le",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.land":
    [{"id": "USize___land",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.div":
    [{"id": "USize___div",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.decLt":
    [{"id": "USize___decLt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.decLe":
    [{"id": "USize___decLe",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.decEq":
    [{"id": "USize___decEq",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.complement":
    [{"id": "USize___complement",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize.add":
    [{"id": "USize___add",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "USize":
    [{"id": "USize___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ULift.up":
    [{"id": "ULift___up",
      "data": null,
      "address": "/The-Type-System/Universes/"}],
    "ULift.down":
    [{"id": "ULift___up",
      "data": null,
      "address": "/The-Type-System/Universes/"}],
    "ULift":
    [{"id": "ULift___up",
      "data": null,
      "address": "/The-Type-System/Universes/"}],
    "UInt8.xor":
    [{"id": "UInt8___xor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.toUSize":
    [{"id": "UInt8___toUSize",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.toUInt64":
    [{"id": "UInt8___toUInt64",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.toUInt32":
    [{"id": "UInt8___toUInt32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.toUInt16":
    [{"id": "UInt8___toUInt16",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.toNat":
    [{"id": "UInt8___toNat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.toInt8":
    [{"id": "UInt8___toInt8",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.toFloat32":
    [{"id": "UInt8___toFloat32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.toFloat":
    [{"id": "UInt8___toFloat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.toFin":
    [{"id": "UInt8___toFin",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.toBitVec":
    [{"id": "UInt8___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.sub":
    [{"id": "UInt8___sub",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.size":
    [{"id": "UInt8___size",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.shiftRight":
    [{"id": "UInt8___shiftRight",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.shiftLeft":
    [{"id": "UInt8___shiftLeft",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.ofNatTruncate":
    [{"id": "UInt8___ofNatTruncate",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.ofNatLT":
    [{"id": "UInt8___ofNatLT",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.ofNat":
    [{"id": "UInt8___ofNat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.ofFin":
    [{"id": "UInt8___ofFin",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.ofBitVec":
    [{"id": "UInt8___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.neg":
    [{"id": "UInt8___neg",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.mul":
    [{"id": "UInt8___mul",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.mod":
    [{"id": "UInt8___mod",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.lt":
    [{"id": "UInt8___lt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.lor":
    [{"id": "UInt8___lor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.log2":
    [{"id": "UInt8___log2",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.le":
    [{"id": "UInt8___le",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.land":
    [{"id": "UInt8___land",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.div":
    [{"id": "UInt8___div",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.decLt":
    [{"id": "UInt8___decLt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.decLe":
    [{"id": "UInt8___decLe",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.decEq":
    [{"id": "UInt8___decEq",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.complement":
    [{"id": "UInt8___complement",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8.add":
    [{"id": "UInt8___add",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt8":
    [{"id": "UInt8___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.xor":
    [{"id": "UInt64___xor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.toUSize":
    [{"id": "UInt64___toUSize",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.toUInt8":
    [{"id": "UInt64___toUInt8",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.toUInt32":
    [{"id": "UInt64___toUInt32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.toUInt16":
    [{"id": "UInt64___toUInt16",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.toNat":
    [{"id": "UInt64___toNat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.toInt64":
    [{"id": "UInt64___toInt64",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.toFloat32":
    [{"id": "UInt64___toFloat32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.toFloat":
    [{"id": "UInt64___toFloat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.toFin":
    [{"id": "UInt64___toFin",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.toBitVec":
    [{"id": "UInt64___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.sub":
    [{"id": "UInt64___sub",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.size":
    [{"id": "UInt64___size",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.shiftRight":
    [{"id": "UInt64___shiftRight",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.shiftLeft":
    [{"id": "UInt64___shiftLeft",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.ofNatTruncate":
    [{"id": "UInt64___ofNatTruncate",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.ofNatLT":
    [{"id": "UInt64___ofNatLT",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.ofNat":
    [{"id": "UInt64___ofNat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.ofFin":
    [{"id": "UInt64___ofFin",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.ofBitVec":
    [{"id": "UInt64___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.neg":
    [{"id": "UInt64___neg",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.mul":
    [{"id": "UInt64___mul",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.mod":
    [{"id": "UInt64___mod",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.lt":
    [{"id": "UInt64___lt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.lor":
    [{"id": "UInt64___lor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.log2":
    [{"id": "UInt64___log2",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.le":
    [{"id": "UInt64___le",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.land":
    [{"id": "UInt64___land",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.div":
    [{"id": "UInt64___div",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.decLt":
    [{"id": "UInt64___decLt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.decLe":
    [{"id": "UInt64___decLe",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.decEq":
    [{"id": "UInt64___decEq",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.complement":
    [{"id": "UInt64___complement",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64.add":
    [{"id": "UInt64___add",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt64":
    [{"id": "UInt64___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.xor":
    [{"id": "UInt32___xor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.toUSize":
    [{"id": "UInt32___toUSize",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.toUInt8":
    [{"id": "UInt32___toUInt8",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.toUInt64":
    [{"id": "UInt32___toUInt64",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.toUInt16":
    [{"id": "UInt32___toUInt16",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.toNat":
    [{"id": "UInt32___toNat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.toInt32":
    [{"id": "UInt32___toInt32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.toFloat32":
    [{"id": "UInt32___toFloat32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.toFloat":
    [{"id": "UInt32___toFloat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.toFin":
    [{"id": "UInt32___toFin",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.toBitVec":
    [{"id": "UInt32___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.sub":
    [{"id": "UInt32___sub",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.size":
    [{"id": "UInt32___size",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.shiftRight":
    [{"id": "UInt32___shiftRight",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.shiftLeft":
    [{"id": "UInt32___shiftLeft",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.ofNatTruncate":
    [{"id": "UInt32___ofNatTruncate",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.ofNatLT":
    [{"id": "UInt32___ofNatLT",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.ofNat":
    [{"id": "UInt32___ofNat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.ofFin":
    [{"id": "UInt32___ofFin",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.ofBitVec":
    [{"id": "UInt32___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.neg":
    [{"id": "UInt32___neg",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.mul":
    [{"id": "UInt32___mul",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.mod":
    [{"id": "UInt32___mod",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.lt":
    [{"id": "UInt32___lt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.lor":
    [{"id": "UInt32___lor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.log2":
    [{"id": "UInt32___log2",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.le":
    [{"id": "UInt32___le",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.land":
    [{"id": "UInt32___land",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.isValidChar":
    [{"id": "UInt32___isValidChar",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.div":
    [{"id": "UInt32___div",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.decLt":
    [{"id": "UInt32___decLt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.decLe":
    [{"id": "UInt32___decLe",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.decEq":
    [{"id": "UInt32___decEq",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.complement":
    [{"id": "UInt32___complement",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32.add":
    [{"id": "UInt32___add",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt32":
    [{"id": "UInt32___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.xor":
    [{"id": "UInt16___xor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.toUSize":
    [{"id": "UInt16___toUSize",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.toUInt8":
    [{"id": "UInt16___toUInt8",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.toUInt64":
    [{"id": "UInt16___toUInt64",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.toUInt32":
    [{"id": "UInt16___toUInt32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.toNat":
    [{"id": "UInt16___toNat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.toInt16":
    [{"id": "UInt16___toInt16",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.toFloat32":
    [{"id": "UInt16___toFloat32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.toFloat":
    [{"id": "UInt16___toFloat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.toFin":
    [{"id": "UInt16___toFin",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.toBitVec":
    [{"id": "UInt16___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.sub":
    [{"id": "UInt16___sub",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.size":
    [{"id": "UInt16___size",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.shiftRight":
    [{"id": "UInt16___shiftRight",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.shiftLeft":
    [{"id": "UInt16___shiftLeft",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.ofNatTruncate":
    [{"id": "UInt16___ofNatTruncate",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.ofNatLT":
    [{"id": "UInt16___ofNatLT",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.ofNat":
    [{"id": "UInt16___ofNat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.ofFin":
    [{"id": "UInt16___ofFin",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.ofBitVec":
    [{"id": "UInt16___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.neg":
    [{"id": "UInt16___neg",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.mul":
    [{"id": "UInt16___mul",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.mod":
    [{"id": "UInt16___mod",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.lt":
    [{"id": "UInt16___lt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.lor":
    [{"id": "UInt16___lor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.log2":
    [{"id": "UInt16___log2",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.le":
    [{"id": "UInt16___le",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.land":
    [{"id": "UInt16___land",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.div":
    [{"id": "UInt16___div",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.decLt":
    [{"id": "UInt16___decLt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.decLe":
    [{"id": "UInt16___decLe",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.decEq":
    [{"id": "UInt16___decEq",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.complement":
    [{"id": "UInt16___complement",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16.add":
    [{"id": "UInt16___add",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "UInt16":
    [{"id": "UInt16___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "True.intro":
    [{"id": "True___intro",
      "data": null,
      "address": "/Basic-Propositions/Truth/"}],
    "True":
    [{"id": "True___intro",
      "data": null,
      "address": "/Basic-Propositions/Truth/"}],
    "Trans.trans":
    [{"id": "Trans___mk",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Trans.mk":
    [{"id": "Trans___mk",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Trans":
    [{"id": "Trans___mk",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Thunk.pure":
    [{"id": "Thunk___pure",
      "data": null,
      "address": "/Basic-Types/Lazy-Computations/"}],
    "Thunk.mk":
    [{"id": "Thunk___mk",
      "data": null,
      "address": "/Basic-Types/Lazy-Computations/"}],
    "Thunk.map":
    [{"id": "Thunk___map",
      "data": null,
      "address": "/Basic-Types/Lazy-Computations/"}],
    "Thunk.get":
    [{"id": "Thunk___get",
      "data": null,
      "address": "/Basic-Types/Lazy-Computations/"}],
    "Thunk.fn":
    [{"id": "Thunk___mk",
      "data": null,
      "address": "/Basic-Types/Lazy-Computations/"}],
    "Thunk.bind":
    [{"id": "Thunk___bind",
      "data": null,
      "address": "/Basic-Types/Lazy-Computations/"}],
    "Thunk":
    [{"id": "Thunk___mk",
      "data": null,
      "address": "/Basic-Types/Lazy-Computations/"}],
    "Task.spawn":
    [{"id": "Task___spawn",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Task.pure":
    [{"id": "Task___pure",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Task.mapList":
    [{"id": "Task___mapList",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Task.map":
    [{"id": "Task___map", "data": null, "address": "/IO/Tasks-and-Threads/"}],
    "Task.get":
    [{"id": "Task___get", "data": null, "address": "/IO/Tasks-and-Threads/"}],
    "Task.bind":
    [{"id": "Task___bind",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Task.Priority.max":
    [{"id": "Task___Priority___max",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Task.Priority.default":
    [{"id": "Task___Priority___default",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Task.Priority.dedicated":
    [{"id": "Task___Priority___dedicated",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Task.Priority":
    [{"id": "Task___Priority",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Task":
    [{"id": "Task", "data": null, "address": "/IO/Tasks-and-Threads/"}],
    "System.mkFilePath":
    [{"id": "System___mkFilePath",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.Platform.target":
    [{"id": "System___Platform___target",
      "data": null,
      "address": "/IO/System-and-Platform-Information/"}],
    "System.Platform.numBits":
    [{"id": "System___Platform___numBits",
      "data": null,
      "address": "/IO/System-and-Platform-Information/"}],
    "System.Platform.isWindows":
    [{"id": "System___Platform___isWindows",
      "data": null,
      "address": "/IO/System-and-Platform-Information/"}],
    "System.Platform.isOSX":
    [{"id": "System___Platform___isOSX",
      "data": null,
      "address": "/IO/System-and-Platform-Information/"}],
    "System.Platform.isEmscripten":
    [{"id": "System___Platform___isEmscripten",
      "data": null,
      "address": "/IO/System-and-Platform-Information/"}],
    "System.FilePath.withFileName":
    [{"id": "System___FilePath___withFileName",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.withExtension":
    [{"id": "System___FilePath___withExtension",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.walkDir":
    [{"id": "System___FilePath___walkDir",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.toString":
    [{"id": "System___FilePath___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.readDir":
    [{"id": "System___FilePath___readDir",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.pathSeparators":
    [{"id": "System___FilePath___pathSeparators",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.pathSeparator":
    [{"id": "System___FilePath___pathSeparator",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.pathExists":
    [{"id": "System___FilePath___pathExists",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.parent":
    [{"id": "System___FilePath___parent",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.normalize":
    [{"id": "System___FilePath___normalize",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.mk":
    [{"id": "System___FilePath___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.metadata":
    [{"id": "System___FilePath___metadata",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.join":
    [{"id": "System___FilePath___join",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.isRelative":
    [{"id": "System___FilePath___isRelative",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.isDir":
    [{"id": "System___FilePath___isDir",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.isAbsolute":
    [{"id": "System___FilePath___isAbsolute",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.fileStem":
    [{"id": "System___FilePath___fileStem",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.fileName":
    [{"id": "System___FilePath___fileName",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.extension":
    [{"id": "System___FilePath___extension",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.extSeparator":
    [{"id": "System___FilePath___extSeparator",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.exeExtension":
    [{"id": "System___FilePath___exeExtension",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.components":
    [{"id": "System___FilePath___components",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath.addExtension":
    [{"id": "System___FilePath___addExtension",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "System.FilePath":
    [{"id": "System___FilePath___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "Sum.swap":
    [{"id": "Sum___swap",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "Sum.map":
    [{"id": "Sum___map", "data": null, "address": "/Basic-Types/Sum-Types/"}],
    "Sum.isRight":
    [{"id": "Sum___isRight",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "Sum.isLeft":
    [{"id": "Sum___isLeft",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "Sum.inr":
    [{"id": "Sum___inl", "data": null, "address": "/Basic-Types/Sum-Types/"}],
    "Sum.inl":
    [{"id": "Sum___inl", "data": null, "address": "/Basic-Types/Sum-Types/"}],
    "Sum.inhabitedRight":
    [{"id": "Sum___inhabitedRight",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "Sum.inhabitedLeft":
    [{"id": "Sum___inhabitedLeft",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "Sum.getRight?":
    [{"id": "Sum___getRight___",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "Sum.getRight":
    [{"id": "Sum___getRight",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "Sum.getLeft?":
    [{"id": "Sum___getLeft___",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "Sum.getLeft":
    [{"id": "Sum___getLeft",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "Sum.elim":
    [{"id": "Sum___elim",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "Sum":
    [{"id": "Sum___inl", "data": null, "address": "/Basic-Types/Sum-Types/"}],
    "Subtype.val":
    [{"id": "Subtype___mk",
      "data": null,
      "address": "/Basic-Types/Subtypes/"}],
    "Subtype.property":
    [{"id": "Subtype___mk",
      "data": null,
      "address": "/Basic-Types/Subtypes/"}],
    "Subtype.mk":
    [{"id": "Subtype___mk",
      "data": null,
      "address": "/Basic-Types/Subtypes/"}],
    "Subtype":
    [{"id": "Subtype___mk",
      "data": null,
      "address": "/Basic-Types/Subtypes/"}],
    "Substring.trimRight":
    [{"id": "Substring___trimRight",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.trimLeft":
    [{"id": "Substring___trimLeft",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.trim":
    [{"id": "Substring___trim",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.toString":
    [{"id": "Substring___toString",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.toNat?":
    [{"id": "Substring___toNat___",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.toName":
    [{"id": "Substring___toName",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.toIterator":
    [{"id": "Substring___toIterator",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.takeWhile":
    [{"id": "Substring___takeWhile",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.takeRightWhile":
    [{"id": "Substring___takeRightWhile",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.takeRight":
    [{"id": "Substring___takeRight",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.take":
    [{"id": "Substring___take",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.str":
    [{"id": "Substring___mk",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.stopPos":
    [{"id": "Substring___mk",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.startPos":
    [{"id": "Substring___mk",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.splitOn":
    [{"id": "Substring___splitOn",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.sameAs":
    [{"id": "Substring___sameAs",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.prevn":
    [{"id": "Substring___prevn",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.prev":
    [{"id": "Substring___prev",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.posOf":
    [{"id": "Substring___posOf",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.nextn":
    [{"id": "Substring___nextn",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.next":
    [{"id": "Substring___next",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.mk":
    [{"id": "Substring___mk",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.isNat":
    [{"id": "Substring___isNat",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.isEmpty":
    [{"id": "Substring___isEmpty",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.get":
    [{"id": "Substring___get",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.front":
    [{"id": "Substring___front",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.foldr":
    [{"id": "Substring___foldr",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.foldl":
    [{"id": "Substring___foldl",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.extract":
    [{"id": "Substring___extract",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.dropWhile":
    [{"id": "Substring___dropWhile",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.dropSuffix?":
    [{"id": "Substring___dropSuffix___",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.dropRightWhile":
    [{"id": "Substring___dropRightWhile",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.dropRight":
    [{"id": "Substring___dropRight",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.dropPrefix?":
    [{"id": "Substring___dropPrefix___",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.drop":
    [{"id": "Substring___drop",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.contains":
    [{"id": "Substring___contains",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.commonSuffix":
    [{"id": "Substring___commonSuffix",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.commonPrefix":
    [{"id": "Substring___commonPrefix",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.bsize":
    [{"id": "Substring___bsize",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.beq":
    [{"id": "Substring___beq",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.atEnd":
    [{"id": "Substring___atEnd",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.any":
    [{"id": "Substring___any",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring.all":
    [{"id": "Substring___all",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Substring":
    [{"id": "Substring___mk",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "Subsingleton.intro":
    [{"id": "Subsingleton___intro",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Subsingleton.helim":
    [{"id": "Subsingleton___helim",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Subsingleton.elim":
    [{"id": "Subsingleton___elim",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Subsingleton.allEq":
    [{"id": "Subsingleton___intro",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Subsingleton":
    [{"id": "Subsingleton___intro",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Subarray.toArray":
    [{"id": "Subarray___toArray",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.take":
    [{"id": "Subarray___take",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.split":
    [{"id": "Subarray___split",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.size":
    [{"id": "Subarray___size",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.popFront":
    [{"id": "Subarray___popFront",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.getD":
    [{"id": "Subarray___getD",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.get!":
    [{"id": "Subarray___get___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.get":
    [{"id": "Subarray___get",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.forRevM":
    [{"id": "Subarray___forRevM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.forM":
    [{"id": "Subarray___forM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.forIn":
    [{"id": "Subarray___forIn",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.foldrM":
    [{"id": "Subarray___foldrM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.foldr":
    [{"id": "Subarray___foldr",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.foldlM":
    [{"id": "Subarray___foldlM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.foldl":
    [{"id": "Subarray___foldl",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.findSomeRevM?":
    [{"id": "Subarray___findSomeRevM___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.findRevM?":
    [{"id": "Subarray___findRevM___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.findRev?":
    [{"id": "Subarray___findRev___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.empty":
    [{"id": "Subarray___empty",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.drop":
    [{"id": "Subarray___drop",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.anyM":
    [{"id": "Subarray___anyM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.any":
    [{"id": "Subarray___any",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.allM":
    [{"id": "Subarray___allM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray.all":
    [{"id": "Subarray___all",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Subarray":
    [{"id": "Subarray", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Sub.sub":
    [{"id": "Sub___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Sub.mk":
    [{"id": "Sub___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Sub":
    [{"id": "Sub___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "String.validateUTF8":
    [{"id": "String___validateUTF8",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.utf8EncodeChar":
    [{"id": "String___utf8EncodeChar",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.utf8DecodeChar?":
    [{"id": "String___utf8DecodeChar___",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.utf8ByteSize":
    [{"id": "String___utf8ByteSize",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.trimRight":
    [{"id": "String___trimRight",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.trimLeft":
    [{"id": "String___trimLeft",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.trim":
    [{"id": "String___trim",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.toUpper":
    [{"id": "String___toUpper",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.toUTF8":
    [{"id": "String___toUTF8",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.toSubstring'":
    [{"id": "String___toSubstring___",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.toSubstring":
    [{"id": "String___toSubstring",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.toNat?":
    [{"id": "String___toNat___",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.toNat!":
    [{"id": "String___toNat___-next",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.toName":
    [{"id": "String___toName",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.toLower":
    [{"id": "String___toLower",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.toList":
    [{"id": "String___toList",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.toInt?":
    [{"id": "String___toInt___",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.toInt!":
    [{"id": "String___toInt___-next",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.toFormat":
    [{"id": "String___toFormat",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.takeWhile":
    [{"id": "String___takeWhile",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.takeRightWhile":
    [{"id": "String___takeRightWhile",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.takeRight":
    [{"id": "String___takeRight",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.take":
    [{"id": "String___take",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.substrEq":
    [{"id": "String___substrEq",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.stripSuffix":
    [{"id": "String___stripSuffix",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.stripPrefix":
    [{"id": "String___stripPrefix",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.startsWith":
    [{"id": "String___startsWith",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.splitOn":
    [{"id": "String___splitOn",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.split":
    [{"id": "String___split",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.singleton":
    [{"id": "String___singleton",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.set":
    [{"id": "String___set",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.revPosOf":
    [{"id": "String___revPosOf",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.revFind":
    [{"id": "String___revFind",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.replace":
    [{"id": "String___replace",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.removeLeadingSpaces":
    [{"id": "String___removeLeadingSpaces",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.quote":
    [{"id": "String___quote",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.pushn":
    [{"id": "String___pushn",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.push":
    [{"id": "String___push",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.prev":
    [{"id": "String___prev",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.posOf":
    [{"id": "String___posOf",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.offsetOfPos":
    [{"id": "String___offsetOfPos",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.nextWhile":
    [{"id": "String___nextWhile",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.nextUntil":
    [{"id": "String___nextUntil",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.next'":
    [{"id": "String___next___",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.next":
    [{"id": "String___next",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.modify":
    [{"id": "String___modify",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.mkIterator":
    [{"id": "String___mkIterator",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.mk":
    [{"id": "String___mk", "data": null, "address": "/Basic-Types/Strings/"}],
    "String.map":
    [{"id": "String___map",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.length":
    [{"id": "String___length",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.le":
    [{"id": "String___le", "data": null, "address": "/Basic-Types/Strings/"}],
    "String.join":
    [{"id": "String___join",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.iter":
    [{"id": "String___iter",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.isPrefixOf":
    [{"id": "String___isPrefixOf",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.isNat":
    [{"id": "String___isNat",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.isInt":
    [{"id": "String___isInt",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.isEmpty":
    [{"id": "String___isEmpty",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.intercalate":
    [{"id": "String___intercalate",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.hash":
    [{"id": "String___hash",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.getUtf8Byte":
    [{"id": "String___getUtf8Byte",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.get?":
    [{"id": "String___get___",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.get'":
    [{"id": "String___get___-next-next",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.get!":
    [{"id": "String___get___-next",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.get":
    [{"id": "String___get",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.front":
    [{"id": "String___front",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.fromUTF8?":
    [{"id": "String___fromUTF8___",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.fromUTF8!":
    [{"id": "String___fromUTF8___-next",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.fromUTF8":
    [{"id": "String___fromUTF8",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.foldr":
    [{"id": "String___foldr",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.foldl":
    [{"id": "String___foldl",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.firstDiffPos":
    [{"id": "String___firstDiffPos",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.findLineStart":
    [{"id": "String___findLineStart",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.find":
    [{"id": "String___find",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.extract":
    [{"id": "String___extract",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.endsWith":
    [{"id": "String___endsWith",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.endPos":
    [{"id": "String___endPos",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.dropWhile":
    [{"id": "String___dropWhile",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.dropSuffix?":
    [{"id": "String___dropSuffix___",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.dropRightWhile":
    [{"id": "String___dropRightWhile",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.dropRight":
    [{"id": "String___dropRight",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.dropPrefix?":
    [{"id": "String___dropPrefix___",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.drop":
    [{"id": "String___drop",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.decapitalize":
    [{"id": "String___decapitalize",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.decEq":
    [{"id": "String___decEq",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.data":
    [{"id": "String___mk", "data": null, "address": "/Basic-Types/Strings/"}],
    "String.crlfToLf":
    [{"id": "String___crlfToLf",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.contains":
    [{"id": "String___contains",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.capitalize":
    [{"id": "String___capitalize",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.back":
    [{"id": "String___back",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.atEnd":
    [{"id": "String___atEnd",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.append":
    [{"id": "String___append",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.any":
    [{"id": "String___any",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.all":
    [{"id": "String___all",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Pos.mk":
    [{"id": "String___Pos___mk",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Pos.min":
    [{"id": "String___Pos___min",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Pos.isValid":
    [{"id": "String___Pos___isValid",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Pos.byteIdx":
    [{"id": "String___Pos___mk",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Pos":
    [{"id": "String___Pos___mk",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.toEnd":
    [{"id": "String___Iterator___toEnd",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.setCurr":
    [{"id": "String___Iterator___setCurr",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.s":
    [{"id": "String___Iterator___mk",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.remainingToString":
    [{"id": "String___Iterator___remainingToString",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.remainingBytes":
    [{"id": "String___Iterator___remainingBytes",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.prevn":
    [{"id": "String___Iterator___prevn",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.prev":
    [{"id": "String___Iterator___prev",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.pos":
    [{"id": "String___Iterator___pos",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.nextn":
    [{"id": "String___Iterator___nextn",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.next":
    [{"id": "String___Iterator___next",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.mk":
    [{"id": "String___Iterator___mk",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.i":
    [{"id": "String___Iterator___mk",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.hasPrev":
    [{"id": "String___Iterator___hasPrev",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.hasNext":
    [{"id": "String___Iterator___hasNext",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.forward":
    [{"id": "String___Iterator___forward",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.extract":
    [{"id": "String___Iterator___extract",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.curr":
    [{"id": "String___Iterator___curr",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator.atEnd":
    [{"id": "String___Iterator___atEnd",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String.Iterator":
    [{"id": "String___Iterator___mk",
      "data": null,
      "address": "/Basic-Types/Strings/"}],
    "String":
    [{"id": "String___mk", "data": null, "address": "/Basic-Types/Strings/"}],
    "StdGen":
    [{"id": "StdGen", "data": null, "address": "/IO/Random-Numbers/"}],
    "Std.TreeSet.toList":
    [{"id": "Std___TreeSet___toList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.toArray":
    [{"id": "Std___TreeSet___toArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.size":
    [{"id": "Std___TreeSet___size",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.partition":
    [{"id": "Std___TreeSet___partition",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.ofList":
    [{"id": "Std___TreeSet___ofList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.ofArray":
    [{"id": "Std___TreeSet___ofArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.minD":
    [{"id": "Std___TreeSet___minD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.min?":
    [{"id": "Std___TreeSet___min___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.min!":
    [{"id": "Std___TreeSet___min___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.min":
    [{"id": "Std___TreeSet___min",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.merge":
    [{"id": "Std___TreeSet___merge",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.maxD":
    [{"id": "Std___TreeSet___maxD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.max?":
    [{"id": "Std___TreeSet___max___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.max!":
    [{"id": "Std___TreeSet___max___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.max":
    [{"id": "Std___TreeSet___max",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.isEmpty":
    [{"id": "Std___TreeSet___isEmpty",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.insertMany":
    [{"id": "Std___TreeSet___insertMany",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.insert":
    [{"id": "Std___TreeSet___insert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getLTD":
    [{"id": "Std___TreeSet___getLTD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getLT?":
    [{"id": "Std___TreeSet___getLT___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getLT!":
    [{"id": "Std___TreeSet___getLT___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getLT":
    [{"id": "Std___TreeSet___getLT",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getLED":
    [{"id": "Std___TreeSet___getLED",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getLE?":
    [{"id": "Std___TreeSet___getLE___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getLE!":
    [{"id": "Std___TreeSet___getLE___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getLE":
    [{"id": "Std___TreeSet___getLE",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getGTD":
    [{"id": "Std___TreeSet___getGTD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getGT?":
    [{"id": "Std___TreeSet___getGT___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getGT!":
    [{"id": "Std___TreeSet___getGT___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getGT":
    [{"id": "Std___TreeSet___getGT",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getGED":
    [{"id": "Std___TreeSet___getGED",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getGE?":
    [{"id": "Std___TreeSet___getGE___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getGE!":
    [{"id": "Std___TreeSet___getGE___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getGE":
    [{"id": "Std___TreeSet___getGE",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.getD":
    [{"id": "Std___TreeSet___getD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.get?":
    [{"id": "Std___TreeSet___get___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.get!":
    [{"id": "Std___TreeSet___get___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.get":
    [{"id": "Std___TreeSet___get",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.forM":
    [{"id": "Std___TreeSet___forM",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.forIn":
    [{"id": "Std___TreeSet___forIn",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.foldrM":
    [{"id": "Std___TreeSet___foldrM",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.foldr":
    [{"id": "Std___TreeSet___foldr",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.foldlM":
    [{"id": "Std___TreeSet___foldlM",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.foldl":
    [{"id": "Std___TreeSet___foldl",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.filter":
    [{"id": "Std___TreeSet___filter",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.eraseMany":
    [{"id": "Std___TreeSet___eraseMany",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.erase":
    [{"id": "Std___TreeSet___erase",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.empty":
    [{"id": "Std___TreeSet___empty",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.containsThenInsert":
    [{"id": "Std___TreeSet___containsThenInsert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.contains":
    [{"id": "Std___TreeSet___contains",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.atIdxD":
    [{"id": "Std___TreeSet___atIdxD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.atIdx?":
    [{"id": "Std___TreeSet___atIdx___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.atIdx!":
    [{"id": "Std___TreeSet___atIdx___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.atIdx":
    [{"id": "Std___TreeSet___atIdx",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.any":
    [{"id": "Std___TreeSet___any",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.all":
    [{"id": "Std___TreeSet___all",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.Raw.mk":
    [{"id": "Std___TreeSet___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.Raw.inner":
    [{"id": "Std___TreeSet___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.Raw.WF.out":
    [{"id": "Std___TreeSet___Raw___WF___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.Raw.WF.mk":
    [{"id": "Std___TreeSet___Raw___WF___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.Raw.WF":
    [{"id": "Std___TreeSet___Raw___WF___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet.Raw":
    [{"id": "Std___TreeSet___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeSet":
    [{"id": "Std___TreeSet",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.valuesArray":
    [{"id": "Std___TreeMap___valuesArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.values":
    [{"id": "Std___TreeMap___values",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.unitOfList":
    [{"id": "Std___TreeMap___unitOfList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.unitOfArray":
    [{"id": "Std___TreeMap___unitOfArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.toList":
    [{"id": "Std___TreeMap___toList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.toArray":
    [{"id": "Std___TreeMap___toArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.size":
    [{"id": "Std___TreeMap___size",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.partition":
    [{"id": "Std___TreeMap___partition",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.ofList":
    [{"id": "Std___TreeMap___ofList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.ofArray":
    [{"id": "Std___TreeMap___ofArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.modify":
    [{"id": "Std___TreeMap___modify",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.minKeyD":
    [{"id": "Std___TreeMap___minKeyD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.minKey?":
    [{"id": "Std___TreeMap___minKey___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.minKey!":
    [{"id": "Std___TreeMap___minKey___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.minKey":
    [{"id": "Std___TreeMap___minKey",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.minEntryD":
    [{"id": "Std___TreeMap___minEntryD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.minEntry?":
    [{"id": "Std___TreeMap___minEntry___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.minEntry!":
    [{"id": "Std___TreeMap___minEntry___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.minEntry":
    [{"id": "Std___TreeMap___minEntry",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.mergeWith":
    [{"id": "Std___TreeMap___mergeWith",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.maxKeyD":
    [{"id": "Std___TreeMap___maxKeyD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.maxKey?":
    [{"id": "Std___TreeMap___maxKey___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.maxKey!":
    [{"id": "Std___TreeMap___maxKey___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.maxKey":
    [{"id": "Std___TreeMap___maxKey",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.maxEntryD":
    [{"id": "Std___TreeMap___maxEntryD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.maxEntry?":
    [{"id": "Std___TreeMap___maxEntry___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.maxEntry!":
    [{"id": "Std___TreeMap___maxEntry___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.maxEntry":
    [{"id": "Std___TreeMap___maxEntry",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.map":
    [{"id": "Std___TreeMap___map",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.keysArray":
    [{"id": "Std___TreeMap___keysArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.keys":
    [{"id": "Std___TreeMap___keys",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.keyAtIdxD":
    [{"id": "Std___TreeMap___keyAtIdxD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.keyAtIdx?":
    [{"id": "Std___TreeMap___keyAtIdx___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.keyAtIdx!":
    [{"id": "Std___TreeMap___keyAtIdx___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.keyAtIdx":
    [{"id": "Std___TreeMap___keyAtIdx",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.isEmpty":
    [{"id": "Std___TreeMap___isEmpty",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.insertManyIfNewUnit":
    [{"id": "Std___TreeMap___insertManyIfNewUnit",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.insertMany":
    [{"id": "Std___TreeMap___insertMany",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.insertIfNew":
    [{"id": "Std___TreeMap___insertIfNew",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.insert":
    [{"id": "Std___TreeMap___insert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getThenInsertIfNew?":
    [{"id": "Std___TreeMap___getThenInsertIfNew___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyLTD":
    [{"id": "Std___TreeMap___getKeyLTD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyLT?":
    [{"id": "Std___TreeMap___getKeyLT___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyLT!":
    [{"id": "Std___TreeMap___getKeyLT___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyLT":
    [{"id": "Std___TreeMap___getKeyLT",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyLED":
    [{"id": "Std___TreeMap___getKeyLED",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyLE?":
    [{"id": "Std___TreeMap___getKeyLE___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyLE!":
    [{"id": "Std___TreeMap___getKeyLE___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyLE":
    [{"id": "Std___TreeMap___getKeyLE",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyGTD":
    [{"id": "Std___TreeMap___getKeyGTD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyGT?":
    [{"id": "Std___TreeMap___getKeyGT___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyGT!":
    [{"id": "Std___TreeMap___getKeyGT___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyGT":
    [{"id": "Std___TreeMap___getKeyGT",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyGED":
    [{"id": "Std___TreeMap___getKeyGED",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyGE?":
    [{"id": "Std___TreeMap___getKeyGE___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyGE!":
    [{"id": "Std___TreeMap___getKeyGE___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyGE":
    [{"id": "Std___TreeMap___getKeyGE",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKeyD":
    [{"id": "Std___TreeMap___getKeyD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKey?":
    [{"id": "Std___TreeMap___getKey___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKey!":
    [{"id": "Std___TreeMap___getKey___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getKey":
    [{"id": "Std___TreeMap___getKey",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getEntryLTD":
    [{"id": "Std___TreeMap___getEntryLTD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getEntryLT?":
    [{"id": "Std___TreeMap___getEntryLT___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getEntryLT!":
    [{"id": "Std___TreeMap___getEntryLT___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getEntryLT":
    [{"id": "Std___TreeMap___getEntryLT",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getEntryLED":
    [{"id": "Std___TreeMap___getEntryLED",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getEntryLE?":
    [{"id": "Std___TreeMap___getEntryLE___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getEntryLE!":
    [{"id": "Std___TreeMap___getEntryLE___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getEntryLE":
    [{"id": "Std___TreeMap___getEntryLE",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getEntryGTD":
    [{"id": "Std___TreeMap___getEntryGTD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getEntryGT?":
    [{"id": "Std___TreeMap___getEntryGT___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getEntryGT!":
    [{"id": "Std___TreeMap___getEntryGT___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getEntryGT":
    [{"id": "Std___TreeMap___getEntryGT",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getEntryGED":
    [{"id": "Std___TreeMap___getEntryGED",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getEntryGE?":
    [{"id": "Std___TreeMap___getEntryGE___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getEntryGE!":
    [{"id": "Std___TreeMap___getEntryGE___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getEntryGE":
    [{"id": "Std___TreeMap___getEntryGE",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.getD":
    [{"id": "Std___TreeMap___getD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.get?":
    [{"id": "Std___TreeMap___get___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.get!":
    [{"id": "Std___TreeMap___get___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.get":
    [{"id": "Std___TreeMap___get",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.forM":
    [{"id": "Std___TreeMap___forM",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.forIn":
    [{"id": "Std___TreeMap___forIn",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.foldrM":
    [{"id": "Std___TreeMap___foldrM",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.foldr":
    [{"id": "Std___TreeMap___foldr",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.foldlM":
    [{"id": "Std___TreeMap___foldlM",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.foldl":
    [{"id": "Std___TreeMap___foldl",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.filterMap":
    [{"id": "Std___TreeMap___filterMap",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.filter":
    [{"id": "Std___TreeMap___filter",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.eraseMany":
    [{"id": "Std___TreeMap___eraseMany",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.erase":
    [{"id": "Std___TreeMap___erase",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.entryAtIdxD":
    [{"id": "Std___TreeMap___entryAtIdxD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.entryAtIdx?":
    [{"id": "Std___TreeMap___entryAtIdx___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.entryAtIdx!":
    [{"id": "Std___TreeMap___entryAtIdx___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.entryAtIdx":
    [{"id": "Std___TreeMap___entryAtIdx",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.empty":
    [{"id": "Std___TreeMap___empty",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.containsThenInsertIfNew":
    [{"id": "Std___TreeMap___containsThenInsertIfNew",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.containsThenInsert":
    [{"id": "Std___TreeMap___containsThenInsert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.contains":
    [{"id": "Std___TreeMap___contains",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.any":
    [{"id": "Std___TreeMap___any",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.alter":
    [{"id": "Std___TreeMap___alter",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.all":
    [{"id": "Std___TreeMap___all",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.Raw.mk":
    [{"id": "Std___TreeMap___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.Raw.inner":
    [{"id": "Std___TreeMap___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.Raw.WF.out":
    [{"id": "Std___TreeMap___Raw___WF___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.Raw.WF.mk":
    [{"id": "Std___TreeMap___Raw___WF___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.Raw.WF":
    [{"id": "Std___TreeMap___Raw___WF___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap.Raw":
    [{"id": "Std___TreeMap___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.TreeMap":
    [{"id": "Std___TreeMap",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ToFormat.mk":
    [{"id": "Std___ToFormat___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.ToFormat.format":
    [{"id": "Std___ToFormat___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.ToFormat":
    [{"id": "Std___ToFormat___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Mutex.new":
    [{"id": "Std___Mutex___new",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.Mutex.atomicallyOnce":
    [{"id": "Std___Mutex___atomicallyOnce",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.Mutex.atomically":
    [{"id": "Std___Mutex___atomically",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.Mutex":
    [{"id": "Std___Mutex",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.HashSet.union":
    [{"id": "Std___HashSet___union",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.toList":
    [{"id": "Std___HashSet___toList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.toArray":
    [{"id": "Std___HashSet___toArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.size":
    [{"id": "Std___HashSet___size",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.partition":
    [{"id": "Std___HashSet___partition",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.ofList":
    [{"id": "Std___HashSet___ofList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.ofArray":
    [{"id": "Std___HashSet___ofArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.mk":
    [{"id": "Std___HashSet___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.isEmpty":
    [{"id": "Std___HashSet___isEmpty",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.insertMany":
    [{"id": "Std___HashSet___insertMany",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.insert":
    [{"id": "Std___HashSet___insert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.inner":
    [{"id": "Std___HashSet___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.getD":
    [{"id": "Std___HashSet___getD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.get?":
    [{"id": "Std___HashSet___get___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.get!":
    [{"id": "Std___HashSet___get___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.get":
    [{"id": "Std___HashSet___get",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.forM":
    [{"id": "Std___HashSet___forM",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.forIn":
    [{"id": "Std___HashSet___forIn",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.foldM":
    [{"id": "Std___HashSet___foldM",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.fold":
    [{"id": "Std___HashSet___fold",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.filter":
    [{"id": "Std___HashSet___filter",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.erase":
    [{"id": "Std___HashSet___erase",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.emptyWithCapacity":
    [{"id": "Std___HashSet___emptyWithCapacity",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.containsThenInsert":
    [{"id": "Std___HashSet___containsThenInsert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.contains":
    [{"id": "Std___HashSet___contains",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.any":
    [{"id": "Std___HashSet___any",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.all":
    [{"id": "Std___HashSet___all",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.Raw.mk":
    [{"id": "Std___HashSet___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.Raw.inner":
    [{"id": "Std___HashSet___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.Raw.WF.out":
    [{"id": "Std___HashSet___Raw___WF___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.Raw.WF.mk":
    [{"id": "Std___HashSet___Raw___WF___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.Raw.WF":
    [{"id": "Std___HashSet___Raw___WF___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.Raw":
    [{"id": "Std___HashSet___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.Equiv.mk":
    [{"id": "Std___HashSet___Equiv___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.Equiv.inner":
    [{"id": "Std___HashSet___Equiv___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet.Equiv":
    [{"id": "Std___HashSet___Equiv___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashSet":
    [{"id": "Std___HashSet___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.valuesArray":
    [{"id": "Std___HashMap___valuesArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.values":
    [{"id": "Std___HashMap___values",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.unitOfList":
    [{"id": "Std___HashMap___unitOfList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.unitOfArray":
    [{"id": "Std___HashMap___unitOfArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.union":
    [{"id": "Std___HashMap___union",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.toList":
    [{"id": "Std___HashMap___toList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.toArray":
    [{"id": "Std___HashMap___toArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.size":
    [{"id": "Std___HashMap___size",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.partition":
    [{"id": "Std___HashMap___partition",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.ofList":
    [{"id": "Std___HashMap___ofList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.modify":
    [{"id": "Std___HashMap___modify",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.map":
    [{"id": "Std___HashMap___map",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.keysArray":
    [{"id": "Std___HashMap___keysArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.keys":
    [{"id": "Std___HashMap___keys",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.isEmpty":
    [{"id": "Std___HashMap___isEmpty",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.insertManyIfNewUnit":
    [{"id": "Std___HashMap___insertManyIfNewUnit",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.insertMany":
    [{"id": "Std___HashMap___insertMany",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.insertIfNew":
    [{"id": "Std___HashMap___insertIfNew",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.insert":
    [{"id": "Std___HashMap___insert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.getThenInsertIfNew?":
    [{"id": "Std___HashMap___getThenInsertIfNew___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.getKeyD":
    [{"id": "Std___HashMap___getKeyD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.getKey?":
    [{"id": "Std___HashMap___getKey___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.getKey!":
    [{"id": "Std___HashMap___getKey___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.getKey":
    [{"id": "Std___HashMap___getKey",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.getD":
    [{"id": "Std___HashMap___getD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.get?":
    [{"id": "Std___HashMap___get___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.get!":
    [{"id": "Std___HashMap___get___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.get":
    [{"id": "Std___HashMap___get",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.forM":
    [{"id": "Std___HashMap___forM",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.forIn":
    [{"id": "Std___HashMap___forIn",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.foldM":
    [{"id": "Std___HashMap___foldM",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.fold":
    [{"id": "Std___HashMap___fold",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.filterMap":
    [{"id": "Std___HashMap___filterMap",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.filter":
    [{"id": "Std___HashMap___filter",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.erase":
    [{"id": "Std___HashMap___erase",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.emptyWithCapacity":
    [{"id": "Std___HashMap___emptyWithCapacity",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.containsThenInsertIfNew":
    [{"id": "Std___HashMap___containsThenInsertIfNew",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.containsThenInsert":
    [{"id": "Std___HashMap___containsThenInsert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.contains":
    [{"id": "Std___HashMap___contains",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.alter":
    [{"id": "Std___HashMap___alter",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.Raw.mk":
    [{"id": "Std___HashMap___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.Raw.inner":
    [{"id": "Std___HashMap___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.Raw.WF.out":
    [{"id": "Std___HashMap___Raw___WF___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.Raw.WF.mk":
    [{"id": "Std___HashMap___Raw___WF___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.Raw.WF":
    [{"id": "Std___HashMap___Raw___WF___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.Raw":
    [{"id": "Std___HashMap___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.Equiv.mk":
    [{"id": "Std___HashMap___Equiv___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.Equiv.inner":
    [{"id": "Std___HashMap___Equiv___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap.Equiv":
    [{"id": "Std___HashMap___Equiv___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.HashMap":
    [{"id": "Std___HashMap",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.Format.text":
    [{"id": "Std___Format___nil",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.tag":
    [{"id": "Std___Format___nil",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.sbracket":
    [{"id": "Std___Format___sbracket",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.prettyM":
    [{"id": "Std___Format___prettyM",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.pretty":
    [{"id": "Std___Format___pretty",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.prefixJoin":
    [{"id": "Std___Format___prefixJoin",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.paren":
    [{"id": "Std___Format___paren",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.nil":
    [{"id": "Std___Format___nil",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.nestD":
    [{"id": "Std___Format___nestD",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.nest":
    [{"id": "Std___Format___nil",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.line":
    [{"id": "Std___Format___nil",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.joinSuffix":
    [{"id": "Std___Format___joinSuffix",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.joinSep":
    [{"id": "Std___Format___joinSep",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.join":
    [{"id": "Std___Format___join",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.isNil":
    [{"id": "Std___Format___isNil",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.isEmpty":
    [{"id": "Std___Format___isEmpty",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.indentD":
    [{"id": "Std___Format___indentD",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.group":
    [{"id": "Std___Format___nil",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.fill":
    [{"id": "Std___Format___fill",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.defWidth":
    [{"id": "Std___Format___defWidth",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.defIndent":
    [{"id": "Std___Format___defIndent",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.bracketFill":
    [{"id": "Std___Format___bracketFill",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.bracket":
    [{"id": "Std___Format___bracket",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.append":
    [{"id": "Std___Format___nil",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.align":
    [{"id": "Std___Format___nil",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.MonadPrettyFormat.startTag":
    [{"id": "Std___Format___MonadPrettyFormat___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.MonadPrettyFormat.pushOutput":
    [{"id": "Std___Format___MonadPrettyFormat___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.MonadPrettyFormat.pushNewline":
    [{"id": "Std___Format___MonadPrettyFormat___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.MonadPrettyFormat.mk":
    [{"id": "Std___Format___MonadPrettyFormat___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.MonadPrettyFormat.endTags":
    [{"id": "Std___Format___MonadPrettyFormat___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.MonadPrettyFormat.currColumn":
    [{"id": "Std___Format___MonadPrettyFormat___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.MonadPrettyFormat":
    [{"id": "Std___Format___MonadPrettyFormat___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.FlattenBehavior.fill":
    [{"id": "Std___Format___FlattenBehavior___allOrNone",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.FlattenBehavior.allOrNone":
    [{"id": "Std___Format___FlattenBehavior___allOrNone",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format.FlattenBehavior":
    [{"id": "Std___Format___FlattenBehavior___allOrNone",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.Format":
    [{"id": "Std___Format___nil",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Std.ExtHashSet.size":
    [{"id": "Std___ExtHashSet___size",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet.ofList":
    [{"id": "Std___ExtHashSet___ofList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet.ofArray":
    [{"id": "Std___ExtHashSet___ofArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet.mk":
    [{"id": "Std___ExtHashSet___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet.isEmpty":
    [{"id": "Std___ExtHashSet___isEmpty",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet.insertMany":
    [{"id": "Std___ExtHashSet___insertMany",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet.insert":
    [{"id": "Std___ExtHashSet___insert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet.inner":
    [{"id": "Std___ExtHashSet___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet.getD":
    [{"id": "Std___ExtHashSet___getD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet.get?":
    [{"id": "Std___ExtHashSet___get___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet.get!":
    [{"id": "Std___ExtHashSet___get___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet.get":
    [{"id": "Std___ExtHashSet___get",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet.filter":
    [{"id": "Std___ExtHashSet___filter",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet.erase":
    [{"id": "Std___ExtHashSet___erase",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet.emptyWithCapacity":
    [{"id": "Std___ExtHashSet___emptyWithCapacity",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet.containsThenInsert":
    [{"id": "Std___ExtHashSet___containsThenInsert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet.contains":
    [{"id": "Std___ExtHashSet___contains",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashSet":
    [{"id": "Std___ExtHashSet___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.unitOfList":
    [{"id": "Std___ExtHashMap___unitOfList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.unitOfArray":
    [{"id": "Std___ExtHashMap___unitOfArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.size":
    [{"id": "Std___ExtHashMap___size",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.ofList":
    [{"id": "Std___ExtHashMap___ofList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.modify":
    [{"id": "Std___ExtHashMap___modify",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.map":
    [{"id": "Std___ExtHashMap___map",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.isEmpty":
    [{"id": "Std___ExtHashMap___isEmpty",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.insertManyIfNewUnit":
    [{"id": "Std___ExtHashMap___insertManyIfNewUnit",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.insertMany":
    [{"id": "Std___ExtHashMap___insertMany",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.insertIfNew":
    [{"id": "Std___ExtHashMap___insertIfNew",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.insert":
    [{"id": "Std___ExtHashMap___insert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.getThenInsertIfNew?":
    [{"id": "Std___ExtHashMap___getThenInsertIfNew___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.getKeyD":
    [{"id": "Std___ExtHashMap___getKeyD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.getKey?":
    [{"id": "Std___ExtHashMap___getKey___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.getKey!":
    [{"id": "Std___ExtHashMap___getKey___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.getKey":
    [{"id": "Std___ExtHashMap___getKey",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.getD":
    [{"id": "Std___ExtHashMap___getD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.get?":
    [{"id": "Std___ExtHashMap___get___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.get!":
    [{"id": "Std___ExtHashMap___get___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.get":
    [{"id": "Std___ExtHashMap___get",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.filterMap":
    [{"id": "Std___ExtHashMap___filterMap",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.filter":
    [{"id": "Std___ExtHashMap___filter",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.erase":
    [{"id": "Std___ExtHashMap___erase",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.emptyWithCapacity":
    [{"id": "Std___ExtHashMap___emptyWithCapacity",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.containsThenInsertIfNew":
    [{"id": "Std___ExtHashMap___containsThenInsertIfNew",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.containsThenInsert":
    [{"id": "Std___ExtHashMap___containsThenInsert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.contains":
    [{"id": "Std___ExtHashMap___contains",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap.alter":
    [{"id": "Std___ExtHashMap___alter",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtHashMap":
    [{"id": "Std___ExtHashMap",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.size":
    [{"id": "Std___ExtDHashMap___size",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.ofList":
    [{"id": "Std___ExtDHashMap___ofList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.modify":
    [{"id": "Std___ExtDHashMap___modify",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.map":
    [{"id": "Std___ExtDHashMap___map",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.isEmpty":
    [{"id": "Std___ExtDHashMap___isEmpty",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.insertMany":
    [{"id": "Std___ExtDHashMap___insertMany",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.insertIfNew":
    [{"id": "Std___ExtDHashMap___insertIfNew",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.insert":
    [{"id": "Std___ExtDHashMap___insert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.getThenInsertIfNew?":
    [{"id": "Std___ExtDHashMap___getThenInsertIfNew___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.getKeyD":
    [{"id": "Std___ExtDHashMap___getKeyD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.getKey?":
    [{"id": "Std___ExtDHashMap___getKey___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.getKey!":
    [{"id": "Std___ExtDHashMap___getKey___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.getKey":
    [{"id": "Std___ExtDHashMap___getKey",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.getD":
    [{"id": "Std___ExtDHashMap___getD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.get?":
    [{"id": "Std___ExtDHashMap___get___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.get!":
    [{"id": "Std___ExtDHashMap___get___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.get":
    [{"id": "Std___ExtDHashMap___get",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.filterMap":
    [{"id": "Std___ExtDHashMap___filterMap",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.filter":
    [{"id": "Std___ExtDHashMap___filter",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.erase":
    [{"id": "Std___ExtDHashMap___erase",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.emptyWithCapacity":
    [{"id": "Std___ExtDHashMap___emptyWithCapacity",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.containsThenInsertIfNew":
    [{"id": "Std___ExtDHashMap___containsThenInsertIfNew",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.containsThenInsert":
    [{"id": "Std___ExtDHashMap___containsThenInsert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.contains":
    [{"id": "Std___ExtDHashMap___contains",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap.alter":
    [{"id": "Std___ExtDHashMap___alter",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.ExtDHashMap":
    [{"id": "Std___ExtDHashMap",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.valuesArray":
    [{"id": "Std___DTreeMap___valuesArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.values":
    [{"id": "Std___DTreeMap___values",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.toList":
    [{"id": "Std___DTreeMap___toList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.toArray":
    [{"id": "Std___DTreeMap___toArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.size":
    [{"id": "Std___DTreeMap___size",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.partition":
    [{"id": "Std___DTreeMap___partition",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.ofList":
    [{"id": "Std___DTreeMap___ofList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.modify":
    [{"id": "Std___DTreeMap___modify",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.map":
    [{"id": "Std___DTreeMap___map",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.keysArray":
    [{"id": "Std___DTreeMap___keysArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.keys":
    [{"id": "Std___DTreeMap___keys",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.isEmpty":
    [{"id": "Std___DTreeMap___isEmpty",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.insertMany":
    [{"id": "Std___DTreeMap___insertMany",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.insertIfNew":
    [{"id": "Std___DTreeMap___insertIfNew",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.insert":
    [{"id": "Std___DTreeMap___insert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.getThenInsertIfNew?":
    [{"id": "Std___DTreeMap___getThenInsertIfNew___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.getKeyD":
    [{"id": "Std___DTreeMap___getKeyD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.getKey?":
    [{"id": "Std___DTreeMap___getKey___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.getKey!":
    [{"id": "Std___DTreeMap___getKey___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.getKey":
    [{"id": "Std___DTreeMap___getKey",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.getD":
    [{"id": "Std___DTreeMap___getD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.get?":
    [{"id": "Std___DTreeMap___get___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.get!":
    [{"id": "Std___DTreeMap___get___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.get":
    [{"id": "Std___DTreeMap___get",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.forM":
    [{"id": "Std___DTreeMap___forM",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.forIn":
    [{"id": "Std___DTreeMap___forIn",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.foldlM":
    [{"id": "Std___DTreeMap___foldlM",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.foldl":
    [{"id": "Std___DTreeMap___foldl",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.filterMap":
    [{"id": "Std___DTreeMap___filterMap",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.filter":
    [{"id": "Std___DTreeMap___filter",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.erase":
    [{"id": "Std___DTreeMap___erase",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.empty":
    [{"id": "Std___DTreeMap___empty",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.containsThenInsertIfNew":
    [{"id": "Std___DTreeMap___containsThenInsertIfNew",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.containsThenInsert":
    [{"id": "Std___DTreeMap___containsThenInsert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.contains":
    [{"id": "Std___DTreeMap___contains",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.alter":
    [{"id": "Std___DTreeMap___alter",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.Raw.mk":
    [{"id": "Std___DTreeMap___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.Raw.inner":
    [{"id": "Std___DTreeMap___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.Raw.WF.out":
    [{"id": "Std___DTreeMap___Raw___WF___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.Raw.WF.mk":
    [{"id": "Std___DTreeMap___Raw___WF___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.Raw.WF":
    [{"id": "Std___DTreeMap___Raw___WF___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap.Raw":
    [{"id": "Std___DTreeMap___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DTreeMap":
    [{"id": "Std___DTreeMap",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.valuesArray":
    [{"id": "Std___DHashMap___valuesArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.values":
    [{"id": "Std___DHashMap___values",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.union":
    [{"id": "Std___DHashMap___union",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.toList":
    [{"id": "Std___DHashMap___toList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.toArray":
    [{"id": "Std___DHashMap___toArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.size":
    [{"id": "Std___DHashMap___size",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.partition":
    [{"id": "Std___DHashMap___partition",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.ofList":
    [{"id": "Std___DHashMap___ofList",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.modify":
    [{"id": "Std___DHashMap___modify",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.map":
    [{"id": "Std___DHashMap___map",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.keysArray":
    [{"id": "Std___DHashMap___keysArray",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.keys":
    [{"id": "Std___DHashMap___keys",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.isEmpty":
    [{"id": "Std___DHashMap___isEmpty",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.insertMany":
    [{"id": "Std___DHashMap___insertMany",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.insertIfNew":
    [{"id": "Std___DHashMap___insertIfNew",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.insert":
    [{"id": "Std___DHashMap___insert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.getThenInsertIfNew?":
    [{"id": "Std___DHashMap___getThenInsertIfNew___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.getKeyD":
    [{"id": "Std___DHashMap___getKeyD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.getKey?":
    [{"id": "Std___DHashMap___getKey___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.getKey!":
    [{"id": "Std___DHashMap___getKey___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.getKey":
    [{"id": "Std___DHashMap___getKey",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.getD":
    [{"id": "Std___DHashMap___getD",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.get?":
    [{"id": "Std___DHashMap___get___-next",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.get!":
    [{"id": "Std___DHashMap___get___",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.get":
    [{"id": "Std___DHashMap___get",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.forM":
    [{"id": "Std___DHashMap___forM",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.forIn":
    [{"id": "Std___DHashMap___forIn",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.foldM":
    [{"id": "Std___DHashMap___foldM",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.fold":
    [{"id": "Std___DHashMap___fold",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.filterMap":
    [{"id": "Std___DHashMap___filterMap",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.filter":
    [{"id": "Std___DHashMap___filter",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.erase":
    [{"id": "Std___DHashMap___erase",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.emptyWithCapacity":
    [{"id": "Std___DHashMap___emptyWithCapacity",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.containsThenInsertIfNew":
    [{"id": "Std___DHashMap___containsThenInsertIfNew",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.containsThenInsert":
    [{"id": "Std___DHashMap___containsThenInsert",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.contains":
    [{"id": "Std___DHashMap___contains",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.alter":
    [{"id": "Std___DHashMap___alter",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.size":
    [{"id": "Std___DHashMap___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.mk":
    [{"id": "Std___DHashMap___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.buckets":
    [{"id": "Std___DHashMap___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.WF.wf":
    [{"id": "Std___DHashMap___Raw___WF___wf",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.WF.modify₀":
    [{"id": "Std___DHashMap___Raw___WF___wf",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.WF.insert₀":
    [{"id": "Std___DHashMap___Raw___WF___wf",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.WF.insertIfNew₀":
    [{"id": "Std___DHashMap___Raw___WF___wf",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.WF.getThenInsertIfNew?₀":
    [{"id": "Std___DHashMap___Raw___WF___wf",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.WF.filter₀":
    [{"id": "Std___DHashMap___Raw___WF___wf",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.WF.erase₀":
    [{"id": "Std___DHashMap___Raw___WF___wf",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.WF.emptyWithCapacity₀":
    [{"id": "Std___DHashMap___Raw___WF___wf",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.WF.containsThenInsert₀":
    [{"id": "Std___DHashMap___Raw___WF___wf",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.WF.containsThenInsertIfNew₀":
    [{"id": "Std___DHashMap___Raw___WF___wf",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.WF.constModify₀":
    [{"id": "Std___DHashMap___Raw___WF___wf",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.WF.constGetThenInsertIfNew?₀":
    [{"id": "Std___DHashMap___Raw___WF___wf",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.WF.constAlter₀":
    [{"id": "Std___DHashMap___Raw___WF___wf",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.WF.alter₀":
    [{"id": "Std___DHashMap___Raw___WF___wf",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw.WF":
    [{"id": "Std___DHashMap___Raw___WF___wf",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Raw":
    [{"id": "Std___DHashMap___Raw___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Equiv.mk":
    [{"id": "Std___DHashMap___Equiv___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Equiv.inner":
    [{"id": "Std___DHashMap___Equiv___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.Equiv":
    [{"id": "Std___DHashMap___Equiv___mk",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap":
    [{"id": "Std___DHashMap",
      "data": null,
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.Condvar.waitUntil":
    [{"id": "Std___Condvar___waitUntil",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.Condvar.wait":
    [{"id": "Std___Condvar___wait",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.Condvar.notifyOne":
    [{"id": "Std___Condvar___notifyOne",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.Condvar.notifyAll":
    [{"id": "Std___Condvar___notifyAll",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.Condvar.new":
    [{"id": "Std___Condvar___new",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.Condvar":
    [{"id": "Std___Condvar",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.CloseableChannel.new":
    [{"id": "Std___CloseableChannel___new",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.CloseableChannel":
    [{"id": "Std___CloseableChannel",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.Channel.sync":
    [{"id": "Std___Channel___sync",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.Channel.send":
    [{"id": "Std___Channel___send",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.Channel.recv":
    [{"id": "Std___Channel___recv",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.Channel.new":
    [{"id": "Std___Channel___new",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.Channel.forAsync":
    [{"id": "Std___Channel___forAsync",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.Channel.Sync":
    [{"id": "Std___Channel___Sync",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.Channel":
    [{"id": "Std___Channel",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "Std.AtomicT":
    [{"id": "Std___AtomicT",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "StateT.set":
    [{"id": "StateT___set",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateT.run'":
    [{"id": "StateT___run___",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateT.run":
    [{"id": "StateT___run",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateT.pure":
    [{"id": "StateT___pure",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateT.orElse":
    [{"id": "StateT___orElse",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateT.modifyGet":
    [{"id": "StateT___modifyGet",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateT.map":
    [{"id": "StateT___map",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateT.lift":
    [{"id": "StateT___lift",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateT.get":
    [{"id": "StateT___get",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateT.failure":
    [{"id": "StateT___failure",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateT.bind":
    [{"id": "StateT___bind",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateT":
    [{"id": "StateT",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateRefT'.set":
    [{"id": "StateRefT______set",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateRefT'.run'":
    [{"id": "StateRefT______run___",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateRefT'.run":
    [{"id": "StateRefT______run",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateRefT'.modifyGet":
    [{"id": "StateRefT______modifyGet",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateRefT'.lift":
    [{"id": "StateRefT______lift",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateRefT'.get":
    [{"id": "StateRefT______get",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateRefT'":
    [{"id": "StateRefT___",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateM":
    [{"id": "StateM",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateCpsT.runK":
    [{"id": "StateCpsT___runK",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateCpsT.run'":
    [{"id": "StateCpsT___run___",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateCpsT.run":
    [{"id": "StateCpsT___run",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateCpsT.lift":
    [{"id": "StateCpsT___lift",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "StateCpsT":
    [{"id": "StateCpsT",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Squash.mk":
    [{"id": "Squash___mk",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Squash.lift":
    [{"id": "Squash___lift",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Squash.ind":
    [{"id": "Squash___ind",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Squash":
    [{"id": "Squash",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "SizeOf.sizeOf":
    [{"id": "SizeOf___mk",
      "data": null,
      "address": "/The-Type-System/Inductive-Types/"}],
    "SizeOf.mk":
    [{"id": "SizeOf___mk",
      "data": null,
      "address": "/The-Type-System/Inductive-Types/"}],
    "SizeOf":
    [{"id": "SizeOf___mk",
      "data": null,
      "address": "/The-Type-System/Inductive-Types/"}],
    "Sigma.snd":
    [{"id": "Sigma___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "Sigma.mk":
    [{"id": "Sigma___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "Sigma.fst":
    [{"id": "Sigma___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "Sigma":
    [{"id": "Sigma___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "ShiftRight.shiftRight":
    [{"id": "ShiftRight___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "ShiftRight.mk":
    [{"id": "ShiftRight___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "ShiftRight":
    [{"id": "ShiftRight___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "ShiftLeft.shiftLeft":
    [{"id": "ShiftLeft___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "ShiftLeft.mk":
    [{"id": "ShiftLeft___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "ShiftLeft":
    [{"id": "ShiftLeft___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Setoid.trans":
    [{"id": "Setoid___trans",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Setoid.symm":
    [{"id": "Setoid___symm",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Setoid.refl":
    [{"id": "Setoid___refl",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Setoid.r":
    [{"id": "Setoid___mk",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Setoid.mk":
    [{"id": "Setoid___mk",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Setoid.iseqv":
    [{"id": "Setoid___mk",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Setoid":
    [{"id": "Setoid___mk",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "SeqRight.seqRight":
    [{"id": "SeqRight___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "SeqRight.mk":
    [{"id": "SeqRight___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "SeqRight":
    [{"id": "SeqRight___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "SeqLeft.seqLeft":
    [{"id": "SeqLeft___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "SeqLeft.mk":
    [{"id": "SeqLeft___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "SeqLeft":
    [{"id": "SeqLeft___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Seq.seq":
    [{"id": "Seq___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Seq.mk":
    [{"id": "Seq___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Seq":
    [{"id": "Seq___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "STWorld.mk":
    [{"id": "STWorld___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "STWorld":
    [{"id": "STWorld___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ST.mkRef":
    [{"id": "ST___mkRef",
      "data": null,
      "address": "/IO/Mutable-References/"}],
    "ST.Ref.toMonadStateOf":
    [{"id": "ST___Ref___toMonadStateOf",
      "data": null,
      "address": "/IO/Mutable-References/"}],
    "ST.Ref.take":
    [{"id": "ST___Ref___take",
      "data": null,
      "address": "/IO/Mutable-References/"}],
    "ST.Ref.swap":
    [{"id": "ST___Ref___swap",
      "data": null,
      "address": "/IO/Mutable-References/"}],
    "ST.Ref.set":
    [{"id": "ST___Ref___set",
      "data": null,
      "address": "/IO/Mutable-References/"}],
    "ST.Ref.ptrEq":
    [{"id": "ST___Ref___ptrEq",
      "data": null,
      "address": "/IO/Mutable-References/"}],
    "ST.Ref.modifyGet":
    [{"id": "ST___Ref___modifyGet",
      "data": null,
      "address": "/IO/Mutable-References/"}],
    "ST.Ref.modify":
    [{"id": "ST___Ref___modify",
      "data": null,
      "address": "/IO/Mutable-References/"}],
    "ST.Ref.mk":
    [{"id": "ST___Ref___mk",
      "data": null,
      "address": "/IO/Mutable-References/"}],
    "ST.Ref.get":
    [{"id": "ST___Ref___get",
      "data": null,
      "address": "/IO/Mutable-References/"}],
    "ST.Ref":
    [{"id": "ST___Ref___mk",
      "data": null,
      "address": "/IO/Mutable-References/"}],
    "ST": [{"id": "ST", "data": null, "address": "/IO/Mutable-References/"}],
    "ReprAtom.mk":
    [{"id": "ReprAtom___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "ReprAtom":
    [{"id": "ReprAtom___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Repr.reprPrec":
    [{"id": "Repr___mk", "data": null, "address": "/Interacting-with-Lean/"}],
    "Repr.mk":
    [{"id": "Repr___mk", "data": null, "address": "/Interacting-with-Lean/"}],
    "Repr.addAppParen":
    [{"id": "Repr___addAppParen",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "Repr":
    [{"id": "Repr___mk", "data": null, "address": "/Interacting-with-Lean/"}],
    "ReaderT.run":
    [{"id": "ReaderT___run",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ReaderT.read":
    [{"id": "ReaderT___read",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ReaderT.pure":
    [{"id": "ReaderT___pure",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ReaderT.orElse":
    [{"id": "ReaderT___orElse",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ReaderT.failure":
    [{"id": "ReaderT___failure",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ReaderT.bind":
    [{"id": "ReaderT___bind",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ReaderT.adapt":
    [{"id": "ReaderT___adapt",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ReaderT":
    [{"id": "ReaderT",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ReaderM":
    [{"id": "ReaderM",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "RandomGen.split":
    [{"id": "RandomGen___mk",
      "data": null,
      "address": "/IO/Random-Numbers/"}],
    "RandomGen.range":
    [{"id": "RandomGen___mk",
      "data": null,
      "address": "/IO/Random-Numbers/"}],
    "RandomGen.next":
    [{"id": "RandomGen___mk",
      "data": null,
      "address": "/IO/Random-Numbers/"}],
    "RandomGen.mk":
    [{"id": "RandomGen___mk",
      "data": null,
      "address": "/IO/Random-Numbers/"}],
    "RandomGen":
    [{"id": "RandomGen___mk",
      "data": null,
      "address": "/IO/Random-Numbers/"}],
    "Quotient.sound":
    [{"id": "Quotient___sound",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quotient.recOnSubsingleton₂":
    [{"id": "Quotient___recOnSubsingleton___",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quotient.recOnSubsingleton":
    [{"id": "Quotient___recOnSubsingleton",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quotient.recOn":
    [{"id": "Quotient___recOn",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quotient.rec":
    [{"id": "Quotient___rec",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quotient.mk'":
    [{"id": "Quotient___mk___",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quotient.mk":
    [{"id": "Quotient___mk",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quotient.lift₂":
    [{"id": "Quotient___lift___",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quotient.liftOn₂":
    [{"id": "Quotient___liftOn___",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quotient.liftOn":
    [{"id": "Quotient___liftOn",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quotient.lift":
    [{"id": "Quotient___lift",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quotient.ind":
    [{"id": "Quotient___ind",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quotient.hrecOn":
    [{"id": "Quotient___hrecOn",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quotient.exact":
    [{"id": "Quotient___exact",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quotient":
    [{"id": "Quotient",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quot.sound":
    [{"id": "Quot___sound",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quot.recOnSubsingleton":
    [{"id": "Quot___recOnSubsingleton",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quot.recOn":
    [{"id": "Quot___recOn",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quot.rec":
    [{"id": "Quot___rec",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quot.mk":
    [{"id": "Quot___mk",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quot.liftOn":
    [{"id": "Quot___liftOn",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quot.lift":
    [{"id": "Quot___lift",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quot.ind":
    [{"id": "Quot___ind",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quot.hrecOn":
    [{"id": "Quot___hrecOn",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Quot":
    [{"id": "Quot", "data": null, "address": "/The-Type-System/Quotients/"}],
    "Pure.pure":
    [{"id": "Pure___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Pure.mk":
    [{"id": "Pure___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Pure":
    [{"id": "Pure___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Prod.swap":
    [{"id": "Prod___swap", "data": null, "address": "/Basic-Types/Tuples/"}],
    "Prod.snd":
    [{"id": "Prod___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "Prod.mk":
    [{"id": "Prod___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "Prod.map":
    [{"id": "Prod___map", "data": null, "address": "/Basic-Types/Tuples/"}],
    "Prod.lexLt":
    [{"id": "Prod___lexLt", "data": null, "address": "/Basic-Types/Tuples/"}],
    "Prod.fst":
    [{"id": "Prod___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "Prod.foldI":
    [{"id": "Prod___foldI", "data": null, "address": "/Basic-Types/Tuples/"}],
    "Prod.anyI":
    [{"id": "Prod___anyI", "data": null, "address": "/Basic-Types/Tuples/"}],
    "Prod.allI":
    [{"id": "Prod___allI", "data": null, "address": "/Basic-Types/Tuples/"}],
    "Prod":
    [{"id": "Prod___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "Pow.pow":
    [{"id": "Pow___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Pow.mk":
    [{"id": "Pow___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Pow":
    [{"id": "Pow___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "PUnit.unit":
    [{"id": "PUnit___unit",
      "data": null,
      "address": "/Basic-Types/The-Unit-Type/"}],
    "PUnit":
    [{"id": "PUnit___unit",
      "data": null,
      "address": "/Basic-Types/The-Unit-Type/"}],
    "PSum.inr":
    [{"id": "PSum___inl",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "PSum.inl":
    [{"id": "PSum___inl",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "PSum.inhabitedRight":
    [{"id": "PSum___inhabitedRight",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "PSum.inhabitedLeft":
    [{"id": "PSum___inhabitedLeft",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "PSum":
    [{"id": "PSum___inl",
      "data": null,
      "address": "/Basic-Types/Sum-Types/"}],
    "PSigma.snd":
    [{"id": "PSigma___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "PSigma.mk":
    [{"id": "PSigma___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "PSigma.fst":
    [{"id": "PSigma___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "PSigma":
    [{"id": "PSigma___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "PProd.snd":
    [{"id": "PProd___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "PProd.mk":
    [{"id": "PProd___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "PProd.fst":
    [{"id": "PProd___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "PProd":
    [{"id": "PProd___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "PLift.up":
    [{"id": "PLift___up",
      "data": null,
      "address": "/The-Type-System/Universes/"}],
    "PLift.down":
    [{"id": "PLift___up",
      "data": null,
      "address": "/The-Type-System/Universes/"}],
    "PLift":
    [{"id": "PLift___up",
      "data": null,
      "address": "/The-Type-System/Universes/"}],
    "PEmpty.elim":
    [{"id": "PEmpty___elim",
      "data": null,
      "address": "/Basic-Types/The-Empty-Type/"}],
    "PEmpty":
    [{"id": "PEmpty",
      "data": null,
      "address": "/Basic-Types/The-Empty-Type/"}],
    "Ordering.then":
    [{"id": "Ordering___then",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ordering.swap":
    [{"id": "Ordering___swap",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ordering.lt":
    [{"id": "Ordering___lt",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ordering.isNe":
    [{"id": "Ordering___isNe",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ordering.isLT":
    [{"id": "Ordering___isLT",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ordering.isLE":
    [{"id": "Ordering___isLE",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ordering.isGT":
    [{"id": "Ordering___isGT",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ordering.isGE":
    [{"id": "Ordering___isGE",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ordering.isEq":
    [{"id": "Ordering___isEq",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ordering.gt":
    [{"id": "Ordering___lt",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ordering.eq":
    [{"id": "Ordering___lt",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ordering":
    [{"id": "Ordering___lt",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ord.toLT":
    [{"id": "Ord___toLT",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ord.toLE":
    [{"id": "Ord___toLE",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ord.toBEq":
    [{"id": "Ord___toBEq",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ord.opposite":
    [{"id": "Ord___opposite",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ord.on":
    [{"id": "Ord___on",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ord.mk":
    [{"id": "Ord___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ord.lex'":
    [{"id": "Ord___lex___",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ord.lex":
    [{"id": "Ord___lex",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ord.compare":
    [{"id": "Ord___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Ord":
    [{"id": "Ord___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Or.inr":
    [{"id": "Or___inl",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "Or.inl":
    [{"id": "Or___inl",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "Or.by_cases'":
    [{"id": "Or___by_cases___",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "Or.by_cases":
    [{"id": "Or___by_cases",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "Or":
    [{"id": "Or___inl",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "OptionT.tryCatch":
    [{"id": "OptionT___tryCatch",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "OptionT.run":
    [{"id": "OptionT___run",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "OptionT.pure":
    [{"id": "OptionT___pure",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "OptionT.orElse":
    [{"id": "OptionT___orElse",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "OptionT.mk":
    [{"id": "OptionT___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "OptionT.lift":
    [{"id": "OptionT___lift",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "OptionT.fail":
    [{"id": "OptionT___fail",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "OptionT.bind":
    [{"id": "OptionT___bind",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "OptionT":
    [{"id": "OptionT",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Option.unattach":
    [{"id": "Option___unattach",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.tryCatch":
    [{"id": "Option___tryCatch",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.toList":
    [{"id": "Option___toList",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.toArray":
    [{"id": "Option___toArray",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.some":
    [{"id": "Option___none",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.sequence":
    [{"id": "Option___sequence",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.repr":
    [{"id": "Option___repr",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.pmap":
    [{"id": "Option___pmap",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.pelim":
    [{"id": "Option___pelim",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.pbind":
    [{"id": "Option___pbind",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.orElse":
    [{"id": "Option___orElse",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.or":
    [{"id": "Option___or",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.none":
    [{"id": "Option___none",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.min":
    [{"id": "Option___min",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.merge":
    [{"id": "Option___merge",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.max":
    [{"id": "Option___max",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.mapM":
    [{"id": "Option___mapM",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.mapA":
    [{"id": "Option___mapA",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.map":
    [{"id": "Option___map",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.lt":
    [{"id": "Option___lt",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.join":
    [{"id": "Option___join",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.isSome":
    [{"id": "Option___isSome",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.isNone":
    [{"id": "Option___isNone",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.isEqSome":
    [{"id": "Option___isEqSome",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.guard":
    [{"id": "Option___guard",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.getM":
    [{"id": "Option___getM",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.getDM":
    [{"id": "Option___getDM",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.getD":
    [{"id": "Option___getD",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.get!":
    [{"id": "Option___get___",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.get":
    [{"id": "Option___get",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.format":
    [{"id": "Option___format",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.forM":
    [{"id": "Option___forM",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.filter":
    [{"id": "Option___filter",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.elimM":
    [{"id": "Option___elimM",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.elim":
    [{"id": "Option___elim",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.decidableEqNone":
    [{"id": "Option___decidableEqNone",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.choice":
    [{"id": "Option___choice",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.bindM":
    [{"id": "Option___bindM",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.bind":
    [{"id": "Option___bind",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.attachWith":
    [{"id": "Option___attachWith",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.attach":
    [{"id": "Option___attach",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.any":
    [{"id": "Option___any",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option.all":
    [{"id": "Option___all",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "Option":
    [{"id": "Option___none",
      "data": null,
      "address": "/Basic-Types/Optional-Values/"}],
    "OfScientific.ofScientific":
    [{"id": "OfScientific___mk",
      "data": null,
      "address": "/Terms/Literals/"}],
    "OfScientific.mk":
    [{"id": "OfScientific___mk",
      "data": null,
      "address": "/Terms/Literals/"}],
    "OfScientific":
    [{"id": "OfScientific___mk",
      "data": null,
      "address": "/Terms/Literals/"}],
    "OfNat.ofNat":
    [{"id": "OfNat___mk", "data": null, "address": "/Terms/Literals/"}],
    "OfNat.mk":
    [{"id": "OfNat___mk", "data": null, "address": "/Terms/Literals/"}],
    "OfNat":
    [{"id": "OfNat___mk", "data": null, "address": "/Terms/Literals/"}],
    "Not.elim":
    [{"id": "Not___elim",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "Not":
    [{"id": "Not",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "Nonempty.intro":
    [{"id": "Nonempty___intro",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Nonempty":
    [{"id": "Nonempty___intro",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Neg.neg":
    [{"id": "Neg___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Neg.mk":
    [{"id": "Neg___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Neg":
    [{"id": "Neg___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "NeZero.out":
    [{"id": "NeZero___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "NeZero.mk":
    [{"id": "NeZero___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "NeZero":
    [{"id": "NeZero___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "NatPow.pow":
    [{"id": "NatPow___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "NatPow.mk":
    [{"id": "NatPow___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "NatPow":
    [{"id": "NatPow___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "NatCast.natCast":
    [{"id": "NatCast___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "NatCast.mk":
    [{"id": "NatCast___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "NatCast":
    [{"id": "NatCast___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Nat.zero":
    [{"id": "Nat___zero",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.xor":
    [{"id": "Nat___xor",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toUSize":
    [{"id": "Nat___toUSize",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toUInt8":
    [{"id": "Nat___toUInt8",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toUInt64":
    [{"id": "Nat___toUInt64",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toUInt32":
    [{"id": "Nat___toUInt32",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toUInt16":
    [{"id": "Nat___toUInt16",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toSuperscriptString":
    [{"id": "Nat___toSuperscriptString",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toSuperDigits":
    [{"id": "Nat___toSuperDigits",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toSubscriptString":
    [{"id": "Nat___toSubscriptString",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toSubDigits":
    [{"id": "Nat___toSubDigits",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toInt8":
    [{"id": "Nat___toInt8",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toInt64":
    [{"id": "Nat___toInt64",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toInt32":
    [{"id": "Nat___toInt32",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toInt16":
    [{"id": "Nat___toInt16",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toISize":
    [{"id": "Nat___toISize",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toFloat32":
    [{"id": "Nat___toFloat32",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toFloat":
    [{"id": "Nat___toFloat",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.toDigits":
    [{"id": "Nat___toDigits",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.testBit":
    [{"id": "Nat___testBit",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.superDigitChar":
    [{"id": "Nat___superDigitChar",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.succ":
    [{"id": "Nat___zero",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.subDigitChar":
    [{"id": "Nat___subDigitChar",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.sub":
    [{"id": "Nat___sub",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.strongRecOn":
    [{"id": "Nat___strongRecOn",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.shiftRight":
    [{"id": "Nat___shiftRight",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.shiftLeft":
    [{"id": "Nat___shiftLeft",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.repr":
    [{"id": "Nat___repr",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.repeatTR":
    [{"id": "Nat___repeatTR",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.repeat":
    [{"id": "Nat___repeat",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.recAux":
    [{"id": "Nat___recAux",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.pred":
    [{"id": "Nat___pred",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.pow":
    [{"id": "Nat___pow",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.nextPowerOfTwo":
    [{"id": "Nat___nextPowerOfTwo",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.mul":
    [{"id": "Nat___mul",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.modCore":
    [{"id": "Nat___modCore",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.mod.inductionOn":
    [{"id": "Nat___mod___inductionOn",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.mod":
    [{"id": "Nat___mod",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.min":
    [{"id": "Nat___min",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.max":
    [{"id": "Nat___max",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.lt":
    [{"id": "Nat___lt",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.lor":
    [{"id": "Nat___lor",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.log2":
    [{"id": "Nat___log2",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.le.step":
    [{"id": "Nat___le___refl",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.le.refl":
    [{"id": "Nat___le___refl",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.le":
    [{"id": "Nat___le___refl",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.lcm":
    [{"id": "Nat___lcm",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.land":
    [{"id": "Nat___land",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.isValidChar":
    [{"id": "Nat___isValidChar",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.isPowerOfTwo":
    [{"id": "Nat___isPowerOfTwo",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.gcd":
    [{"id": "Nat___gcd",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.forRevM":
    [{"id": "Nat___forRevM",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.forM":
    [{"id": "Nat___forM",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.foldTR":
    [{"id": "Nat___foldTR",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.foldRevM":
    [{"id": "Nat___foldRevM",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.foldRev":
    [{"id": "Nat___foldRev",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.foldM":
    [{"id": "Nat___foldM",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.fold":
    [{"id": "Nat___fold",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.div2Induction":
    [{"id": "Nat___div2Induction",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.div.inductionOn":
    [{"id": "Nat___div___inductionOn",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.div":
    [{"id": "Nat___div",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.digitChar":
    [{"id": "Nat___digitChar",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.decLt":
    [{"id": "Nat___decLt",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.decLe":
    [{"id": "Nat___decLe",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.decEq":
    [{"id": "Nat___decEq",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.cast":
    [{"id": "Nat___cast",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Nat.casesAuxOn":
    [{"id": "Nat___casesAuxOn",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.caseStrongRecOn":
    [{"id": "Nat___caseStrongRecOn",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.blt":
    [{"id": "Nat___blt",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.ble":
    [{"id": "Nat___ble",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.bitwise":
    [{"id": "Nat___bitwise",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.beq":
    [{"id": "Nat___beq",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.anyTR":
    [{"id": "Nat___anyTR",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.anyM":
    [{"id": "Nat___anyM",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.any":
    [{"id": "Nat___any",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.allTR":
    [{"id": "Nat___allTR",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.allM":
    [{"id": "Nat___allM",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.all":
    [{"id": "Nat___all",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat.add":
    [{"id": "Nat___add",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Nat":
    [{"id": "Nat___zero",
      "data": null,
      "address": "/Basic-Types/Natural-Numbers/"}],
    "Mul.mul":
    [{"id": "Mul___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Mul.mk":
    [{"id": "Mul___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Mul":
    [{"id": "Mul___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "MonadWithReaderOf.withReader":
    [{"id": "MonadWithReaderOf___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadWithReaderOf.mk":
    [{"id": "MonadWithReaderOf___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadWithReaderOf":
    [{"id": "MonadWithReaderOf___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadWithReader.withReader":
    [{"id": "MonadWithReader___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadWithReader.mk":
    [{"id": "MonadWithReader___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadWithReader":
    [{"id": "MonadWithReader___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadStateOf.set":
    [{"id": "MonadStateOf___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadStateOf.modifyGet":
    [{"id": "MonadStateOf___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadStateOf.mk":
    [{"id": "MonadStateOf___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadStateOf.get":
    [{"id": "MonadStateOf___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadStateOf":
    [{"id": "MonadStateOf___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadState.set":
    [{"id": "MonadState___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadState.modifyGet":
    [{"id": "MonadState___modifyGet",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"},
     {"id": "MonadState___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadState.mk":
    [{"id": "MonadState___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadState.get":
    [{"id": "MonadState___get",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"},
     {"id": "MonadState___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadState":
    [{"id": "MonadState___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadReaderOf.read":
    [{"id": "MonadReaderOf___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadReaderOf.mk":
    [{"id": "MonadReaderOf___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadReaderOf":
    [{"id": "MonadReaderOf___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadReader.read":
    [{"id": "MonadReader___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadReader.mk":
    [{"id": "MonadReader___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadReader":
    [{"id": "MonadReader___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadLiftT.monadLift":
    [{"id": "MonadLiftT___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadLiftT.mk":
    [{"id": "MonadLiftT___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadLiftT":
    [{"id": "MonadLiftT___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadLift.monadLift":
    [{"id": "MonadLift___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadLift.mk":
    [{"id": "MonadLift___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadLift":
    [{"id": "MonadLift___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadFunctorT.monadMap":
    [{"id": "MonadFunctorT___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadFunctorT.mk":
    [{"id": "MonadFunctorT___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadFunctorT":
    [{"id": "MonadFunctorT___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadFunctor.monadMap":
    [{"id": "MonadFunctor___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadFunctor.mk":
    [{"id": "MonadFunctor___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadFunctor":
    [{"id": "MonadFunctor___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadFinally.tryFinally'":
    [{"id": "MonadFinally___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadFinally.mk":
    [{"id": "MonadFinally___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadFinally":
    [{"id": "MonadFinally___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadExceptOf.tryCatch":
    [{"id": "MonadExceptOf___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadExceptOf.throw":
    [{"id": "MonadExceptOf___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadExceptOf.mk":
    [{"id": "MonadExceptOf___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadExceptOf":
    [{"id": "MonadExceptOf___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadExcept.tryCatch":
    [{"id": "MonadExcept___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadExcept.throw":
    [{"id": "MonadExcept___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadExcept.orelse'":
    [{"id": "MonadExcept___orelse___",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadExcept.orElse":
    [{"id": "MonadExcept___orElse",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadExcept.ofExcept":
    [{"id": "MonadExcept___ofExcept",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadExcept.mk":
    [{"id": "MonadExcept___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadExcept":
    [{"id": "MonadExcept___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "MonadEvalT.monadEval":
    [{"id": "MonadEvalT___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "MonadEvalT.mk":
    [{"id": "MonadEvalT___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "MonadEvalT":
    [{"id": "MonadEvalT___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "MonadEval.monadEval":
    [{"id": "MonadEval___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "MonadEval.mk":
    [{"id": "MonadEval___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "MonadEval":
    [{"id": "MonadEval___mk",
      "data": null,
      "address": "/Interacting-with-Lean/"}],
    "MonadControlT.stM":
    [{"id": "MonadControlT___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadControlT.restoreM":
    [{"id": "MonadControlT___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadControlT.mk":
    [{"id": "MonadControlT___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadControlT.liftWith":
    [{"id": "MonadControlT___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadControlT":
    [{"id": "MonadControlT___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadControl.stM":
    [{"id": "MonadControl___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadControl.restoreM":
    [{"id": "MonadControl___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadControl.mk":
    [{"id": "MonadControl___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadControl.liftWith":
    [{"id": "MonadControl___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "MonadControl":
    [{"id": "MonadControl___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Lifting-Monads/"}],
    "Monad.toApplicative":
    [{"id": "Monad___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Monad.mk":
    [{"id": "Monad___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Monad":
    [{"id": "Monad___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Mod.mod":
    [{"id": "Mod___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Mod.mk":
    [{"id": "Mod___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Mod":
    [{"id": "Mod___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Min.mk":
    [{"id": "Min___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Min.min":
    [{"id": "Min___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Min":
    [{"id": "Min___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Max.mk":
    [{"id": "Max___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Max.max":
    [{"id": "Max___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Max":
    [{"id": "Max___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "MProd.snd":
    [{"id": "MProd___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "MProd.mk":
    [{"id": "MProd___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "MProd.fst":
    [{"id": "MProd___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "MProd":
    [{"id": "MProd___mk", "data": null, "address": "/Basic-Types/Tuples/"}],
    "List.zipWithTR":
    [{"id": "List___zipWithTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.zipWithAll":
    [{"id": "List___zipWithAll",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.zipWith":
    [{"id": "List___zipWith",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.zipIdxTR":
    [{"id": "List___zipIdxTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.zipIdx":
    [{"id": "List___zipIdx",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.zip":
    [{"id": "List___zip",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.unzipTR":
    [{"id": "List___unzipTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.unzip":
    [{"id": "List___unzip",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.unattach":
    [{"id": "List___unattach",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.toString":
    [{"id": "List___toString",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.toFloatArray":
    [{"id": "List___toFloatArray",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.toByteArray":
    [{"id": "List___toByteArray",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.toArrayImpl":
    [{"id": "List___toArrayImpl",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.toArray":
    [{"id": "List___toArray",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.takeWhileTR":
    [{"id": "List___takeWhileTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.takeWhile":
    [{"id": "List___takeWhile",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.takeTR":
    [{"id": "List___takeTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.take":
    [{"id": "List___take",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.tailD":
    [{"id": "List___tailD",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.tail?":
    [{"id": "List___tail___-next",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.tail!":
    [{"id": "List___tail___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.tail":
    [{"id": "List___tail",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.sum":
    [{"id": "List___sum",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.splitBy":
    [{"id": "List___splitBy",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.splitAt":
    [{"id": "List___splitAt",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.span":
    [{"id": "List___span",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.singleton":
    [{"id": "List___singleton",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.setTR":
    [{"id": "List___setTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.set":
    [{"id": "List___set",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.rotateRight":
    [{"id": "List___rotateRight",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.rotateLeft":
    [{"id": "List___rotateLeft",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.rightpad":
    [{"id": "List___rightpad",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.reverse":
    [{"id": "List___reverse",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.replicateTR":
    [{"id": "List___replicateTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.replicate":
    [{"id": "List___replicate",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.replaceTR":
    [{"id": "List___replaceTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.replace":
    [{"id": "List___replace",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.removeAll":
    [{"id": "List___removeAll",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.range'TR":
    [{"id": "List___range___TR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.range'":
    [{"id": "List___range___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.range":
    [{"id": "List___range",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.pmap":
    [{"id": "List___pmap",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.partitionMap":
    [{"id": "List___partitionMap",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.partitionM":
    [{"id": "List___partitionM",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.partition":
    [{"id": "List___partition",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.or":
    [{"id": "List___or",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.ofFn":
    [{"id": "List___ofFn",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.nil":
    [{"id": "List___nil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.modifyTailIdx":
    [{"id": "List___modifyTailIdx",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.modifyTR":
    [{"id": "List___modifyTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.modifyHead":
    [{"id": "List___modifyHead",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.modify":
    [{"id": "List___modify",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.min?":
    [{"id": "List___min___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.mergeSort":
    [{"id": "List___mergeSort",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.merge":
    [{"id": "List___merge",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.max?":
    [{"id": "List___max___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.mapTR":
    [{"id": "List___mapTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.mapMonoM":
    [{"id": "List___mapMonoM",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.mapMono":
    [{"id": "List___mapMono",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.mapM'":
    [{"id": "List___mapM___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.mapM":
    [{"id": "List___mapM",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.mapIdxM":
    [{"id": "List___mapIdxM",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.mapIdx":
    [{"id": "List___mapIdx",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.mapFinIdxM":
    [{"id": "List___mapFinIdxM",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.mapFinIdx":
    [{"id": "List___mapFinIdx",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.mapA":
    [{"id": "List___mapA",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.map":
    [{"id": "List___map",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.lt":
    [{"id": "List___lt",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.lookup":
    [{"id": "List___lookup",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.lex":
    [{"id": "List___lex",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.lengthTR":
    [{"id": "List___lengthTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.length":
    [{"id": "List___length",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.leftpadTR":
    [{"id": "List___leftpadTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.leftpad":
    [{"id": "List___leftpad",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.le":
    [{"id": "List___le",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.isSuffixOf?":
    [{"id": "List___isSuffixOf___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.isSuffixOf":
    [{"id": "List___isSuffixOf",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.isSublist":
    [{"id": "List___isSublist",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.isPrefixOf?":
    [{"id": "List___isPrefixOf___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.isPrefixOf":
    [{"id": "List___isPrefixOf",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.isPerm":
    [{"id": "List___isPerm",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.isEqv":
    [{"id": "List___isEqv",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.isEmpty":
    [{"id": "List___isEmpty",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.intersperseTR":
    [{"id": "List___intersperseTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.intersperse":
    [{"id": "List___intersperse",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.intercalateTR":
    [{"id": "List___intercalateTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.intercalate":
    [{"id": "List___intercalate",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.insertIdxTR":
    [{"id": "List___insertIdxTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.insertIdx":
    [{"id": "List___insertIdx",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.insert":
    [{"id": "List___insert",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.idxOf?":
    [{"id": "List___idxOf___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.idxOf":
    [{"id": "List___idxOf",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.headD":
    [{"id": "List___headD",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.head?":
    [{"id": "List___head___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.head!":
    [{"id": "List___head___-next",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.head":
    [{"id": "List___head",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.groupByKey":
    [{"id": "List___groupByKey",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.getLastD":
    [{"id": "List___getLastD",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.getLast?":
    [{"id": "List___getLast___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.getLast!":
    [{"id": "List___getLast___-next",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.getLast":
    [{"id": "List___getLast",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.getD":
    [{"id": "List___getD",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.get":
    [{"id": "List___get",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.forM":
    [{"id": "List___forM",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.forA":
    [{"id": "List___forA",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.foldrTR":
    [{"id": "List___foldrTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.foldrRecOn":
    [{"id": "List___foldrRecOn",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.foldrM":
    [{"id": "List___foldrM",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.foldr":
    [{"id": "List___foldr",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.foldlRecOn":
    [{"id": "List___foldlRecOn",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.foldlM":
    [{"id": "List___foldlM",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.foldl":
    [{"id": "List___foldl",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.flattenTR":
    [{"id": "List___flattenTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.flatten":
    [{"id": "List___flatten",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.flatMapTR":
    [{"id": "List___flatMapTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.flatMapM":
    [{"id": "List___flatMapM",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.flatMap":
    [{"id": "List___flatMap",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.firstM":
    [{"id": "List___firstM",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.findSomeM?":
    [{"id": "List___findSomeM___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.findSome?":
    [{"id": "List___findSome___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.findM?":
    [{"id": "List___findM___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.findIdx?":
    [{"id": "List___findIdx___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.findIdx":
    [{"id": "List___findIdx",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.findFinIdx?":
    [{"id": "List___findFinIdx___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.find?":
    [{"id": "List___find___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.finRange":
    [{"id": "List___finRange",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.finIdxOf?":
    [{"id": "List___finIdxOf___",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.filterTR":
    [{"id": "List___filterTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.filterRevM":
    [{"id": "List___filterRevM",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.filterMapTR":
    [{"id": "List___filterMapTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.filterMapM":
    [{"id": "List___filterMapM",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.filterMap":
    [{"id": "List___filterMap",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.filterM":
    [{"id": "List___filterM",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.filter":
    [{"id": "List___filter",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.extract":
    [{"id": "List___extract",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.eraseTR":
    [{"id": "List___eraseTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.eraseReps":
    [{"id": "List___eraseReps",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.erasePTR":
    [{"id": "List___erasePTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.eraseP":
    [{"id": "List___eraseP",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.eraseIdxTR":
    [{"id": "List___eraseIdxTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.eraseIdx":
    [{"id": "List___eraseIdx",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.eraseDups":
    [{"id": "List___eraseDups",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.erase":
    [{"id": "List___erase",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.elem":
    [{"id": "List___elem",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.dropWhile":
    [{"id": "List___dropWhile",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.dropLastTR":
    [{"id": "List___dropLastTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.dropLast":
    [{"id": "List___dropLast",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.drop":
    [{"id": "List___drop",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.countP":
    [{"id": "List___countP",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.count":
    [{"id": "List___count",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.contains":
    [{"id": "List___contains",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.cons":
    [{"id": "List___nil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.concat":
    [{"id": "List___concat",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.beq":
    [{"id": "List___beq",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.attachWith":
    [{"id": "List___attachWith",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.attach":
    [{"id": "List___attach",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.asString":
    [{"id": "List___asString",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.appendTR":
    [{"id": "List___appendTR",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.append":
    [{"id": "List___append",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.anyM":
    [{"id": "List___anyM",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.any":
    [{"id": "List___any",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.and":
    [{"id": "List___and",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.allM":
    [{"id": "List___allM",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.all":
    [{"id": "List___all",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Sublist.slnil":
    [{"id": "List___Sublist___slnil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Sublist.cons₂":
    [{"id": "List___Sublist___slnil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Sublist.cons":
    [{"id": "List___Sublist___slnil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Sublist":
    [{"id": "List___Sublist___slnil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Perm.trans":
    [{"id": "List___Perm___nil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Perm.swap":
    [{"id": "List___Perm___nil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Perm.nil":
    [{"id": "List___Perm___nil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Perm.cons":
    [{"id": "List___Perm___nil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Perm":
    [{"id": "List___Perm___nil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Pairwise.nil":
    [{"id": "List___Pairwise___nil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Pairwise.cons":
    [{"id": "List___Pairwise___nil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Pairwise":
    [{"id": "List___Pairwise___nil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Nodup":
    [{"id": "List___Nodup",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Mem.tail":
    [{"id": "List___Mem___head",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Mem.head":
    [{"id": "List___Mem___head",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Mem":
    [{"id": "List___Mem___head",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Lex.rel":
    [{"id": "List___Lex___nil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Lex.nil":
    [{"id": "List___Lex___nil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Lex.cons":
    [{"id": "List___Lex___nil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.Lex":
    [{"id": "List___Lex___nil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.IsSuffix":
    [{"id": "List___IsSuffix",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.IsPrefix":
    [{"id": "List___IsPrefix",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.IsInfix":
    [{"id": "List___IsInfix",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "List":
    [{"id": "List___nil",
      "data": null,
      "address": "/Basic-Types/Linked-Lists/"}],
    "Lean.strLitKind":
    [{"id": "Lean___strLitKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.scientificLitKind":
    [{"id": "Lean___scientificLitKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.numLitKind":
    [{"id": "Lean___numLitKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.nullKind":
    [{"id": "Lean___nullKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.nameLitKind":
    [{"id": "Lean___nameLitKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.interpolatedStrLitKind":
    [{"id": "Lean___interpolatedStrLitKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.interpolatedStrKind":
    [{"id": "Lean___interpolatedStrKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.identKind":
    [{"id": "Lean___identKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.hygieneInfoKind":
    [{"id": "Lean___hygieneInfoKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.groupKind":
    [{"id": "Lean___groupKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.fieldIdxKind":
    [{"id": "Lean___fieldIdxKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.choiceKind":
    [{"id": "Lean___choiceKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.charLitKind":
    [{"id": "Lean___charLitKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.TSyntaxArray":
    [{"id": "Lean___TSyntaxArray",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.TSyntax.raw":
    [{"id": "Lean___TSyntax___mk",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.TSyntax.mk":
    [{"id": "Lean___TSyntax___mk",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.TSyntax.getString":
    [{"id": "Lean___TSyntax___getString",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.TSyntax.getScientific":
    [{"id": "Lean___TSyntax___getScientific",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.TSyntax.getNat":
    [{"id": "Lean___TSyntax___getNat",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.TSyntax.getName":
    [{"id": "Lean___TSyntax___getName",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.TSyntax.getId":
    [{"id": "Lean___TSyntax___getId",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.TSyntax.getHygieneInfo":
    [{"id": "Lean___TSyntax___getHygieneInfo",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.TSyntax.getChar":
    [{"id": "Lean___TSyntax___getChar",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.TSyntax":
    [{"id": "Lean___TSyntax___mk",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.SyntaxNodeKinds":
    [{"id": "Lean___SyntaxNodeKinds",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.SyntaxNodeKind":
    [{"id": "Lean___SyntaxNodeKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.setKind":
    [{"id": "Lean___Syntax___setKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.node":
    [{"id": "Lean___Syntax___missing",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.missing":
    [{"id": "Lean___Syntax___missing",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.isOfKind":
    [{"id": "Lean___Syntax___isOfKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.ident":
    [{"id": "Lean___Syntax___missing",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.getKind":
    [{"id": "Lean___Syntax___getKind",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.atom":
    [{"id": "Lean___Syntax___missing",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.Term":
    [{"id": "Lean___Syntax___Term",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.Tactic":
    [{"id": "Lean___Syntax___Tactic",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.TSepArray.mk":
    [{"id": "Lean___Syntax___TSepArray___mk",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.TSepArray.elemsAndSeps":
    [{"id": "Lean___Syntax___TSepArray___mk",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.TSepArray":
    [{"id": "Lean___Syntax___TSepArray___mk",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.StrLit":
    [{"id": "Lean___Syntax___StrLit",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.ScientificLit":
    [{"id": "Lean___Syntax___ScientificLit",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.Prio":
    [{"id": "Lean___Syntax___Prio",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.Preresolved.namespace":
    [{"id": "Lean___Syntax___Preresolved___namespace",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.Preresolved.decl":
    [{"id": "Lean___Syntax___Preresolved___namespace",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.Preresolved":
    [{"id": "Lean___Syntax___Preresolved___namespace",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.Prec":
    [{"id": "Lean___Syntax___Prec",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.NumLit":
    [{"id": "Lean___Syntax___NumLit",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.NameLit":
    [{"id": "Lean___Syntax___NameLit",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.Level":
    [{"id": "Lean___Syntax___Level",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.Ident":
    [{"id": "Lean___Syntax___Ident",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.HygieneInfo":
    [{"id": "Lean___Syntax___HygieneInfo",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.Command":
    [{"id": "Lean___Syntax___Command",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax.CharLit":
    [{"id": "Lean___Syntax___CharLit",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Syntax":
    [{"id": "Lean___Syntax___missing",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.SourceInfo.synthetic":
    [{"id": "Lean___SourceInfo___original",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.SourceInfo.original":
    [{"id": "Lean___SourceInfo___original",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.SourceInfo.none":
    [{"id": "Lean___SourceInfo___original",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.SourceInfo":
    [{"id": "Lean___SourceInfo___original",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.PrettyPrinter.Unexpander":
    [{"id": "Lean___PrettyPrinter___Unexpander",
      "data": null,
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "Lean.PrettyPrinter.UnexpandM":
    [{"id": "Lean___PrettyPrinter___UnexpandM",
      "data": null,
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "Lean.Parser.LeadingIdentBehavior.symbol":
    [{"id": "Lean___Parser___LeadingIdentBehavior___default",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.LeadingIdentBehavior.default":
    [{"id": "Lean___Parser___LeadingIdentBehavior___default",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.LeadingIdentBehavior.both":
    [{"id": "Lean___Parser___LeadingIdentBehavior___default",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.LeadingIdentBehavior":
    [{"id": "Lean___Parser___LeadingIdentBehavior___default",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Order.monotone":
    [{"id": "Lean___Order___monotone",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Order.fix_eq":
    [{"id": "Lean___Order___fix_eq",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Order.fix":
    [{"id": "Lean___Order___fix",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Order.PartialOrder.rel_trans":
    [{"id": "Lean___Order___PartialOrder___mk",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Order.PartialOrder.rel_refl":
    [{"id": "Lean___Order___PartialOrder___mk",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Order.PartialOrder.rel_antisymm":
    [{"id": "Lean___Order___PartialOrder___mk",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Order.PartialOrder.rel":
    [{"id": "Lean___Order___PartialOrder___mk",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Order.PartialOrder.mk":
    [{"id": "Lean___Order___PartialOrder___mk",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Order.PartialOrder":
    [{"id": "Lean___Order___PartialOrder___mk",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Order.CCPO.toPartialOrder":
    [{"id": "Lean___Order___CCPO___mk",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Order.CCPO.mk":
    [{"id": "Lean___Order___CCPO___mk",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Order.CCPO":
    [{"id": "Lean___Order___CCPO___mk",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Meta.registerSimpAttr":
    [{"id": "Lean___Meta___registerSimpAttr",
      "data": null,
      "address": "/The-Simplifier/Simp-sets/"}],
    "Lean.Meta.TransparencyMode.reducible":
    [{"id": "Lean___Meta___TransparencyMode___all",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Meta.TransparencyMode.instances":
    [{"id": "Lean___Meta___TransparencyMode___all",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Meta.TransparencyMode.default":
    [{"id": "Lean___Meta___TransparencyMode___all",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Meta.TransparencyMode.all":
    [{"id": "Lean___Meta___TransparencyMode___all",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Meta.TransparencyMode":
    [{"id": "Lean___Meta___TransparencyMode___all",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Meta.SimpExtension":
    [{"id": "Lean___Meta___SimpExtension",
      "data": null,
      "address": "/The-Simplifier/Simp-sets/"}],
    "Lean.Meta.Simp.neutralConfig":
    [{"id": "Lean___Meta___Simp___neutralConfig",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.zetaUnused":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.zetaHave":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.zetaDelta":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.zeta":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.unfoldPartialApp":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.singlePass":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.proj":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.mk":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.memoize":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.maxSteps":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.maxDischargeDepth":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.letToHave":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.iota":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.index":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.implicitDefEqProofs":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.ground":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.failIfUnchanged":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.etaStruct":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.eta":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.dsimp":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.decide":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.contextual":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.congrConsts":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.catchRuntime":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.bitVecOfNat":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.beta":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.autoUnfold":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config.arith":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Simp.Config":
    [{"id": "Lean___Meta___Simp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.Rewrite.NewGoals":
    [{"id": "Lean___Meta___Rewrite___NewGoals",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Meta.Rewrite.Config.transparency":
    [{"id": "Lean___Meta___Rewrite___Config___mk",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Meta.Rewrite.Config.offsetCnstrs":
    [{"id": "Lean___Meta___Rewrite___Config___mk",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Meta.Rewrite.Config.occs":
    [{"id": "Lean___Meta___Rewrite___Config___mk",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Meta.Rewrite.Config.newGoals":
    [{"id": "Lean___Meta___Rewrite___Config___mk",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Meta.Rewrite.Config.mk":
    [{"id": "Lean___Meta___Rewrite___Config___mk",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Meta.Rewrite.Config":
    [{"id": "Lean___Meta___Rewrite___Config___mk",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Meta.Occurrences.pos":
    [{"id": "Lean___Meta___Occurrences___all",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Meta.Occurrences.neg":
    [{"id": "Lean___Meta___Occurrences___all",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Meta.Occurrences.all":
    [{"id": "Lean___Meta___Occurrences___all",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Meta.Occurrences":
    [{"id": "Lean___Meta___Occurrences___all",
      "data": null,
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Meta.DSimp.Config.zetaUnused":
    [{"id": "Lean___Meta___DSimp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.DSimp.Config.zetaHave":
    [{"id": "Lean___Meta___DSimp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.DSimp.Config.zetaDelta":
    [{"id": "Lean___Meta___DSimp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.DSimp.Config.zeta":
    [{"id": "Lean___Meta___DSimp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.DSimp.Config.unfoldPartialApp":
    [{"id": "Lean___Meta___DSimp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.DSimp.Config.proj":
    [{"id": "Lean___Meta___DSimp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.DSimp.Config.mk":
    [{"id": "Lean___Meta___DSimp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.DSimp.Config.iota":
    [{"id": "Lean___Meta___DSimp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.DSimp.Config.index":
    [{"id": "Lean___Meta___DSimp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.DSimp.Config.failIfUnchanged":
    [{"id": "Lean___Meta___DSimp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.DSimp.Config.etaStruct":
    [{"id": "Lean___Meta___DSimp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.DSimp.Config.eta":
    [{"id": "Lean___Meta___DSimp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.DSimp.Config.decide":
    [{"id": "Lean___Meta___DSimp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.DSimp.Config.beta":
    [{"id": "Lean___Meta___DSimp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.DSimp.Config.autoUnfold":
    [{"id": "Lean___Meta___DSimp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.Meta.DSimp.Config":
    [{"id": "Lean___Meta___DSimp___Config___mk",
      "data": null,
      "address": "/The-Simplifier/Configuring-Simplification/"}],
    "Lean.MacroM":
    [{"id": "Lean___MacroM",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Macro.withFreshMacroScope":
    [{"id": "Lean___Macro___withFreshMacroScope",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Macro.trace":
    [{"id": "Lean___Macro___trace",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Macro.throwUnsupported":
    [{"id": "Lean___Macro___throwUnsupported",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Macro.throwErrorAt":
    [{"id": "Lean___Macro___throwErrorAt",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Macro.throwError":
    [{"id": "Lean___Macro___throwError",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Macro.resolveNamespace":
    [{"id": "Lean___Macro___resolveNamespace",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Macro.resolveGlobalName":
    [{"id": "Lean___Macro___resolveGlobalName",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Macro.hasDecl":
    [{"id": "Lean___Macro___hasDecl",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Macro.getCurrNamespace":
    [{"id": "Lean___Macro___getCurrNamespace",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Macro.expandMacro?":
    [{"id": "Lean___Macro___expandMacro___",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Macro.addMacroScope":
    [{"id": "Lean___Macro___addMacroScope",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Macro.Exception.unsupportedSyntax":
    [{"id": "Lean___Macro___Exception___unsupportedSyntax",
      "data": null,
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.LeanOption.value":
    [{"id": "Lean___LeanOption___mk",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lean.LeanOption.name":
    [{"id": "Lean___LeanOption___mk",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lean.LeanOption.mk":
    [{"id": "Lean___LeanOption___mk",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lean.LeanOption":
    [{"id": "Lean___LeanOption___mk",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lean.Grind.ToInt.toInt_mem":
    [{"id": "Lean___Grind___ToInt___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Integer-Arithmetic/"}],
    "Lean.Grind.ToInt.toInt_inj":
    [{"id": "Lean___Grind___ToInt___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Integer-Arithmetic/"}],
    "Lean.Grind.ToInt.toInt":
    [{"id": "Lean___Grind___ToInt___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Integer-Arithmetic/"}],
    "Lean.Grind.ToInt.mk":
    [{"id": "Lean___Grind___ToInt___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Integer-Arithmetic/"}],
    "Lean.Grind.ToInt":
    [{"id": "Lean___Grind___ToInt___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Integer-Arithmetic/"}],
    "Lean.Grind.Semiring.zero_mul":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.toMul":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.toAdd":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.right_distrib":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.pow_zero":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.pow_succ":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.one_mul":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.ofNat_succ":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.ofNat":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.nsmul":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.npow":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.natCast":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.mul_zero":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.mul_one":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.mul_assoc":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.mk":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.left_distrib":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.add_zero":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.add_comm":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring.add_assoc":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Semiring":
    [{"id": "Lean___Grind___Semiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Ring.toSemiring":
    [{"id": "Lean___Grind___Ring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Ring.mk":
    [{"id": "Lean___Grind___Ring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Ring":
    [{"id": "Lean___Grind___Ring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Preorder.mk":
    [{"id": "Lean___Grind___Preorder___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.Preorder.lt_iff_le_not_le":
    [{"id": "Lean___Grind___Preorder___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.Preorder.le_trans":
    [{"id": "Lean___Grind___Preorder___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.Preorder.le_refl":
    [{"id": "Lean___Grind___Preorder___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.Preorder":
    [{"id": "Lean___Grind___Preorder___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.PartialOrder.toPreorder":
    [{"id": "Lean___Grind___PartialOrder___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.PartialOrder.mk":
    [{"id": "Lean___Grind___PartialOrder___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.PartialOrder":
    [{"id": "Lean___Grind___PartialOrder___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.OrderedRing.zero_lt_one":
    [{"id": "Lean___Grind___OrderedRing___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.OrderedRing.toOrderedAdd":
    [{"id": "Lean___Grind___OrderedRing___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.OrderedRing.mul_lt_mul_of_pos_left":
    [{"id": "Lean___Grind___OrderedRing___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.OrderedRing.mk":
    [{"id": "Lean___Grind___OrderedRing___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.OrderedRing":
    [{"id": "Lean___Grind___OrderedRing___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.OrderedAdd.mk":
    [{"id": "Lean___Grind___OrderedAdd___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.OrderedAdd.add_le_left_iff":
    [{"id": "Lean___Grind___OrderedAdd___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.OrderedAdd":
    [{"id": "Lean___Grind___OrderedAdd___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.NoNatZeroDivisors.no_nat_zero_divisors":
    [{"id": "Lean___Grind___NoNatZeroDivisors___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.NoNatZeroDivisors.mk'":
    [{"id": "Lean___Grind___NoNatZeroDivisors___mk___",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.NoNatZeroDivisors.mk":
    [{"id": "Lean___Grind___NoNatZeroDivisors___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.NoNatZeroDivisors":
    [{"id": "Lean___Grind___NoNatZeroDivisors___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.NatModule.toAddCommMonoid":
    [{"id": "Lean___Grind___NatModule___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.NatModule.mk":
    [{"id": "Lean___Grind___NatModule___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.NatModule":
    [{"id": "Lean___Grind___NatModule___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.LinearOrder.toPartialOrder":
    [{"id": "Lean___Grind___LinearOrder___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.LinearOrder.mk":
    [{"id": "Lean___Grind___LinearOrder___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.LinearOrder":
    [{"id": "Lean___Grind___LinearOrder___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.IsCharP.ofNat_ext_iff":
    [{"id": "Lean___Grind___IsCharP___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.IsCharP.mk":
    [{"id": "Lean___Grind___IsCharP___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.IsCharP":
    [{"id": "Lean___Grind___IsCharP___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.IntModule.toAddCommGroup":
    [{"id": "Lean___Grind___IntModule___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.IntModule.mk":
    [{"id": "Lean___Grind___IntModule___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.IntModule":
    [{"id": "Lean___Grind___IntModule___mk",
      "data": null,
      "address": "/The--grind--tactic/Linear-Arithmetic-Solver/"}],
    "Lean.Grind.IntInterval.io":
    [{"id": "Lean___Grind___IntInterval___co",
      "data": null,
      "address": "/The--grind--tactic/Linear-Integer-Arithmetic/"}],
    "Lean.Grind.IntInterval.ii":
    [{"id": "Lean___Grind___IntInterval___co",
      "data": null,
      "address": "/The--grind--tactic/Linear-Integer-Arithmetic/"}],
    "Lean.Grind.IntInterval.co":
    [{"id": "Lean___Grind___IntInterval___co",
      "data": null,
      "address": "/The--grind--tactic/Linear-Integer-Arithmetic/"}],
    "Lean.Grind.IntInterval.ci":
    [{"id": "Lean___Grind___IntInterval___co",
      "data": null,
      "address": "/The--grind--tactic/Linear-Integer-Arithmetic/"}],
    "Lean.Grind.IntInterval":
    [{"id": "Lean___Grind___IntInterval___co",
      "data": null,
      "address": "/The--grind--tactic/Linear-Integer-Arithmetic/"}],
    "Lean.Grind.Field.toCommRing":
    [{"id": "Lean___Grind___Field___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Field.mk":
    [{"id": "Lean___Grind___Field___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.Field":
    [{"id": "Lean___Grind___Field___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.CommSemiring.toSemiring":
    [{"id": "Lean___Grind___CommSemiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.CommSemiring.mk":
    [{"id": "Lean___Grind___CommSemiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.CommSemiring":
    [{"id": "Lean___Grind___CommSemiring___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.CommRing.toRing":
    [{"id": "Lean___Grind___CommRing___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.CommRing.mk":
    [{"id": "Lean___Grind___CommRing___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.CommRing":
    [{"id": "Lean___Grind___CommRing___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.AddRightCancel.mk":
    [{"id": "Lean___Grind___AddRightCancel___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.AddRightCancel.add_right_cancel":
    [{"id": "Lean___Grind___AddRightCancel___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Grind.AddRightCancel":
    [{"id": "Lean___Grind___AddRightCancel___mk",
      "data": null,
      "address":
      "/The--grind--tactic/Algebraic-Solver-_LPAR_Commutative-Rings___-Fields_RPAR_/"}],
    "Lean.Elab.registerDerivingHandler":
    [{"id": "Lean___Elab___registerDerivingHandler",
      "data": null,
      "address": "/Type-Classes/Deriving-Instances/"}],
    "LawfulMonad.toLawfulApplicative":
    [{"id": "LawfulMonad___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "LawfulMonad.mk'":
    [{"id": "LawfulMonad___mk___",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "LawfulMonad.mk":
    [{"id": "LawfulMonad___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "LawfulMonad":
    [{"id": "LawfulMonad___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "LawfulHashable.mk":
    [{"id": "LawfulHashable___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "LawfulHashable.hash_eq":
    [{"id": "LawfulHashable___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "LawfulHashable":
    [{"id": "LawfulHashable___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "LawfulGetElem.mk":
    [{"id": "LawfulGetElem___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "LawfulGetElem.getElem?_def":
    [{"id": "LawfulGetElem___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "LawfulGetElem.getElem!_def":
    [{"id": "LawfulGetElem___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "LawfulGetElem":
    [{"id": "LawfulGetElem___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "LawfulFunctor.mk":
    [{"id": "LawfulFunctor___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "LawfulFunctor.map_const":
    [{"id": "LawfulFunctor___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "LawfulFunctor.id_map":
    [{"id": "LawfulFunctor___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "LawfulFunctor.comp_map":
    [{"id": "LawfulFunctor___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "LawfulFunctor":
    [{"id": "LawfulFunctor___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "LawfulBEq.toReflBEq":
    [{"id": "LawfulBEq___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "LawfulBEq.mk":
    [{"id": "LawfulBEq___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "LawfulBEq":
    [{"id": "LawfulBEq___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "LawfulApplicative.toLawfulFunctor":
    [{"id": "LawfulApplicative___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "LawfulApplicative.seqRight_eq":
    [{"id": "LawfulApplicative___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "LawfulApplicative.seqLeft_eq":
    [{"id": "LawfulApplicative___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "LawfulApplicative.pure_seq":
    [{"id": "LawfulApplicative___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "LawfulApplicative.mk":
    [{"id": "LawfulApplicative___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "LawfulApplicative":
    [{"id": "LawfulApplicative___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Laws/"}],
    "Lake.getTryCache":
    [{"id": "Lake___getTryCache",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getSharedLibPath":
    [{"id": "Lake___getSharedLibPath",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getRootPackage":
    [{"id": "Lake___getRootPackage",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getPkgUrlMap":
    [{"id": "Lake___getPkgUrlMap",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getNoCache":
    [{"id": "Lake___getNoCache",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLeanc":
    [{"id": "Lake___getLeanc",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLeanSystemLibDir":
    [{"id": "Lake___getLeanSystemLibDir",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLeanSysroot":
    [{"id": "Lake___getLeanSysroot",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLeanSrcPath":
    [{"id": "Lake___getLeanSrcPath",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLeanSrcDir":
    [{"id": "Lake___getLeanSrcDir",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLeanSharedLib":
    [{"id": "Lake___getLeanSharedLib",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLeanPath":
    [{"id": "Lake___getLeanPath",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLeanLibDir":
    [{"id": "Lake___getLeanLibDir",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLeanInstall":
    [{"id": "Lake___getLeanInstall",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLeanIncludeDir":
    [{"id": "Lake___getLeanIncludeDir",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLeanCc?":
    [{"id": "Lake___getLeanCc___",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLeanCc":
    [{"id": "Lake___getLeanCc",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLeanAr":
    [{"id": "Lake___getLeanAr",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLean":
    [{"id": "Lake___getLean",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLakeSrcDir":
    [{"id": "Lake___getLakeSrcDir",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLakeLibDir":
    [{"id": "Lake___getLakeLibDir",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLakeInstall":
    [{"id": "Lake___getLakeInstall",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLakeHome":
    [{"id": "Lake___getLakeHome",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLakeEnv":
    [{"id": "Lake___getLakeEnv",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getLake":
    [{"id": "Lake___getLake",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getEnvSharedLibPath":
    [{"id": "Lake___getEnvSharedLibPath",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getEnvLeanSrcPath":
    [{"id": "Lake___getEnvLeanSrcPath",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getEnvLeanPath":
    [{"id": "Lake___getEnvLeanPath",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getElanToolchain":
    [{"id": "Lake___getElanToolchain",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getElanInstall?":
    [{"id": "Lake___getElanInstall___",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getElanHome?":
    [{"id": "Lake___getElanHome___",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getElan?":
    [{"id": "Lake___getElan___",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getAugmentedSharedLibPath":
    [{"id": "Lake___getAugmentedSharedLibPath",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getAugmentedLeanSrcPath":
    [{"id": "Lake___getAugmentedLeanSrcPath",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getAugmentedLeanPath":
    [{"id": "Lake___getAugmentedLeanPath",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.getAugmentedEnv":
    [{"id": "Lake___getAugmentedEnv",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.findPackage?":
    [{"id": "Lake___findPackage___",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.findModule?":
    [{"id": "Lake___findModule___",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.findLeanLib?":
    [{"id": "Lake___findLeanLib___",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.findLeanExe?":
    [{"id": "Lake___findLeanExe___",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.findExternLib?":
    [{"id": "Lake___findExternLib___",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.ScriptM":
    [{"id": "Lake___ScriptM-next",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id": "Lake___ScriptM",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.MonadWorkspace.mk":
    [{"id": "Lake___MonadWorkspace___mk",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.MonadWorkspace.getWorkspace":
    [{"id": "Lake___MonadWorkspace___mk",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.MonadWorkspace":
    [{"id": "Lake___MonadWorkspace___mk",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.MonadLakeEnv":
    [{"id": "Lake___MonadLakeEnv",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig.toLeanConfig":
    [{"id": "Lake___LeanLibConfig___mk",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig.mk":
    [{"id": "Lake___LeanLibConfig___mk",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig":
    [{"id": "Lake___LeanLibConfig___mk",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig.toLeanConfig":
    [{"id": "Lake___LeanExeConfig___mk",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig.mk":
    [{"id": "Lake___LeanExeConfig___mk",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig":
    [{"id": "Lake___LeanExeConfig___mk",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.Glob.submodules":
    [{"id": "Lake___Glob___one",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.Glob.one":
    [{"id": "Lake___Glob___one",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.Glob.andSubmodules":
    [{"id": "Lake___Glob___one",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.Glob":
    [{"id": "Lake___Glob___one",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.BuildType.release":
    [{"id": "Lake___BuildType___debug",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.BuildType.relWithDebInfo":
    [{"id": "Lake___BuildType___debug",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.BuildType.minSizeRel":
    [{"id": "Lake___BuildType___debug",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.BuildType.debug":
    [{"id": "Lake___BuildType___debug",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.BuildType":
    [{"id": "Lake___BuildType___debug",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.Backend.llvm":
    [{"id": "Lake___Backend___c",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.Backend.default":
    [{"id": "Lake___Backend___c",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.Backend.c":
    [{"id": "Lake___Backend___c",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.Backend":
    [{"id": "Lake___Backend___c",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "LT.mk":
    [{"id": "LT___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "LT.lt":
    [{"id": "LT___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "LT":
    [{"id": "LT___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "LE.mk":
    [{"id": "LE___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "LE.le":
    [{"id": "LE___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "LE":
    [{"id": "LE___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "IntCast.mk":
    [{"id": "IntCast___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "IntCast.intCast":
    [{"id": "IntCast___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "IntCast":
    [{"id": "IntCast___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Int8.xor":
    [{"id": "Int8___xor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.toUInt8":
    [{"id": "Int8___toUInt8",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.toNatClampNeg":
    [{"id": "Int8___toNatClampNeg",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.toInt64":
    [{"id": "Int8___toInt64",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.toInt32":
    [{"id": "Int8___toInt32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.toInt16":
    [{"id": "Int8___toInt16",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.toInt":
    [{"id": "Int8___toInt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.toISize":
    [{"id": "Int8___toISize",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.toFloat32":
    [{"id": "Int8___toFloat32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.toFloat":
    [{"id": "Int8___toFloat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.toBitVec":
    [{"id": "Int8___toBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.sub":
    [{"id": "Int8___sub",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.size":
    [{"id": "Int8___size",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.shiftRight":
    [{"id": "Int8___shiftRight",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.shiftLeft":
    [{"id": "Int8___shiftLeft",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.ofNat":
    [{"id": "Int8___ofNat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.ofIntTruncate":
    [{"id": "Int8___ofIntTruncate",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.ofIntLE":
    [{"id": "Int8___ofIntLE",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.ofInt":
    [{"id": "Int8___ofInt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.ofBitVec":
    [{"id": "Int8___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.neg":
    [{"id": "Int8___neg",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.mul":
    [{"id": "Int8___mul",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.mod":
    [{"id": "Int8___mod",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.minValue":
    [{"id": "Int8___minValue",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.maxValue":
    [{"id": "Int8___maxValue",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.lt":
    [{"id": "Int8___lt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.lor":
    [{"id": "Int8___lor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.le":
    [{"id": "Int8___le",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.land":
    [{"id": "Int8___land",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.div":
    [{"id": "Int8___div",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.decLt":
    [{"id": "Int8___decLt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.decLe":
    [{"id": "Int8___decLe",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.decEq":
    [{"id": "Int8___decEq",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.complement":
    [{"id": "Int8___complement",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.add":
    [{"id": "Int8___add",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8.abs":
    [{"id": "Int8___abs",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int8":
    [{"id": "Int8___toUInt8",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.xor":
    [{"id": "Int64___xor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.toUInt64":
    [{"id": "Int64___toUInt64",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.toNatClampNeg":
    [{"id": "Int64___toNatClampNeg",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.toInt8":
    [{"id": "Int64___toInt8",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.toInt32":
    [{"id": "Int64___toInt32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.toInt16":
    [{"id": "Int64___toInt16",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.toInt":
    [{"id": "Int64___toInt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.toISize":
    [{"id": "Int64___toISize",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.toFloat32":
    [{"id": "Int64___toFloat32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.toFloat":
    [{"id": "Int64___toFloat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.toBitVec":
    [{"id": "Int64___toBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.sub":
    [{"id": "Int64___sub",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.size":
    [{"id": "Int64___size",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.shiftRight":
    [{"id": "Int64___shiftRight",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.shiftLeft":
    [{"id": "Int64___shiftLeft",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.ofNat":
    [{"id": "Int64___ofNat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.ofIntTruncate":
    [{"id": "Int64___ofIntTruncate",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.ofIntLE":
    [{"id": "Int64___ofIntLE",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.ofInt":
    [{"id": "Int64___ofInt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.ofBitVec":
    [{"id": "Int64___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.neg":
    [{"id": "Int64___neg",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.mul":
    [{"id": "Int64___mul",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.mod":
    [{"id": "Int64___mod",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.minValue":
    [{"id": "Int64___minValue",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.maxValue":
    [{"id": "Int64___maxValue",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.lt":
    [{"id": "Int64___lt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.lor":
    [{"id": "Int64___lor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.le":
    [{"id": "Int64___le",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.land":
    [{"id": "Int64___land",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.div":
    [{"id": "Int64___div",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.decLt":
    [{"id": "Int64___decLt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.decLe":
    [{"id": "Int64___decLe",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.decEq":
    [{"id": "Int64___decEq",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.complement":
    [{"id": "Int64___complement",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.add":
    [{"id": "Int64___add",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64.abs":
    [{"id": "Int64___abs",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int64":
    [{"id": "Int64___toUInt64",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.xor":
    [{"id": "Int32___xor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.toUInt32":
    [{"id": "Int32___toUInt32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.toNatClampNeg":
    [{"id": "Int32___toNatClampNeg",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.toInt8":
    [{"id": "Int32___toInt8",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.toInt64":
    [{"id": "Int32___toInt64",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.toInt16":
    [{"id": "Int32___toInt16",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.toInt":
    [{"id": "Int32___toInt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.toISize":
    [{"id": "Int32___toISize",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.toFloat32":
    [{"id": "Int32___toFloat32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.toFloat":
    [{"id": "Int32___toFloat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.toBitVec":
    [{"id": "Int32___toBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.sub":
    [{"id": "Int32___sub",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.size":
    [{"id": "Int32___size",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.shiftRight":
    [{"id": "Int32___shiftRight",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.shiftLeft":
    [{"id": "Int32___shiftLeft",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.ofNat":
    [{"id": "Int32___ofNat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.ofIntTruncate":
    [{"id": "Int32___ofIntTruncate",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.ofIntLE":
    [{"id": "Int32___ofIntLE",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.ofInt":
    [{"id": "Int32___ofInt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.ofBitVec":
    [{"id": "Int32___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.neg":
    [{"id": "Int32___neg",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.mul":
    [{"id": "Int32___mul",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.mod":
    [{"id": "Int32___mod",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.minValue":
    [{"id": "Int32___minValue",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.maxValue":
    [{"id": "Int32___maxValue",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.lt":
    [{"id": "Int32___lt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.lor":
    [{"id": "Int32___lor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.le":
    [{"id": "Int32___le",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.land":
    [{"id": "Int32___land",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.div":
    [{"id": "Int32___div",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.decLt":
    [{"id": "Int32___decLt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.decLe":
    [{"id": "Int32___decLe",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.decEq":
    [{"id": "Int32___decEq",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.complement":
    [{"id": "Int32___complement",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.add":
    [{"id": "Int32___add",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32.abs":
    [{"id": "Int32___abs",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int32":
    [{"id": "Int32___toUInt32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.xor":
    [{"id": "Int16___xor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.toUInt16":
    [{"id": "Int16___toUInt16",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.toNatClampNeg":
    [{"id": "Int16___toNatClampNeg",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.toInt8":
    [{"id": "Int16___toInt8",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.toInt64":
    [{"id": "Int16___toInt64",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.toInt32":
    [{"id": "Int16___toInt32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.toInt":
    [{"id": "Int16___toInt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.toISize":
    [{"id": "Int16___toISize",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.toFloat32":
    [{"id": "Int16___toFloat32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.toFloat":
    [{"id": "Int16___toFloat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.toBitVec":
    [{"id": "Int16___toBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.sub":
    [{"id": "Int16___sub",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.size":
    [{"id": "Int16___size",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.shiftRight":
    [{"id": "Int16___shiftRight",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.shiftLeft":
    [{"id": "Int16___shiftLeft",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.ofNat":
    [{"id": "Int16___ofNat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.ofIntTruncate":
    [{"id": "Int16___ofIntTruncate",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.ofIntLE":
    [{"id": "Int16___ofIntLE",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.ofInt":
    [{"id": "Int16___ofInt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.ofBitVec":
    [{"id": "Int16___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.neg":
    [{"id": "Int16___neg",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.mul":
    [{"id": "Int16___mul",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.mod":
    [{"id": "Int16___mod",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.minValue":
    [{"id": "Int16___minValue",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.maxValue":
    [{"id": "Int16___maxValue",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.lt":
    [{"id": "Int16___lt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.lor":
    [{"id": "Int16___lor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.le":
    [{"id": "Int16___le",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.land":
    [{"id": "Int16___land",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.div":
    [{"id": "Int16___div",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.decLt":
    [{"id": "Int16___decLt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.decLe":
    [{"id": "Int16___decLe",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.decEq":
    [{"id": "Int16___decEq",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.complement":
    [{"id": "Int16___complement",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.add":
    [{"id": "Int16___add",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16.abs":
    [{"id": "Int16___abs",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int16":
    [{"id": "Int16___toUInt16",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "Int.toNat?":
    [{"id": "Int___toNat___",
      "data": null,
      "address": "/Basic-Types/Integers/"}],
    "Int.toNat":
    [{"id": "Int___toNat",
      "data": null,
      "address": "/Basic-Types/Integers/"}],
    "Int.toInt8":
    [{"id": "Int___toInt8",
      "data": null,
      "address": "/Basic-Types/Integers/"}],
    "Int.toInt64":
    [{"id": "Int___toInt64",
      "data": null,
      "address": "/Basic-Types/Integers/"}],
    "Int.toInt32":
    [{"id": "Int___toInt32",
      "data": null,
      "address": "/Basic-Types/Integers/"}],
    "Int.toInt16":
    [{"id": "Int___toInt16",
      "data": null,
      "address": "/Basic-Types/Integers/"}],
    "Int.toISize":
    [{"id": "Int___toISize",
      "data": null,
      "address": "/Basic-Types/Integers/"}],
    "Int.tmod":
    [{"id": "Int___tmod", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.tdiv":
    [{"id": "Int___tdiv", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.subNatNat":
    [{"id": "Int___subNatNat",
      "data": null,
      "address": "/Basic-Types/Integers/"}],
    "Int.sub":
    [{"id": "Int___sub", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.sign":
    [{"id": "Int___sign", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.shiftRight":
    [{"id": "Int___shiftRight",
      "data": null,
      "address": "/Basic-Types/Integers/"}],
    "Int.repr":
    [{"id": "Int___repr", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.pow":
    [{"id": "Int___pow", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.ofNat":
    [{"id": "Int___ofNat",
      "data": null,
      "address": "/Basic-Types/Integers/"}],
    "Int.not":
    [{"id": "Int___not", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.negSucc":
    [{"id": "Int___ofNat",
      "data": null,
      "address": "/Basic-Types/Integers/"}],
    "Int.negOfNat":
    [{"id": "Int___negOfNat",
      "data": null,
      "address": "/Basic-Types/Integers/"}],
    "Int.neg":
    [{"id": "Int___neg", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.natAbs":
    [{"id": "Int___natAbs",
      "data": null,
      "address": "/Basic-Types/Integers/"}],
    "Int.mul":
    [{"id": "Int___mul", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.lt":
    [{"id": "Int___lt", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.le":
    [{"id": "Int___le", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.lcm":
    [{"id": "Int___lcm", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.gcd":
    [{"id": "Int___gcd", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.fmod":
    [{"id": "Int___fmod", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.fdiv":
    [{"id": "Int___fdiv", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.emod":
    [{"id": "Int___emod", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.ediv":
    [{"id": "Int___ediv", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.decEq":
    [{"id": "Int___decEq",
      "data": null,
      "address": "/Basic-Types/Integers/"}],
    "Int.cast":
    [{"id": "Int___cast",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Int.bmod":
    [{"id": "Int___bmod", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.bdiv":
    [{"id": "Int___bdiv", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int.add":
    [{"id": "Int___add", "data": null, "address": "/Basic-Types/Integers/"}],
    "Int":
    [{"id": "Int___ofNat",
      "data": null,
      "address": "/Basic-Types/Integers/"}],
    "Inhabited.mk":
    [{"id": "Inhabited___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Inhabited.default":
    [{"id": "Inhabited___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Inhabited":
    [{"id": "Inhabited___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Iff.mpr":
    [{"id": "Iff___intro",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "Iff.mp":
    [{"id": "Iff___intro",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "Iff.intro":
    [{"id": "Iff___intro",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "Iff.elim":
    [{"id": "Iff___elim",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "Iff":
    [{"id": "Iff___intro",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "Id.run":
    [{"id": "Id___run",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Id":
    [{"id": "Id",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ISize.xor":
    [{"id": "ISize___xor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.toUSize":
    [{"id": "ISize___toUSize",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.toNatClampNeg":
    [{"id": "ISize___toNatClampNeg",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.toInt8":
    [{"id": "ISize___toInt8",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.toInt64":
    [{"id": "ISize___toInt64",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.toInt32":
    [{"id": "ISize___toInt32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.toInt16":
    [{"id": "ISize___toInt16",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.toInt":
    [{"id": "ISize___toInt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.toFloat32":
    [{"id": "ISize___toFloat32",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.toFloat":
    [{"id": "ISize___toFloat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.toBitVec":
    [{"id": "ISize___toBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.sub":
    [{"id": "ISize___sub",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.size":
    [{"id": "ISize___size",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.shiftRight":
    [{"id": "ISize___shiftRight",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.shiftLeft":
    [{"id": "ISize___shiftLeft",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.ofNat":
    [{"id": "ISize___ofNat",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.ofIntTruncate":
    [{"id": "ISize___ofIntTruncate",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.ofIntLE":
    [{"id": "ISize___ofIntLE",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.ofInt":
    [{"id": "ISize___ofInt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.ofBitVec":
    [{"id": "ISize___ofBitVec",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.neg":
    [{"id": "ISize___neg",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.mul":
    [{"id": "ISize___mul",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.mod":
    [{"id": "ISize___mod",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.minValue":
    [{"id": "ISize___minValue",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.maxValue":
    [{"id": "ISize___maxValue",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.lt":
    [{"id": "ISize___lt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.lor":
    [{"id": "ISize___lor",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.le":
    [{"id": "ISize___le",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.land":
    [{"id": "ISize___land",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.div":
    [{"id": "ISize___div",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.decLt":
    [{"id": "ISize___decLt",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.decLe":
    [{"id": "ISize___decLe",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.decEq":
    [{"id": "ISize___decEq",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.complement":
    [{"id": "ISize___complement",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.add":
    [{"id": "ISize___add",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize.abs":
    [{"id": "ISize___abs",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "ISize":
    [{"id": "ISize___toUSize",
      "data": null,
      "address": "/Basic-Types/Fixed-Precision-Integers/"}],
    "IO.withStdout":
    [{"id": "IO___withStdout",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.withStdin":
    [{"id": "IO___withStdin",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.withStderr":
    [{"id": "IO___withStderr",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.waitAny":
    [{"id": "IO___waitAny",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.wait":
    [{"id": "IO___wait", "data": null, "address": "/IO/Tasks-and-Threads/"}],
    "IO.userError":
    [{"id": "IO___userError", "data": null, "address": "/IO/Logical-Model/"}],
    "IO.toEIO":
    [{"id": "IO___toEIO", "data": null, "address": "/IO/Logical-Model/"}],
    "IO.sleep":
    [{"id": "IO___sleep", "data": null, "address": "/IO/Timing/"}],
    "IO.setStdout":
    [{"id": "IO___setStdout",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.setStdin":
    [{"id": "IO___setStdin",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.setStderr":
    [{"id": "IO___setStderr",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.setRandSeed":
    [{"id": "IO___setRandSeed",
      "data": null,
      "address": "/IO/Random-Numbers/"}],
    "IO.setAccessRights":
    [{"id": "IO___setAccessRights",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.rand":
    [{"id": "IO___rand", "data": null, "address": "/IO/Random-Numbers/"}],
    "IO.println":
    [{"id": "IO___println", "data": null, "address": "/IO/Console-Output/"}],
    "IO.print":
    [{"id": "IO___print", "data": null, "address": "/IO/Console-Output/"}],
    "IO.ofExcept":
    [{"id": "IO___ofExcept", "data": null, "address": "/IO/Logical-Model/"}],
    "IO.monoNanosNow":
    [{"id": "IO___monoNanosNow", "data": null, "address": "/IO/Timing/"}],
    "IO.monoMsNow":
    [{"id": "IO___monoMsNow", "data": null, "address": "/IO/Timing/"}],
    "IO.mkRef":
    [{"id": "IO___mkRef",
      "data": null,
      "address": "/IO/Mutable-References/"}],
    "IO.mapTasks":
    [{"id": "IO___mapTasks",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.mapTask":
    [{"id": "IO___mapTask",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.lazyPure":
    [{"id": "IO___lazyPure", "data": null, "address": "/IO/Logical-Model/"}],
    "IO.iterate":
    [{"id": "IO___iterate",
      "data": null,
      "address": "/IO/Control-Structures/"}],
    "IO.hasFinished":
    [{"id": "IO___hasFinished",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.getTaskState":
    [{"id": "IO___getTaskState",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.getTID":
    [{"id": "IO___getTID",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.getStdout":
    [{"id": "IO___getStdout",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.getStdin":
    [{"id": "IO___getStdin",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.getStderr":
    [{"id": "IO___getStderr",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.getRandomBytes":
    [{"id": "IO___getRandomBytes",
      "data": null,
      "address": "/IO/Random-Numbers/"}],
    "IO.getNumHeartbeats":
    [{"id": "IO___getNumHeartbeats", "data": null, "address": "/IO/Timing/"}],
    "IO.getEnv":
    [{"id": "IO___getEnv",
      "data": null,
      "address": "/IO/Environment-Variables/"}],
    "IO.eprintln":
    [{"id": "IO___eprintln", "data": null, "address": "/IO/Console-Output/"}],
    "IO.eprint":
    [{"id": "IO___eprint", "data": null, "address": "/IO/Console-Output/"}],
    "IO.currentDir":
    [{"id": "IO___currentDir",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.checkCanceled":
    [{"id": "IO___checkCanceled",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.chainTask":
    [{"id": "IO___chainTask",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.cancel":
    [{"id": "IO___cancel",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.bindTask":
    [{"id": "IO___bindTask",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.asTask":
    [{"id": "IO___asTask",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.appPath":
    [{"id": "IO___appPath",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.appDir":
    [{"id": "IO___appDir",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.addHeartbeats":
    [{"id": "IO___addHeartbeats", "data": null, "address": "/IO/Timing/"}],
    "IO.TaskState.waiting":
    [{"id": "IO___TaskState___waiting",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.TaskState.running":
    [{"id": "IO___TaskState___waiting",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.TaskState.finished":
    [{"id": "IO___TaskState___waiting",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.TaskState":
    [{"id": "IO___TaskState___waiting",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.Ref":
    [{"id": "IO___Ref", "data": null, "address": "/IO/Mutable-References/"}],
    "IO.Promise.resultD":
    [{"id": "IO___Promise___resultD",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.Promise.result?":
    [{"id": "IO___Promise___result___",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.Promise.result!":
    [{"id": "IO___Promise___result___-next",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.Promise.resolve":
    [{"id": "IO___Promise___resolve",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.Promise.new":
    [{"id": "IO___Promise___new",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.Promise.isResolved":
    [{"id": "IO___Promise___isResolved",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.Promise":
    [{"id": "IO___Promise",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "IO.Process.spawn":
    [{"id": "IO___Process___spawn",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.setCurrentDir":
    [{"id": "IO___Process___setCurrentDir",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.run":
    [{"id": "IO___Process___run", "data": null, "address": "/IO/Processes/"}],
    "IO.Process.output":
    [{"id": "IO___Process___output",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.getPID":
    [{"id": "IO___Process___getPID",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.getCurrentDir":
    [{"id": "IO___Process___getCurrentDir",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.exit":
    [{"id": "IO___Process___exit",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.StdioConfig.stdout":
    [{"id": "IO___Process___StdioConfig___mk",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.StdioConfig.stdin":
    [{"id": "IO___Process___StdioConfig___mk",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.StdioConfig.stderr":
    [{"id": "IO___Process___StdioConfig___mk",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.StdioConfig.mk":
    [{"id": "IO___Process___StdioConfig___mk",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.StdioConfig":
    [{"id": "IO___Process___StdioConfig___mk",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Stdio.toHandleType":
    [{"id": "IO___Process___Stdio___toHandleType",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Stdio.piped":
    [{"id": "IO___Process___Stdio___piped",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Stdio.null":
    [{"id": "IO___Process___Stdio___piped",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Stdio.inherit":
    [{"id": "IO___Process___Stdio___piped",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Stdio":
    [{"id": "IO___Process___Stdio___piped",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.SpawnArgs.toStdioConfig":
    [{"id": "IO___Process___SpawnArgs___mk",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.SpawnArgs.mk":
    [{"id": "IO___Process___SpawnArgs___mk",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.SpawnArgs.cwd":
    [{"id": "IO___Process___SpawnArgs___mk",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.SpawnArgs.cmd":
    [{"id": "IO___Process___SpawnArgs___mk",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.SpawnArgs.args":
    [{"id": "IO___Process___SpawnArgs___mk",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.SpawnArgs":
    [{"id": "IO___Process___SpawnArgs___mk",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Output.stdout":
    [{"id": "IO___Process___Output___mk",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Output.stderr":
    [{"id": "IO___Process___Output___mk",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Output.mk":
    [{"id": "IO___Process___Output___mk",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Output.exitCode":
    [{"id": "IO___Process___Output___mk",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Output":
    [{"id": "IO___Process___Output___mk",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Child.wait":
    [{"id": "IO___Process___Child___wait",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Child.tryWait":
    [{"id": "IO___Process___Child___tryWait",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Child.takeStdin":
    [{"id": "IO___Process___Child___takeStdin",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Child.stdout":
    [{"id": "IO___Process___Child___stdin",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Child.stdin":
    [{"id": "IO___Process___Child___stdin",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Child.stderr":
    [{"id": "IO___Process___Child___stdin",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Child.kill":
    [{"id": "IO___Process___Child___kill",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.Process.Child":
    [{"id": "IO___Process___Child___stdin",
      "data": null,
      "address": "/IO/Processes/"}],
    "IO.FileRight.user":
    [{"id": "IO___FileRight___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FileRight.other":
    [{"id": "IO___FileRight___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FileRight.mk":
    [{"id": "IO___FileRight___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FileRight.group":
    [{"id": "IO___FileRight___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FileRight.flags":
    [{"id": "IO___FileRight___flags",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FileRight":
    [{"id": "IO___FileRight___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.writeFile":
    [{"id": "IO___FS___writeFile",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.writeBinFile":
    [{"id": "IO___FS___writeBinFile",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.withTempFile":
    [{"id": "IO___FS___withTempFile",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.withTempDir":
    [{"id": "IO___FS___withTempDir",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.withIsolatedStreams":
    [{"id": "IO___FS___withIsolatedStreams",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.withFile":
    [{"id": "IO___FS___withFile",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.rename":
    [{"id": "IO___FS___rename",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.removeFile":
    [{"id": "IO___FS___removeFile",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.removeDirAll":
    [{"id": "IO___FS___removeDirAll",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.removeDir":
    [{"id": "IO___FS___removeDir",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.realPath":
    [{"id": "IO___FS___realPath",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.readFile":
    [{"id": "IO___FS___readFile",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.readBinFile":
    [{"id": "IO___FS___readBinFile",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.lines":
    [{"id": "IO___FS___lines",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.createTempFile":
    [{"id": "IO___FS___createTempFile",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.createTempDir":
    [{"id": "IO___FS___createTempDir",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.createDirAll":
    [{"id": "IO___FS___createDirAll",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.createDir":
    [{"id": "IO___FS___createDir",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Stream.write":
    [{"id": "IO___FS___Stream___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Stream.read":
    [{"id": "IO___FS___Stream___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Stream.putStrLn":
    [{"id": "IO___FS___Stream___putStrLn",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Stream.putStr":
    [{"id": "IO___FS___Stream___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Stream.ofHandle":
    [{"id": "IO___FS___Stream___ofHandle",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Stream.ofBuffer":
    [{"id": "IO___FS___Stream___ofBuffer",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Stream.mk":
    [{"id": "IO___FS___Stream___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Stream.isTty":
    [{"id": "IO___FS___Stream___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Stream.getLine":
    [{"id": "IO___FS___Stream___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Stream.flush":
    [{"id": "IO___FS___Stream___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Stream.Buffer.pos":
    [{"id": "IO___FS___Stream___Buffer___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Stream.Buffer.mk":
    [{"id": "IO___FS___Stream___Buffer___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Stream.Buffer.data":
    [{"id": "IO___FS___Stream___Buffer___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Stream.Buffer":
    [{"id": "IO___FS___Stream___Buffer___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Stream":
    [{"id": "IO___FS___Stream___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Mode.writeNew":
    [{"id": "IO___FS___Mode___read",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Mode.write":
    [{"id": "IO___FS___Mode___read",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Mode.readWrite":
    [{"id": "IO___FS___Mode___read",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Mode.read":
    [{"id": "IO___FS___Mode___read",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Mode.append":
    [{"id": "IO___FS___Mode___read",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Mode":
    [{"id": "IO___FS___Mode___read",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Metadata.type":
    [{"id": "IO___FS___Metadata___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Metadata.modified":
    [{"id": "IO___FS___Metadata___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Metadata.mk":
    [{"id": "IO___FS___Metadata___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Metadata.byteSize":
    [{"id": "IO___FS___Metadata___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Metadata.accessed":
    [{"id": "IO___FS___Metadata___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Metadata":
    [{"id": "IO___FS___Metadata___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle.write":
    [{"id": "IO___FS___Handle___write",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle.unlock":
    [{"id": "IO___FS___Handle___unlock",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle.tryLock":
    [{"id": "IO___FS___Handle___tryLock",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle.truncate":
    [{"id": "IO___FS___Handle___truncate",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle.rewind":
    [{"id": "IO___FS___Handle___rewind",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle.readToEnd":
    [{"id": "IO___FS___Handle___readToEnd",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle.readBinToEndInto":
    [{"id": "IO___FS___Handle___readBinToEndInto",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle.readBinToEnd":
    [{"id": "IO___FS___Handle___readBinToEnd",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle.read":
    [{"id": "IO___FS___Handle___read",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle.putStrLn":
    [{"id": "IO___FS___Handle___putStrLn",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle.putStr":
    [{"id": "IO___FS___Handle___putStr",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle.mk":
    [{"id": "IO___FS___Handle___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle.lock":
    [{"id": "IO___FS___Handle___lock",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle.isTty":
    [{"id": "IO___FS___Handle___isTty",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle.getLine":
    [{"id": "IO___FS___Handle___getLine",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle.flush":
    [{"id": "IO___FS___Handle___flush",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.Handle":
    [{"id": "IO___FS___Handle",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.DirEntry.root":
    [{"id": "IO___FS___DirEntry___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.DirEntry.path":
    [{"id": "IO___FS___DirEntry___path",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.DirEntry.mk":
    [{"id": "IO___FS___DirEntry___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.DirEntry.fileName":
    [{"id": "IO___FS___DirEntry___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.FS.DirEntry":
    [{"id": "IO___FS___DirEntry___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.Error.userError":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.unsupportedOperation":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.unsatisfiedConstraints":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.unexpectedEof":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.toString":
    [{"id": "IO___Error___toString",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.timeExpired":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.resourceVanished":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.resourceExhausted":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.resourceBusy":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.protocolError":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.permissionDenied":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.otherError":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.noSuchThing":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.noFileOrDirectory":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.invalidArgument":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.interrupted":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.inappropriateType":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.illegalOperation":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.hardwareFault":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error.alreadyExists":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.Error":
    [{"id": "IO___Error___alreadyExists",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "IO.AccessRight.write":
    [{"id": "IO___AccessRight___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.AccessRight.read":
    [{"id": "IO___AccessRight___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.AccessRight.mk":
    [{"id": "IO___AccessRight___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.AccessRight.flags":
    [{"id": "IO___AccessRight___flags",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.AccessRight.execution":
    [{"id": "IO___AccessRight___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO.AccessRight":
    [{"id": "IO___AccessRight___mk",
      "data": null,
      "address": "/IO/Files___-File-Handles___-and-Streams/"}],
    "IO": [{"id": "IO", "data": null, "address": "/IO/Logical-Model/"}],
    "HomogeneousPow.pow":
    [{"id": "HomogeneousPow___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HomogeneousPow.mk":
    [{"id": "HomogeneousPow___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HomogeneousPow":
    [{"id": "HomogeneousPow___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Hashable.mk":
    [{"id": "Hashable___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Hashable.hash":
    [{"id": "Hashable___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Hashable":
    [{"id": "Hashable___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HasEquiv.mk":
    [{"id": "HasEquiv___mk",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "HasEquiv.Equiv":
    [{"id": "HasEquiv___mk",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "HasEquiv":
    [{"id": "HasEquiv___mk",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "HXor.mk":
    [{"id": "HXor___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HXor.hXor":
    [{"id": "HXor___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HXor":
    [{"id": "HXor___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HSub.mk":
    [{"id": "HSub___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HSub.hSub":
    [{"id": "HSub___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HSub":
    [{"id": "HSub___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HShiftRight.mk":
    [{"id": "HShiftRight___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HShiftRight.hShiftRight":
    [{"id": "HShiftRight___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HShiftRight":
    [{"id": "HShiftRight___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HShiftLeft.mk":
    [{"id": "HShiftLeft___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HShiftLeft.hShiftLeft":
    [{"id": "HShiftLeft___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HShiftLeft":
    [{"id": "HShiftLeft___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HPow.mk":
    [{"id": "HPow___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HPow.hPow":
    [{"id": "HPow___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HPow":
    [{"id": "HPow___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HOr.mk":
    [{"id": "HOr___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HOr.hOr":
    [{"id": "HOr___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HOr":
    [{"id": "HOr___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HMul.mk":
    [{"id": "HMul___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HMul.hMul":
    [{"id": "HMul___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HMul":
    [{"id": "HMul___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HMod.mk":
    [{"id": "HMod___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HMod.hMod":
    [{"id": "HMod___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HMod":
    [{"id": "HMod___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HEq.subst":
    [{"id": "HEq___subst",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "HEq.rfl":
    [{"id": "HEq___rfl",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "HEq.refl":
    [{"id": "HEq___refl",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "HEq.ndrecOn":
    [{"id": "HEq___ndrecOn",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "HEq.ndrec":
    [{"id": "HEq___ndrec",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "HEq.elim":
    [{"id": "HEq___elim",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "HEq":
    [{"id": "HEq___refl",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "HDiv.mk":
    [{"id": "HDiv___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HDiv.hDiv":
    [{"id": "HDiv___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HDiv":
    [{"id": "HDiv___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HAppend.mk":
    [{"id": "HAppend___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HAppend.hAppend":
    [{"id": "HAppend___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HAppend":
    [{"id": "HAppend___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HAnd.mk":
    [{"id": "HAnd___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HAnd.hAnd":
    [{"id": "HAnd___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HAnd":
    [{"id": "HAnd___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HAdd.mk":
    [{"id": "HAdd___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HAdd.hAdd":
    [{"id": "HAdd___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "HAdd":
    [{"id": "HAdd___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "GetElem?.toGetElem":
    [{"id": "GetElem______mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "GetElem?.mk":
    [{"id": "GetElem______mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "GetElem?.getElem?":
    [{"id": "GetElem______mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "GetElem?":
    [{"id": "GetElem______mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "GetElem.mk":
    [{"id": "GetElem___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "GetElem.getElem":
    [{"id": "GetElem___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "GetElem":
    [{"id": "GetElem___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Functor.mk":
    [{"id": "Functor___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Functor.mapRev":
    [{"id": "Functor___mapRev",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/API-Reference/"}],
    "Functor.mapConst":
    [{"id": "Functor___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Functor.map":
    [{"id": "Functor___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Functor.discard":
    [{"id": "Functor___discard",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/API-Reference/"}],
    "Functor":
    [{"id": "Functor___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Function.uncurry":
    [{"id": "Function___uncurry",
      "data": null,
      "address": "/The-Type-System/Functions/"}],
    "Function.curry":
    [{"id": "Function___curry",
      "data": null,
      "address": "/The-Type-System/Functions/"}],
    "Function.const":
    [{"id": "Function___const",
      "data": null,
      "address": "/The-Type-System/Functions/"}],
    "Function.comp":
    [{"id": "Function___comp",
      "data": null,
      "address": "/The-Type-System/Functions/"}],
    "ForM.mk":
    [{"id": "ForM___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "ForM.forM":
    [{"id": "ForM___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "ForM.forIn":
    [{"id": "ForM___forIn",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "ForM":
    [{"id": "ForM___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "ForInStep.yield":
    [{"id": "ForInStep___done",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "ForInStep.value":
    [{"id": "ForInStep___value",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "ForInStep.done":
    [{"id": "ForInStep___done",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "ForInStep":
    [{"id": "ForInStep___done",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "ForIn.mk":
    [{"id": "ForIn___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "ForIn.forIn":
    [{"id": "ForIn___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "ForIn'.mk":
    [{"id": "ForIn______mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "ForIn'.forIn'":
    [{"id": "ForIn______mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "ForIn'":
    [{"id": "ForIn______mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "ForIn":
    [{"id": "ForIn___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Float32.toUSize":
    [{"id": "Float32___toUSize",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.toUInt8":
    [{"id": "Float32___toUInt8",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.toUInt64":
    [{"id": "Float32___toUInt64",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.toUInt32":
    [{"id": "Float32___toUInt32",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.toUInt16":
    [{"id": "Float32___toUInt16",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.toString":
    [{"id": "Float32___toString",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.toInt8":
    [{"id": "Float32___toInt8",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.toInt64":
    [{"id": "Float32___toInt64",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.toInt32":
    [{"id": "Float32___toInt32",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.toInt16":
    [{"id": "Float32___toInt16",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.toISize":
    [{"id": "Float32___toISize",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.toFloat":
    [{"id": "Float32___toFloat",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.toBits":
    [{"id": "Float32___toBits",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.tanh":
    [{"id": "Float32___tanh",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.tan":
    [{"id": "Float32___tan",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.sub":
    [{"id": "Float32___sub",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.sqrt":
    [{"id": "Float32___sqrt",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.sinh":
    [{"id": "Float32___sinh",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.sin":
    [{"id": "Float32___sin",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.scaleB":
    [{"id": "Float32___scaleB",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.round":
    [{"id": "Float32___round",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.pow":
    [{"id": "Float32___pow",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.ofScientific":
    [{"id": "Float32___ofScientific",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.ofNat":
    [{"id": "Float32___ofNat",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.ofInt":
    [{"id": "Float32___ofInt",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.ofBits":
    [{"id": "Float32___ofBits",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.ofBinaryScientific":
    [{"id": "Float32___ofBinaryScientific",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.neg":
    [{"id": "Float32___neg",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.mul":
    [{"id": "Float32___mul",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.lt":
    [{"id": "Float32___lt",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.log2":
    [{"id": "Float32___log2",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.log10":
    [{"id": "Float32___log10",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.log":
    [{"id": "Float32___log",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.le":
    [{"id": "Float32___le",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.isNaN":
    [{"id": "Float32___isNaN",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.isInf":
    [{"id": "Float32___isInf",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.isFinite":
    [{"id": "Float32___isFinite",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.frExp":
    [{"id": "Float32___frExp",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.floor":
    [{"id": "Float32___floor",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.exp2":
    [{"id": "Float32___exp2",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.exp":
    [{"id": "Float32___exp",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.div":
    [{"id": "Float32___div",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.decLt":
    [{"id": "Float32___decLt",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.decLe":
    [{"id": "Float32___decLe",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.cosh":
    [{"id": "Float32___cosh",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.cos":
    [{"id": "Float32___cos",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.ceil":
    [{"id": "Float32___ceil",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.cbrt":
    [{"id": "Float32___cbrt",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.beq":
    [{"id": "Float32___beq",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.atanh":
    [{"id": "Float32___atanh",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.atan2":
    [{"id": "Float32___atan2",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.atan":
    [{"id": "Float32___atan",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.asinh":
    [{"id": "Float32___asinh",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.asin":
    [{"id": "Float32___asin",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.add":
    [{"id": "Float32___add",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.acosh":
    [{"id": "Float32___acosh",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.acos":
    [{"id": "Float32___acos",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32.abs":
    [{"id": "Float32___abs",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float32":
    [{"id": "Float32",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.toUSize":
    [{"id": "Float___toUSize",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.toUInt8":
    [{"id": "Float___toUInt8",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.toUInt64":
    [{"id": "Float___toUInt64",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.toUInt32":
    [{"id": "Float___toUInt32",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.toUInt16":
    [{"id": "Float___toUInt16",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.toString":
    [{"id": "Float___toString",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.toInt8":
    [{"id": "Float___toInt8",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.toInt64":
    [{"id": "Float___toInt64",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.toInt32":
    [{"id": "Float___toInt32",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.toInt16":
    [{"id": "Float___toInt16",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.toISize":
    [{"id": "Float___toISize",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.toFloat32":
    [{"id": "Float___toFloat32",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.toBits":
    [{"id": "Float___toBits",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.tanh":
    [{"id": "Float___tanh",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.tan":
    [{"id": "Float___tan",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.sub":
    [{"id": "Float___sub",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.sqrt":
    [{"id": "Float___sqrt",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.sinh":
    [{"id": "Float___sinh",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.sin":
    [{"id": "Float___sin",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.scaleB":
    [{"id": "Float___scaleB",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.round":
    [{"id": "Float___round",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.pow":
    [{"id": "Float___pow",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.ofScientific":
    [{"id": "Float___ofScientific",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.ofNat":
    [{"id": "Float___ofNat",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.ofInt":
    [{"id": "Float___ofInt",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.ofBits":
    [{"id": "Float___ofBits",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.ofBinaryScientific":
    [{"id": "Float___ofBinaryScientific",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.neg":
    [{"id": "Float___neg",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.mul":
    [{"id": "Float___mul",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.lt":
    [{"id": "Float___lt",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.log2":
    [{"id": "Float___log2",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.log10":
    [{"id": "Float___log10",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.log":
    [{"id": "Float___log",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.le":
    [{"id": "Float___le",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.isNaN":
    [{"id": "Float___isNaN",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.isInf":
    [{"id": "Float___isInf",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.isFinite":
    [{"id": "Float___isFinite",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.frExp":
    [{"id": "Float___frExp",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.floor":
    [{"id": "Float___floor",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.exp2":
    [{"id": "Float___exp2",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.exp":
    [{"id": "Float___exp",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.div":
    [{"id": "Float___div",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.decLt":
    [{"id": "Float___decLt",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.decLe":
    [{"id": "Float___decLe",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.cosh":
    [{"id": "Float___cosh",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.cos":
    [{"id": "Float___cos",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.ceil":
    [{"id": "Float___ceil",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.cbrt":
    [{"id": "Float___cbrt",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.beq":
    [{"id": "Float___beq",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.atanh":
    [{"id": "Float___atanh",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.atan2":
    [{"id": "Float___atan2",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.atan":
    [{"id": "Float___atan",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.asinh":
    [{"id": "Float___asinh",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.asin":
    [{"id": "Float___asin",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.add":
    [{"id": "Float___add",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.acosh":
    [{"id": "Float___acosh",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.acos":
    [{"id": "Float___acos",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float.abs":
    [{"id": "Float___abs",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Float":
    [{"id": "Float-next",
      "data": null,
      "address": "/Basic-Types/Floating-Point-Numbers/"}],
    "Fin.xor":
    [{"id": "Fin___xor",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.val":
    [{"id": "Fin___mk",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.toNat":
    [{"id": "Fin___toNat",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.succRecOn":
    [{"id": "Fin___succRecOn",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.succRec":
    [{"id": "Fin___succRec",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.succ":
    [{"id": "Fin___succ",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.subNat":
    [{"id": "Fin___subNat",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.sub":
    [{"id": "Fin___sub",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.shiftRight":
    [{"id": "Fin___shiftRight",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.shiftLeft":
    [{"id": "Fin___shiftLeft",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.reverseInduction":
    [{"id": "Fin___reverseInduction",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.rev":
    [{"id": "Fin___rev",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.pred":
    [{"id": "Fin___pred",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.ofNat":
    [{"id": "Fin___ofNat",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.natAdd":
    [{"id": "Fin___natAdd",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.mul":
    [{"id": "Fin___mul",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.modn":
    [{"id": "Fin___modn",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.mod":
    [{"id": "Fin___mod",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.mk":
    [{"id": "Fin___mk",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.lor":
    [{"id": "Fin___lor",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.log2":
    [{"id": "Fin___log2",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.lastCases":
    [{"id": "Fin___lastCases",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.last":
    [{"id": "Fin___last",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.land":
    [{"id": "Fin___land",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.isLt":
    [{"id": "Fin___mk",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.inductionOn":
    [{"id": "Fin___inductionOn",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.induction":
    [{"id": "Fin___induction",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.hIterateFrom":
    [{"id": "Fin___hIterateFrom",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.hIterate":
    [{"id": "Fin___hIterate",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.foldrM":
    [{"id": "Fin___foldrM",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.foldr":
    [{"id": "Fin___foldr",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.foldlM":
    [{"id": "Fin___foldlM",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.foldl":
    [{"id": "Fin___foldl",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.elim0":
    [{"id": "Fin___elim0",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.div":
    [{"id": "Fin___div",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.castSucc":
    [{"id": "Fin___castSucc",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.castLT":
    [{"id": "Fin___castLT",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.castLE":
    [{"id": "Fin___castLE",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.castAdd":
    [{"id": "Fin___castAdd",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.cast":
    [{"id": "Fin___cast",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.cases":
    [{"id": "Fin___cases",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.addNat":
    [{"id": "Fin___addNat",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.addCases":
    [{"id": "Fin___addCases",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin.add":
    [{"id": "Fin___add",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "Fin":
    [{"id": "Fin___mk",
      "data": null,
      "address": "/Basic-Types/Finite-Natural-Numbers/"}],
    "False.elim":
    [{"id": "False___elim",
      "data": null,
      "address": "/Basic-Propositions/Truth/"}],
    "False":
    [{"id": "False", "data": null, "address": "/Basic-Propositions/Truth/"}],
    "Exists.intro":
    [{"id": "Exists___intro",
      "data": null,
      "address": "/Basic-Propositions/Quantifiers/"}],
    "Exists.choose":
    [{"id": "Exists___choose",
      "data": null,
      "address": "/Basic-Propositions/Quantifiers/"}],
    "Exists":
    [{"id": "Exists___intro",
      "data": null,
      "address": "/Basic-Propositions/Quantifiers/"}],
    "ExceptT.tryCatch":
    [{"id": "ExceptT___tryCatch",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ExceptT.run":
    [{"id": "ExceptT___run",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ExceptT.pure":
    [{"id": "ExceptT___pure",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ExceptT.mk":
    [{"id": "ExceptT___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ExceptT.map":
    [{"id": "ExceptT___map",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ExceptT.lift":
    [{"id": "ExceptT___lift",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ExceptT.bindCont":
    [{"id": "ExceptT___bindCont",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ExceptT.bind":
    [{"id": "ExceptT___bind",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ExceptT.adapt":
    [{"id": "ExceptT___adapt",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ExceptT":
    [{"id": "ExceptT",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ExceptCpsT.runK":
    [{"id": "ExceptCpsT___runK",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ExceptCpsT.runCatch":
    [{"id": "ExceptCpsT___runCatch",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ExceptCpsT.run":
    [{"id": "ExceptCpsT___run",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ExceptCpsT.lift":
    [{"id": "ExceptCpsT___lift",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "ExceptCpsT":
    [{"id": "ExceptCpsT",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Except.tryCatch":
    [{"id": "Except___tryCatch",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Except.toOption":
    [{"id": "Except___toOption",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Except.toBool":
    [{"id": "Except___toBool",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Except.pure":
    [{"id": "Except___pure",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Except.orElseLazy":
    [{"id": "Except___orElseLazy",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Except.ok":
    [{"id": "Except___error",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Except.mapError":
    [{"id": "Except___mapError",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Except.map":
    [{"id": "Except___map",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Except.isOk":
    [{"id": "Except___isOk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Except.error":
    [{"id": "Except___error",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Except.bind":
    [{"id": "Except___bind",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Except":
    [{"id": "Except___error",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Even.zero":
    [{"id": "Even___zero-next", "data": null, "address": "/Introduction/"}],
    "Even.plusTwo":
    [{"id": "Even___zero-next", "data": null, "address": "/Introduction/"}],
    "Even":
    [{"id": "Even___zero-next", "data": null, "address": "/Introduction/"}],
    "Equivalence.trans":
    [{"id": "Equivalence___mk",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Equivalence.symm":
    [{"id": "Equivalence___mk",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Equivalence.refl":
    [{"id": "Equivalence___mk",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Equivalence.mk":
    [{"id": "Equivalence___mk",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "Equivalence":
    [{"id": "Equivalence___mk",
      "data": null,
      "address": "/The-Type-System/Quotients/"}],
    "EquivBEq.toPartialEquivBEq":
    [{"id": "EquivBEq___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "EquivBEq.mk":
    [{"id": "EquivBEq___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "EquivBEq":
    [{"id": "EquivBEq___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Eq.trans":
    [{"id": "Eq___trans",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "Eq.symm":
    [{"id": "Eq___symm",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "Eq.subst":
    [{"id": "Eq___subst",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "Eq.refl":
    [{"id": "Eq___refl",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "Eq.mpr":
    [{"id": "Eq___mpr",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "Eq.mp":
    [{"id": "Eq___mp",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "Eq":
    [{"id": "Eq___refl",
      "data": null,
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "Empty.elim":
    [{"id": "Empty___elim",
      "data": null,
      "address": "/Basic-Types/The-Empty-Type/"}],
    "Empty":
    [{"id": "Empty",
      "data": null,
      "address": "/Basic-Types/The-Empty-Type/"}],
    "EStateM.tryCatch":
    [{"id": "EStateM___tryCatch",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.throw":
    [{"id": "EStateM___throw",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.set":
    [{"id": "EStateM___set",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.seqRight":
    [{"id": "EStateM___seqRight",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.run'":
    [{"id": "EStateM___run___",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.run":
    [{"id": "EStateM___run",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.pure":
    [{"id": "EStateM___pure",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.orElse'":
    [{"id": "EStateM___orElse___",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.orElse":
    [{"id": "EStateM___orElse",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.nonBacktrackable":
    [{"id": "EStateM___nonBacktrackable",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.modifyGet":
    [{"id": "EStateM___modifyGet",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.map":
    [{"id": "EStateM___map",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.get":
    [{"id": "EStateM___get",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.fromStateM":
    [{"id": "EStateM___fromStateM",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.bind":
    [{"id": "EStateM___bind",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.adaptExcept":
    [{"id": "EStateM___adaptExcept",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.Result.ok":
    [{"id": "EStateM___Result___ok",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.Result.error":
    [{"id": "EStateM___Result___ok",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.Result":
    [{"id": "EStateM___Result___ok",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.Backtrackable.save":
    [{"id": "EStateM___Backtrackable___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.Backtrackable.restore":
    [{"id": "EStateM___Backtrackable___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.Backtrackable.mk":
    [{"id": "EStateM___Backtrackable___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM.Backtrackable":
    [{"id": "EStateM___Backtrackable___mk",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EStateM":
    [{"id": "EStateM",
      "data": null,
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "EST":
    [{"id": "EST", "data": null, "address": "/IO/Mutable-References/"}],
    "EIO.toIO'":
    [{"id": "EIO___toIO___", "data": null, "address": "/IO/Logical-Model/"}],
    "EIO.toIO":
    [{"id": "EIO___toIO", "data": null, "address": "/IO/Logical-Model/"}],
    "EIO.toBaseIO":
    [{"id": "EIO___toBaseIO", "data": null, "address": "/IO/Logical-Model/"}],
    "EIO.mapTasks":
    [{"id": "EIO___mapTasks",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "EIO.mapTask":
    [{"id": "EIO___mapTask",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "EIO.chainTask":
    [{"id": "EIO___chainTask",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "EIO.catchExceptions":
    [{"id": "EIO___catchExceptions",
      "data": null,
      "address": "/IO/Logical-Model/"}],
    "EIO.bindTask":
    [{"id": "EIO___bindTask",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "EIO.asTask":
    [{"id": "EIO___asTask",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "EIO": [{"id": "EIO", "data": null, "address": "/IO/Logical-Model/"}],
    "Dvd.mk":
    [{"id": "Dvd___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Dvd.dvd":
    [{"id": "Dvd___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Dvd":
    [{"id": "Dvd___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Div.mk":
    [{"id": "Div___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Div.div":
    [{"id": "Div___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Div":
    [{"id": "Div___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "DecidableRel":
    [{"id": "DecidableRel",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "DecidablePred":
    [{"id": "DecidablePred",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "DecidableLT":
    [{"id": "DecidableLT",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "DecidableLE":
    [{"id": "DecidableLE",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "DecidableEq":
    [{"id": "DecidableEq",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Decidable.isTrue":
    [{"id": "Decidable___isFalse",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Decidable.isFalse":
    [{"id": "Decidable___isFalse",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Decidable.decide":
    [{"id": "Decidable___decide",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Decidable.byCases":
    [{"id": "Decidable___byCases",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Decidable":
    [{"id": "Decidable___isFalse",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "CoeTail.mk":
    [{"id": "CoeTail___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "CoeTail.coe":
    [{"id": "CoeTail___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "CoeTail":
    [{"id": "CoeTail___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "CoeTC.mk":
    [{"id": "CoeTC___mk",
      "data": null,
      "address": "/Coercions/Implementation-Details/"}],
    "CoeTC.coe":
    [{"id": "CoeTC___mk",
      "data": null,
      "address": "/Coercions/Implementation-Details/"}],
    "CoeTC":
    [{"id": "CoeTC___mk",
      "data": null,
      "address": "/Coercions/Implementation-Details/"}],
    "CoeT.mk":
    [{"id": "CoeT___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "CoeT.coe":
    [{"id": "CoeT___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "CoeT":
    [{"id": "CoeT___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "CoeSort.mk":
    [{"id": "CoeSort___mk",
      "data": null,
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "CoeSort.coe":
    [{"id": "CoeSort___mk",
      "data": null,
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "CoeSort":
    [{"id": "CoeSort___mk",
      "data": null,
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "CoeOut.mk":
    [{"id": "CoeOut___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "CoeOut.coe":
    [{"id": "CoeOut___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "CoeOut":
    [{"id": "CoeOut___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "CoeOTC.mk":
    [{"id": "CoeOTC___mk",
      "data": null,
      "address": "/Coercions/Implementation-Details/"}],
    "CoeOTC.coe":
    [{"id": "CoeOTC___mk",
      "data": null,
      "address": "/Coercions/Implementation-Details/"}],
    "CoeOTC":
    [{"id": "CoeOTC___mk",
      "data": null,
      "address": "/Coercions/Implementation-Details/"}],
    "CoeHead.mk":
    [{"id": "CoeHead___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "CoeHead.coe":
    [{"id": "CoeHead___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "CoeHead":
    [{"id": "CoeHead___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "CoeHTCT.mk":
    [{"id": "CoeHTCT___mk",
      "data": null,
      "address": "/Coercions/Implementation-Details/"}],
    "CoeHTCT.coe":
    [{"id": "CoeHTCT___mk",
      "data": null,
      "address": "/Coercions/Implementation-Details/"}],
    "CoeHTCT":
    [{"id": "CoeHTCT___mk",
      "data": null,
      "address": "/Coercions/Implementation-Details/"}],
    "CoeHTC.mk":
    [{"id": "CoeHTC___mk",
      "data": null,
      "address": "/Coercions/Implementation-Details/"}],
    "CoeHTC.coe":
    [{"id": "CoeHTC___mk",
      "data": null,
      "address": "/Coercions/Implementation-Details/"}],
    "CoeHTC":
    [{"id": "CoeHTC___mk",
      "data": null,
      "address": "/Coercions/Implementation-Details/"}],
    "CoeFun.mk":
    [{"id": "CoeFun___mk",
      "data": null,
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "CoeFun.coe":
    [{"id": "CoeFun___mk",
      "data": null,
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "CoeFun":
    [{"id": "CoeFun___mk",
      "data": null,
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "CoeDep.mk":
    [{"id": "CoeDep___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "CoeDep.coe":
    [{"id": "CoeDep___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "CoeDep":
    [{"id": "CoeDep___mk",
      "data": null,
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Coe.mk": [{"id": "Coe___mk", "data": null, "address": "/Coercions/"}],
    "Coe.coe": [{"id": "Coe___mk", "data": null, "address": "/Coercions/"}],
    "Coe": [{"id": "Coe___mk", "data": null, "address": "/Coercions/"}],
    "Char.valid":
    [{"id": "Char___mk",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.val":
    [{"id": "Char___mk",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.utf8Size":
    [{"id": "Char___utf8Size",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.utf16Size":
    [{"id": "Char___utf16Size",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.toUpper":
    [{"id": "Char___toUpper",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.toUInt8":
    [{"id": "Char___toUInt8",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.toString":
    [{"id": "Char___toString",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.toNat":
    [{"id": "Char___toNat",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.toLower":
    [{"id": "Char___toLower",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.quote":
    [{"id": "Char___quote",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.ofUInt8":
    [{"id": "Char___ofUInt8",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.ofNat":
    [{"id": "Char___ofNat",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.mk":
    [{"id": "Char___mk",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.lt":
    [{"id": "Char___lt",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.le":
    [{"id": "Char___le",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.isWhitespace":
    [{"id": "Char___isWhitespace",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.isValidCharNat":
    [{"id": "Char___isValidCharNat",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.isUpper":
    [{"id": "Char___isUpper",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.isLower":
    [{"id": "Char___isLower",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.isDigit":
    [{"id": "Char___isDigit",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.isAlphanum":
    [{"id": "Char___isAlphanum",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char.isAlpha":
    [{"id": "Char___isAlpha",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Char":
    [{"id": "Char___mk",
      "data": null,
      "address": "/Basic-Types/Characters/"}],
    "Bool.xor":
    [{"id": "Bool___xor", "data": null, "address": "/Basic-Types/Booleans/"}],
    "Bool.true":
    [{"id": "Bool___false",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "Bool.toUSize":
    [{"id": "Bool___toUSize",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "Bool.toUInt8":
    [{"id": "Bool___toUInt8",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "Bool.toUInt64":
    [{"id": "Bool___toUInt64",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "Bool.toUInt32":
    [{"id": "Bool___toUInt32",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "Bool.toUInt16":
    [{"id": "Bool___toUInt16",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "Bool.toNat":
    [{"id": "Bool___toNat",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "Bool.toInt8":
    [{"id": "Bool___toInt8",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "Bool.toInt64":
    [{"id": "Bool___toInt64",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "Bool.toInt32":
    [{"id": "Bool___toInt32",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "Bool.toInt16":
    [{"id": "Bool___toInt16",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "Bool.toInt":
    [{"id": "Bool___toInt",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "Bool.toISize":
    [{"id": "Bool___toISize",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "Bool.or":
    [{"id": "Bool___or", "data": null, "address": "/Basic-Types/Booleans/"}],
    "Bool.not":
    [{"id": "Bool___not", "data": null, "address": "/Basic-Types/Booleans/"}],
    "Bool.false":
    [{"id": "Bool___false",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "Bool.decEq":
    [{"id": "Bool___decEq",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "Bool.dcond":
    [{"id": "Bool___dcond",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "Bool.and":
    [{"id": "Bool___and", "data": null, "address": "/Basic-Types/Booleans/"}],
    "Bool":
    [{"id": "Bool___false",
      "data": null,
      "address": "/Basic-Types/Booleans/"}],
    "BitVec.zeroExtend":
    [{"id": "BitVec___zeroExtend",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.zero":
    [{"id": "BitVec___zero",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.xor":
    [{"id": "BitVec___xor",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.usubOverflow":
    [{"id": "BitVec___usubOverflow",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.ushiftRightRec":
    [{"id": "BitVec___ushiftRightRec",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.ushiftRight":
    [{"id": "BitVec___ushiftRight",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.umod":
    [{"id": "BitVec___umod",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.ult":
    [{"id": "BitVec___ult",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.ule":
    [{"id": "BitVec___ule",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.udiv":
    [{"id": "BitVec___udiv",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.uaddOverflow":
    [{"id": "BitVec___uaddOverflow",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.twoPow":
    [{"id": "BitVec___twoPow",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.truncate":
    [{"id": "BitVec___truncate",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.toNat":
    [{"id": "BitVec___toNat",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.toInt":
    [{"id": "BitVec___toInt",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.toHex":
    [{"id": "BitVec___toHex",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.toFin":
    [{"id": "BitVec___ofFin",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.sub":
    [{"id": "BitVec___sub",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.ssubOverflow":
    [{"id": "BitVec___ssubOverflow",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.sshiftRightRec":
    [{"id": "BitVec___sshiftRightRec",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.sshiftRight'":
    [{"id": "BitVec___sshiftRight___",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.sshiftRight":
    [{"id": "BitVec___sshiftRight",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.srem":
    [{"id": "BitVec___srem",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.smtUDiv":
    [{"id": "BitVec___smtUDiv",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.smtSDiv":
    [{"id": "BitVec___smtSDiv",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.smod":
    [{"id": "BitVec___smod",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.slt":
    [{"id": "BitVec___slt",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.sle":
    [{"id": "BitVec___sle",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.signExtend":
    [{"id": "BitVec___signExtend",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.shiftLeftZeroExtend":
    [{"id": "BitVec___shiftLeftZeroExtend",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.shiftLeftRec":
    [{"id": "BitVec___shiftLeftRec",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.shiftLeft":
    [{"id": "BitVec___shiftLeft",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.shiftConcat":
    [{"id": "BitVec___shiftConcat",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.setWidth'":
    [{"id": "BitVec___setWidth___",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.setWidth":
    [{"id": "BitVec___setWidth",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.sdiv":
    [{"id": "BitVec___sdiv",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.saddOverflow":
    [{"id": "BitVec___saddOverflow",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.rotateRight":
    [{"id": "BitVec___rotateRight",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.rotateLeft":
    [{"id": "BitVec___rotateLeft",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.reverse":
    [{"id": "BitVec___reverse",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.replicate":
    [{"id": "BitVec___replicate",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.or":
    [{"id": "BitVec___or",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.ofNatLT":
    [{"id": "BitVec___ofNatLT",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.ofNat":
    [{"id": "BitVec___ofNat",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.ofInt":
    [{"id": "BitVec___ofInt",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.ofFin":
    [{"id": "BitVec___ofFin",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.ofBoolListLE":
    [{"id": "BitVec___ofBoolListLE",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.ofBoolListBE":
    [{"id": "BitVec___ofBoolListBE",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.ofBool":
    [{"id": "BitVec___ofBool",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.not":
    [{"id": "BitVec___not",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.nil":
    [{"id": "BitVec___nil",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.neg":
    [{"id": "BitVec___neg",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.mulRec":
    [{"id": "BitVec___mulRec",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.mul":
    [{"id": "BitVec___mul",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.msb":
    [{"id": "BitVec___msb",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.iunfoldr_replace":
    [{"id": "BitVec___iunfoldr_replace",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.iunfoldr":
    [{"id": "BitVec___iunfoldr",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.intMin":
    [{"id": "BitVec___intMin",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.intMax":
    [{"id": "BitVec___intMax",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.hash":
    [{"id": "BitVec___hash",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.getMsbD":
    [{"id": "BitVec___getMsbD",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.getMsb?":
    [{"id": "BitVec___getMsb___",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.getMsb":
    [{"id": "BitVec___getMsb",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.getLsbD":
    [{"id": "BitVec___getLsbD",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.getLsb?":
    [{"id": "BitVec___getLsb___",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.getLsb":
    [{"id": "BitVec___getLsb",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.fill":
    [{"id": "BitVec___fill",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.extractLsb'":
    [{"id": "BitVec___extractLsb___",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.extractLsb":
    [{"id": "BitVec___extractLsb",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.divSubtractShift":
    [{"id": "BitVec___divSubtractShift",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.divRec":
    [{"id": "BitVec___divRec",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.decEq":
    [{"id": "BitVec___decEq",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.cons":
    [{"id": "BitVec___cons",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.concat":
    [{"id": "BitVec___concat",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.cast":
    [{"id": "BitVec___cast",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.carry":
    [{"id": "BitVec___carry",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.append":
    [{"id": "BitVec___append",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.and":
    [{"id": "BitVec___and",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.allOnes":
    [{"id": "BitVec___allOnes",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.add":
    [{"id": "BitVec___add",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.adcb":
    [{"id": "BitVec___adcb",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.adc":
    [{"id": "BitVec___adc",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.abs":
    [{"id": "BitVec___abs",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec":
    [{"id": "BitVec___ofFin",
      "data": null,
      "address": "/Basic-Types/Bitvectors/"}],
    "Bind.mk":
    [{"id": "Bind___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Bind.kleisliRight":
    [{"id": "Bind___kleisliRight",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/API-Reference/"}],
    "Bind.kleisliLeft":
    [{"id": "Bind___kleisliLeft",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/API-Reference/"}],
    "Bind.bindLeft":
    [{"id": "Bind___bindLeft",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/API-Reference/"}],
    "Bind.bind":
    [{"id": "Bind___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Bind":
    [{"id": "Bind___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "BaseIO.toIO":
    [{"id": "BaseIO___toIO", "data": null, "address": "/IO/Logical-Model/"}],
    "BaseIO.toEIO":
    [{"id": "BaseIO___toEIO", "data": null, "address": "/IO/Logical-Model/"}],
    "BaseIO.mapTasks":
    [{"id": "BaseIO___mapTasks",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "BaseIO.mapTask":
    [{"id": "BaseIO___mapTask",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "BaseIO.chainTask":
    [{"id": "BaseIO___chainTask",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "BaseIO.bindTask":
    [{"id": "BaseIO___bindTask",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "BaseIO.asTask":
    [{"id": "BaseIO___asTask",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "BaseIO":
    [{"id": "BaseIO", "data": null, "address": "/IO/Logical-Model/"}],
    "BEq.mk":
    [{"id": "BEq___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "BEq.beq":
    [{"id": "BEq___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "BEq":
    [{"id": "BEq___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Array.zipWithAll":
    [{"id": "Array___zipWithAll",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.zipWith":
    [{"id": "Array___zipWith",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.zipIdx":
    [{"id": "Array___zipIdx",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.zip":
    [{"id": "Array___zip", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.usize":
    [{"id": "Array___usize",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.uset":
    [{"id": "Array___uset", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.unzip":
    [{"id": "Array___unzip",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.unattach":
    [{"id": "Array___unattach",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.uget":
    [{"id": "Array___uget", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.toVector":
    [{"id": "Array___toVector",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.toSubarray":
    [{"id": "Array___toSubarray",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.toListRev":
    [{"id": "Array___toListRev",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.toListAppend":
    [{"id": "Array___toListAppend",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.toList":
    [{"id": "Array___toList",
      "data": null,
      "address": "/Basic-Types/Arrays/"},
     {"id": "Array___mk", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.takeWhile":
    [{"id": "Array___takeWhile",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.take":
    [{"id": "Array___take", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.swapIfInBounds":
    [{"id": "Array___swapIfInBounds",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.swapAt!":
    [{"id": "Array___swapAt___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.swapAt":
    [{"id": "Array___swapAt",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.swap":
    [{"id": "Array___swap", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.sum":
    [{"id": "Array___sum", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.size":
    [{"id": "Array___size", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.singleton":
    [{"id": "Array___singleton",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.shrink":
    [{"id": "Array___shrink",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.setIfInBounds":
    [{"id": "Array___setIfInBounds",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.set!":
    [{"id": "Array___set___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.set":
    [{"id": "Array___set", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.rightpad":
    [{"id": "Array___rightpad",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.reverse":
    [{"id": "Array___reverse",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.replicate":
    [{"id": "Array___replicate",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.replace":
    [{"id": "Array___replace",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.range'":
    [{"id": "Array___range___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.range":
    [{"id": "Array___range",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.qsortOrd":
    [{"id": "Array___qsortOrd",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.qsort":
    [{"id": "Array___qsort",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.push":
    [{"id": "Array___push", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.popWhile":
    [{"id": "Array___popWhile",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.pop":
    [{"id": "Array___pop", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.pmap":
    [{"id": "Array___pmap", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.partition":
    [{"id": "Array___partition",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.ofSubarray":
    [{"id": "Array___ofSubarray",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.ofFn":
    [{"id": "Array___ofFn", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.modifyOp":
    [{"id": "Array___modifyOp",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.modifyM":
    [{"id": "Array___modifyM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.modify":
    [{"id": "Array___modify",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.mk":
    [{"id": "Array___mk", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.mapMonoM":
    [{"id": "Array___mapMonoM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.mapMono":
    [{"id": "Array___mapMono",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.mapM'":
    [{"id": "Array___mapM___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.mapM":
    [{"id": "Array___mapM", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.mapIdxM":
    [{"id": "Array___mapIdxM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.mapIdx":
    [{"id": "Array___mapIdx",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.mapFinIdxM":
    [{"id": "Array___mapFinIdxM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.mapFinIdx":
    [{"id": "Array___mapFinIdx",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.map":
    [{"id": "Array___map", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.lex":
    [{"id": "Array___lex", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.leftpad":
    [{"id": "Array___leftpad",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.isPrefixOf":
    [{"id": "Array___isPrefixOf",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.isEqv":
    [{"id": "Array___isEqv",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.isEmpty":
    [{"id": "Array___isEmpty",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.insertionSort":
    [{"id": "Array___insertionSort",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.insertIdxIfInBounds":
    [{"id": "Array___insertIdxIfInBounds",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.insertIdx!":
    [{"id": "Array___insertIdx___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.insertIdx":
    [{"id": "Array___insertIdx",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.idxOf?":
    [{"id": "Array___idxOf___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.idxOf":
    [{"id": "Array___idxOf",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.groupByKey":
    [{"id": "Array___groupByKey",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.getMax?":
    [{"id": "Array___getMax___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.getEvenElems":
    [{"id": "Array___getEvenElems",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.getD":
    [{"id": "Array___getD", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.forRevM":
    [{"id": "Array___forRevM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.forM":
    [{"id": "Array___forM", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.foldrM":
    [{"id": "Array___foldrM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.foldr":
    [{"id": "Array___foldr",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.foldlM":
    [{"id": "Array___foldlM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.foldl":
    [{"id": "Array___foldl",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.flatten":
    [{"id": "Array___flatten",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.flatMapM":
    [{"id": "Array___flatMapM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.flatMap":
    [{"id": "Array___flatMap",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.firstM":
    [{"id": "Array___firstM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.findSomeRevM?":
    [{"id": "Array___findSomeRevM___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.findSomeRev?":
    [{"id": "Array___findSomeRev___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.findSomeM?":
    [{"id": "Array___findSomeM___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.findSome?":
    [{"id": "Array___findSome___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.findSome!":
    [{"id": "Array___findSome___-next",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.findRevM?":
    [{"id": "Array___findRevM___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.findRev?":
    [{"id": "Array___findRev___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.findM?":
    [{"id": "Array___findM___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.findIdxM?":
    [{"id": "Array___findIdxM___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.findIdx?":
    [{"id": "Array___findIdx___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.findIdx":
    [{"id": "Array___findIdx",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.findFinIdx?":
    [{"id": "Array___findFinIdx___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.find?":
    [{"id": "Array___find___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.finRange":
    [{"id": "Array___finRange",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.finIdxOf?":
    [{"id": "Array___finIdxOf___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.filterSepElemsM":
    [{"id": "Array___filterSepElemsM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.filterSepElems":
    [{"id": "Array___filterSepElems",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.filterRevM":
    [{"id": "Array___filterRevM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.filterMapM":
    [{"id": "Array___filterMapM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.filterMap":
    [{"id": "Array___filterMap",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.filterM":
    [{"id": "Array___filterM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.filter":
    [{"id": "Array___filter",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.extract":
    [{"id": "Array___extract",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.eraseReps":
    [{"id": "Array___eraseReps",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.eraseP":
    [{"id": "Array___eraseP",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.eraseIdxIfInBounds":
    [{"id": "Array___eraseIdxIfInBounds",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.eraseIdx!":
    [{"id": "Array___eraseIdx___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.eraseIdx":
    [{"id": "Array___eraseIdx",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.erase":
    [{"id": "Array___erase",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.emptyWithCapacity":
    [{"id": "Array___emptyWithCapacity",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.empty":
    [{"id": "Array___empty",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.elem":
    [{"id": "Array___elem", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.drop":
    [{"id": "Array___drop", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.countP":
    [{"id": "Array___countP",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.count":
    [{"id": "Array___count",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.contains":
    [{"id": "Array___contains",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.binSearchContains":
    [{"id": "Array___binSearchContains",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.binSearch":
    [{"id": "Array___binSearch",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.binInsertM":
    [{"id": "Array___binInsertM",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.binInsert":
    [{"id": "Array___binInsert",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.back?":
    [{"id": "Array___back___",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.back!":
    [{"id": "Array___back___-next",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.back":
    [{"id": "Array___back", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.attachWith":
    [{"id": "Array___attachWith",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.attach":
    [{"id": "Array___attach",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.appendList":
    [{"id": "Array___appendList",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.append":
    [{"id": "Array___append",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.anyM":
    [{"id": "Array___anyM", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.any":
    [{"id": "Array___any", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.allM":
    [{"id": "Array___allM", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array.allDiff":
    [{"id": "Array___allDiff",
      "data": null,
      "address": "/Basic-Types/Arrays/"}],
    "Array.all":
    [{"id": "Array___all", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Array":
    [{"id": "Array___mk", "data": null, "address": "/Basic-Types/Arrays/"}],
    "Applicative.toPure":
    [{"id": "Applicative___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Applicative.toFunctor":
    [{"id": "Applicative___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Applicative.mk":
    [{"id": "Applicative___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Applicative":
    [{"id": "Applicative___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Append.mk":
    [{"id": "Append___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Append.append":
    [{"id": "Append___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Append":
    [{"id": "Append___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "And.right":
    [{"id": "And___intro",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "And.left":
    [{"id": "And___intro",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "And.intro":
    [{"id": "And___intro",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "And.elim":
    [{"id": "And___elim",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "And":
    [{"id": "And___intro",
      "data": null,
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "Alternative.toApplicative":
    [{"id": "Alternative___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Alternative.mk":
    [{"id": "Alternative___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Alternative":
    [{"id": "Alternative___mk",
      "data": null,
      "address": "/Functors___-Monads-and--do--Notation/"}],
    "Add.mk":
    [{"id": "Add___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Add.add":
    [{"id": "Add___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Add":
    [{"id": "Add___mk",
      "data": null,
      "address": "/Type-Classes/Basic-Classes/"}],
    "Acc.intro":
    [{"id": "Acc___intro",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}],
    "Acc":
    [{"id": "Acc___intro",
      "data": null,
      "address": "/Definitions/Recursive-Definitions/"}]}},
  "Manual.parserAlias":
  {"title": "Parser Alias Documentation",
   "description": "Parser Alias Documentation",
   "contents":
   {"withoutPosition":
    [{"id": "withoutPosition",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "withPositionAfterLinebreak":
    [{"id": "withPositionAfterLinebreak",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "withPosition":
    [{"id": "withPosition",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "lineEq":
    [{"id": "lineEq",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "colGt":
    [{"id": "colGt",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "colGe":
    [{"id": "colGe",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "colEq":
    [{"id": "colEq",
      "data": null,
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}]}},
  "Manual.lakeTomlTable":
  {"title": "Manual.lakeTomlTable",
   "description": "Manual.lakeTomlTable",
   "contents":
   {"Lake.PackageConfig":
    [{"id": "Lake___PackageConfig",
      "data":
      {"type": "Lake.PackageConfig",
       "description": "Package Configuration",
       "arrayKey": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig":
    [{"id": "Lake___LeanLibConfig",
      "data":
      {"type": "Lake.LeanLibConfig",
       "description": "Library Targets",
       "arrayKey": "lean_lib"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig":
    [{"id": "Lake___LeanExeConfig",
      "data":
      {"type": "Lake.LeanExeConfig",
       "description": "Executable Targets",
       "arrayKey": "lean_exe"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.Dependency":
    [{"id": "Lake___Dependency",
      "data":
      {"type": "Lake.Dependency",
       "description": "Requiring Packages",
       "arrayKey": "require"},
      "address": "/Build-Tools-and-Distribution/Lake/"}]}},
  "Manual.lakeTomlField":
  {"title": "Manual.lakeTomlField",
   "description": "Manual.lakeTomlField",
   "contents":
   {"Lake.PackageConfig weakLinkArgs":
    [{"id": "Lake___PackageConfig-weakLinkArgs",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "weakLinkArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig weakLeancArgs":
    [{"id": "Lake___PackageConfig-weakLeancArgs",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "weakLeancArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig weakLeanArgs":
    [{"id": "Lake___PackageConfig-weakLeanArgs",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "weakLeanArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig versionTags":
    [{"id": "Lake___PackageConfig-versionTags",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "versionTags"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig version":
    [{"id": "Lake___PackageConfig-version",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "version"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig testDriverArgs":
    [{"id": "Lake___PackageConfig-testDriverArgs",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "testDriverArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig testDriver":
    [{"id": "Lake___PackageConfig-testDriver",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "testDriver"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig srcDir":
    [{"id": "Lake___PackageConfig-srcDir",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "srcDir"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig reservoir":
    [{"id": "Lake___PackageConfig-reservoir",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "reservoir"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig releaseRepo":
    [{"id": "Lake___PackageConfig-releaseRepo",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "releaseRepo"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig readmeFile":
    [{"id": "Lake___PackageConfig-readmeFile",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "readmeFile"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig preferReleaseBuild":
    [{"id": "Lake___PackageConfig-preferReleaseBuild",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "preferReleaseBuild"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig precompileModules":
    [{"id": "Lake___PackageConfig-precompileModules",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "precompileModules"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig platformIndependent":
    [{"id": "Lake___PackageConfig-platformIndependent",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "platformIndependent"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig packagesDir":
    [{"id": "Lake___PackageConfig-packagesDir",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "packagesDir"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig nativeLibDir":
    [{"id": "Lake___PackageConfig-nativeLibDir",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "nativeLibDir"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig name":
    [{"id": "Lake___PackageConfig-name",
      "data":
      {"tableArrayKey": null, "table": "Lake.PackageConfig", "field": "name"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig moreServerOptions":
    [{"id": "Lake___PackageConfig-moreServerOptions",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "moreServerOptions"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig moreLinkObjs":
    [{"id": "Lake___PackageConfig-moreLinkObjs",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "moreLinkObjs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig moreLinkLibs":
    [{"id": "Lake___PackageConfig-moreLinkLibs",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "moreLinkLibs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig moreLinkArgs":
    [{"id": "Lake___PackageConfig-moreLinkArgs",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "moreLinkArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig moreLeancArgs":
    [{"id": "Lake___PackageConfig-moreLeancArgs",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "moreLeancArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig moreLeanArgs":
    [{"id": "Lake___PackageConfig-moreLeanArgs",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "moreLeanArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig moreGlobalServerArgs":
    [{"id": "Lake___PackageConfig-moreGlobalServerArgs",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "moreGlobalServerArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig lintDriverArgs":
    [{"id": "Lake___PackageConfig-lintDriverArgs",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "lintDriverArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig lintDriver":
    [{"id": "Lake___PackageConfig-lintDriver",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "lintDriver"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig licenseFiles":
    [{"id": "Lake___PackageConfig-licenseFiles",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "licenseFiles"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig license":
    [{"id": "Lake___PackageConfig-license",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "license"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig libPrefixOnWindows":
    [{"id": "Lake___PackageConfig-libPrefixOnWindows",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "libPrefixOnWindows"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig leanOptions":
    [{"id": "Lake___PackageConfig-leanOptions",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "leanOptions"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig leanLibDir":
    [{"id": "Lake___PackageConfig-leanLibDir",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "leanLibDir"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig keywords":
    [{"id": "Lake___PackageConfig-keywords",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "keywords"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig irDir":
    [{"id": "Lake___PackageConfig-irDir",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "irDir"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig homepage":
    [{"id": "Lake___PackageConfig-homepage",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "homepage"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig extraDepTargets":
    [{"id": "Lake___PackageConfig-extraDepTargets",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "extraDepTargets"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig enableArtifactCache?":
    [{"id": "Lake___PackageConfig-enableArtifactCache___",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "enableArtifactCache?"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig description":
    [{"id": "Lake___PackageConfig-description",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "description"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig defaultTargets":
    [{"id": "Lake___PackageConfig-defaultTargets",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "defaultTargets"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig buildType":
    [{"id": "Lake___PackageConfig-buildType",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "buildType"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig buildDir":
    [{"id": "Lake___PackageConfig-buildDir",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "buildDir"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig buildArchive":
    [{"id": "Lake___PackageConfig-buildArchive",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "buildArchive"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig bootstrap":
    [{"id": "Lake___PackageConfig-bootstrap",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "bootstrap"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.PackageConfig binDir":
    [{"id": "Lake___PackageConfig-binDir",
      "data":
      {"tableArrayKey": null,
       "table": "Lake.PackageConfig",
       "field": "binDir"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig weakLinkArgs":
    [{"id": "Lake___LeanLibConfig-weakLinkArgs",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "weakLinkArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig weakLeancArgs":
    [{"id": "Lake___LeanLibConfig-weakLeancArgs",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "weakLeancArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig weakLeanArgs":
    [{"id": "Lake___LeanLibConfig-weakLeanArgs",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "weakLeanArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig srcDir":
    [{"id": "Lake___LeanLibConfig-srcDir",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "srcDir"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig roots":
    [{"id": "Lake___LeanLibConfig-roots",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "roots"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig precompileModules":
    [{"id": "Lake___LeanLibConfig-precompileModules",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "precompileModules"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig plugins":
    [{"id": "Lake___LeanLibConfig-plugins",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "plugins"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig platformIndependent":
    [{"id": "Lake___LeanLibConfig-platformIndependent",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "platformIndependent"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig needs":
    [{"id": "Lake___LeanLibConfig-needs",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "needs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig name":
    [{"id": "Lake___LeanLibConfig-name",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "name"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig moreServerOptions":
    [{"id": "Lake___LeanLibConfig-moreServerOptions",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "moreServerOptions"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig moreLinkObjs":
    [{"id": "Lake___LeanLibConfig-moreLinkObjs",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "moreLinkObjs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig moreLinkLibs":
    [{"id": "Lake___LeanLibConfig-moreLinkLibs",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "moreLinkLibs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig moreLinkArgs":
    [{"id": "Lake___LeanLibConfig-moreLinkArgs",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "moreLinkArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig moreLeancArgs":
    [{"id": "Lake___LeanLibConfig-moreLeancArgs",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "moreLeancArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig moreLeanArgs":
    [{"id": "Lake___LeanLibConfig-moreLeanArgs",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "moreLeanArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig libPrefixOnWindows":
    [{"id": "Lake___LeanLibConfig-libPrefixOnWindows",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "libPrefixOnWindows"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig libName":
    [{"id": "Lake___LeanLibConfig-libName",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "libName"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig leanOptions":
    [{"id": "Lake___LeanLibConfig-leanOptions",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "leanOptions"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig extraDepTargets":
    [{"id": "Lake___LeanLibConfig-extraDepTargets",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "extraDepTargets"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig dynlibs":
    [{"id": "Lake___LeanLibConfig-dynlibs",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "dynlibs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig defaultFacets":
    [{"id": "Lake___LeanLibConfig-defaultFacets",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "defaultFacets"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanLibConfig buildType":
    [{"id": "Lake___LeanLibConfig-buildType",
      "data":
      {"tableArrayKey": "lean_lib",
       "table": "Lake.LeanLibConfig",
       "field": "buildType"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig weakLinkArgs":
    [{"id": "Lake___LeanExeConfig-weakLinkArgs",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "weakLinkArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig weakLeancArgs":
    [{"id": "Lake___LeanExeConfig-weakLeancArgs",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "weakLeancArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig weakLeanArgs":
    [{"id": "Lake___LeanExeConfig-weakLeanArgs",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "weakLeanArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig supportInterpreter":
    [{"id": "Lake___LeanExeConfig-supportInterpreter",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "supportInterpreter"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig srcDir":
    [{"id": "Lake___LeanExeConfig-srcDir",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "srcDir"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig root":
    [{"id": "Lake___LeanExeConfig-root",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "root"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig plugins":
    [{"id": "Lake___LeanExeConfig-plugins",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "plugins"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig platformIndependent":
    [{"id": "Lake___LeanExeConfig-platformIndependent",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "platformIndependent"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig needs":
    [{"id": "Lake___LeanExeConfig-needs",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "needs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig name":
    [{"id": "Lake___LeanExeConfig-name",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "name"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig moreServerOptions":
    [{"id": "Lake___LeanExeConfig-moreServerOptions",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "moreServerOptions"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig moreLinkObjs":
    [{"id": "Lake___LeanExeConfig-moreLinkObjs",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "moreLinkObjs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig moreLinkLibs":
    [{"id": "Lake___LeanExeConfig-moreLinkLibs",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "moreLinkLibs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig moreLinkArgs":
    [{"id": "Lake___LeanExeConfig-moreLinkArgs",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "moreLinkArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig moreLeancArgs":
    [{"id": "Lake___LeanExeConfig-moreLeancArgs",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "moreLeancArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig moreLeanArgs":
    [{"id": "Lake___LeanExeConfig-moreLeanArgs",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "moreLeanArgs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig leanOptions":
    [{"id": "Lake___LeanExeConfig-leanOptions",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "leanOptions"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig extraDepTargets":
    [{"id": "Lake___LeanExeConfig-extraDepTargets",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "extraDepTargets"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig exeName":
    [{"id": "Lake___LeanExeConfig-exeName",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "exeName"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig dynlibs":
    [{"id": "Lake___LeanExeConfig-dynlibs",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "dynlibs"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.LeanExeConfig buildType":
    [{"id": "Lake___LeanExeConfig-buildType",
      "data":
      {"tableArrayKey": "lean_exe",
       "table": "Lake.LeanExeConfig",
       "field": "buildType"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.Dependency version":
    [{"id": "Lake___Dependency-version",
      "data":
      {"tableArrayKey": "require",
       "table": "Lake.Dependency",
       "field": "version"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.Dependency source":
    [{"id": "Lake___Dependency-source",
      "data":
      {"tableArrayKey": "require",
       "table": "Lake.Dependency",
       "field": "source"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.Dependency scope":
    [{"id": "Lake___Dependency-scope",
      "data":
      {"tableArrayKey": "require",
       "table": "Lake.Dependency",
       "field": "scope"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.Dependency rev":
    [{"id": "Lake___Dependency-rev",
      "data":
      {"tableArrayKey": "require",
       "table": "Lake.Dependency",
       "field": "rev"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.Dependency path":
    [{"id": "Lake___Dependency-path",
      "data":
      {"tableArrayKey": "require",
       "table": "Lake.Dependency",
       "field": "path"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.Dependency name":
    [{"id": "Lake___Dependency-name",
      "data":
      {"tableArrayKey": "require",
       "table": "Lake.Dependency",
       "field": "name"},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.Dependency git":
    [{"id": "Lake___Dependency-git",
      "data":
      {"tableArrayKey": "require",
       "table": "Lake.Dependency",
       "field": "git"},
      "address": "/Build-Tools-and-Distribution/Lake/"}]}},
  "Manual.lakeOpt":
  {"title": "Manual.lakeOpt",
   "description": "Manual.lakeOpt",
   "contents":
   {"-v":
    [{"id": "lake-flag-v",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "-q":
    [{"id": "lake-flag-q",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "-h":
    [{"id": "lake-flag-h",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "-f":
    [{"id": "lake-option-f",
      "data": "option",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "-d":
    [{"id": "lake-option-d",
      "data": "option",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "-R":
    [{"id": "lake-flag-R",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "-H":
    [{"id": "lake-flag-H",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--wfail":
    [{"id": "lake-flag--wfail",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--version":
    [{"id": "lake-flag--version",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--verbose":
    [{"id": "lake-flag--verbose",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--update":
    [{"id": "lake-flag--update",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--try-cache":
    [{"id": "lake-flag--try-cache",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--rehash":
    [{"id": "lake-flag--rehash",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--reconfigure":
    [{"id": "lake-flag--reconfigure",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--quiet":
    [{"id": "lake-flag--quiet",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--packages":
    [{"id": "lake-option--packages",
      "data": "option",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--old":
    [{"id": "lake-flag--old",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--no-cache":
    [{"id": "lake-flag--no-cache",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--no-build":
    [{"id": "lake-flag--no-build",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--no-ansi":
    [{"id": "lake-flag--no-ansi",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--log-level":
    [{"id": "lake-option--log-level",
      "data": "option",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--keep-toolchain":
    [{"id": "lake-flag--keep-toolchain",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--iofail":
    [{"id": "lake-flag--iofail",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--help":
    [{"id": "lake-flag--help",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--file":
    [{"id": "lake-option--file",
      "data": "option",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--fail-level":
    [{"id": "lake-option--fail-level",
      "data": "option",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--dir":
    [{"id": "lake-option--dir",
      "data": "option",
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "--ansi":
    [{"id": "lake-flag--ansi",
      "data": "flag",
      "address": "/Build-Tools-and-Distribution/Lake/"}]}},
  "Manual.lakeCommand":
  {"title": "Lake commands",
   "description": "Lake commands",
   "contents":
   {"upload":
    [{"id": "upload",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "update":
    [{"id": "update",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "unpack":
    [{"id": "unpack",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "translate-config":
    [{"id": "translate-config",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "test":
    [{"id": "test",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "serve":
    [{"id": "serve",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "scripts":
    [{"id": "script-list",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "script run":
    [{"id": "script-run",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "script list":
    [{"id": "script-list",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "script doc":
    [{"id": "script-doc",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "run":
    [{"id": "script-run",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "query":
    [{"id": "query",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "pack":
    [{"id": "pack",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "new":
    [{"id": "new",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "lint":
    [{"id": "lint",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "lean":
    [{"id": "lean",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "init":
    [{"id": "init",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "exec":
    [{"id": "exe",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "exe":
    [{"id": "exe",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "env":
    [{"id": "env",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "clean":
    [{"id": "clean",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "check-test":
    [{"id": "check-test",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "check-lint":
    [{"id": "check-lint",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "check-build":
    [{"id": "check-build",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "build":
    [{"id": "build",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}]}},
  "Manual.examples":
  {"title": "Manual.examples",
   "description": "Manual.examples",
   "contents":
   {"where  for structures": [],
    "Zero-Overhead Subtypes": [],
    "Widths and Newlines": [],
    "Vector length index as a parameter": [],
    "Variations in Instance Definitions": [],
    "Variable not in scope": [],
    "Using Any Local Variable": [],
    "Using  simp?": [],
    "Using  in  for Local Scopes": [],
    "Using  Ord  Instances for  LT  and  LE  Instances": [],
    "Using  NoNatZeroDivisors": [],
    "Updating arrays": [],
    "Unresolvable name inferred by dotted-identifier notation": [],
    "Unnecessary fallback clause": [],
    "Universes, constructors, and parameters": [],
    "Universe-polymorphic identity function": [],
    "Universe-polymorphic  map": [],
    "Universe polymorphism and definitional equality": [],
    "Universe monomorphism in auto-bound implicit parameters": [],
    "Universe mismatch": [],
    "Universe levels of function types": [],
    "Universe level expressions": [],
    "Universe Level Metavariables": [],
    "Unit  in the ABI": [],
    "Uninferred binder type due to resulting type annotation": [],
    "Unexpansion and Arguments": [],
    "Typo in resulting type": [],
    "Types are irrelevant": [],
    "Type Refinement": [],
    "Type Metavariables": [],
    "Turning Off Field Notation": [],
    "Truth-Functional Implication": [],
    "True  is a subsingleton": [],
    "Translating Nested Inductive Types": [],
    "Too Many Instances": [],
    "Throwing and Catching Errors": [],
    "The recursor for  List": [],
    "The recursor for  Bool": [],
    "The Macro Attribute": [],
    "The Integers as a Quotient Type": [],
    "The Identity Monad Transformer ": [],
    "The  universe  command when  autoImplicit  is  false": [],
    "The  @[grind ←=]  Attribute": [],
    "The  @[grind ext]  Attribute": [],
    "Testing Return Values": [],
    "Termination failure": [],
    "Termination Proof Tactics During Inference": [],
    "Termination Proof Obligations": [],
    "Terminating Loops in the  Option  Monad": [],
    "Term vs Command Quotation Syntax": [],
    "Target and Facet Specifications": [],
    "Taking Advantage of Run-Time Representations": [],
    "Tail Recursion with Branching": [],
    "Tactic hygiene: inaccessible assumptions": [],
    "Tactic hygiene: accessible assumptions": [],
    "Syntax as Strings": [],
    "Suffixed Splices": [],
    "Subtype Coercions": [],
    "Subgoal Sequencing": [],
    "Sub-Array Syntax": [],
    "Structure type inheritance with overlapping fields": [],
    "Structural Recursion vs Subtraction": [],
    "Structural Recursion and Definitional Equality": [],
    "Structural Recursion Under Pairs": [],
    "State Types": [],
    "Standard Library Types": [],
    "Spuriously mutual types": [],
    "Splitting Predicates": [],
    "Splitting Pattern Matching": [],
    "Splitting Conditional Expressions": [],
    "Specifying Decreasing Parameters": [],
    "Sources as Tables": [],
    "Sort Coercions as Ordinary Coercions": [],
    "Sort Coercions": [],
    "Simultaneous Matching vs Matching Pairs for Structural Recursion": [],
    "Signed Integers": [],
    "Semi-Output Parameters with Pre-Existing Values": [],
    "Selecting Patterns": [],
    "Section Variables": [],
    "Scoped Macros": [],
    "Scope Information": [],
    "Running a Program on a File": [],
    "Running a Program": [],
    "Ring Characteristics": [],
    "Right pipeline notation": [],
    "Rewriting Under Binders with  conv": [],
    "Rewriting Propositions": [],
    "Requiring Reservoir Packages from a Git tag": [],
    "Requiring Packages from a Git tag": [],
    "Requiring Packages from Reservoir": [],
    "Requiring Packages from Paths": [],
    "Requiring Packages from Git": [],
    "Representing Syntax as Constructors": [],
    "Relaxed vs Non-Relaxed Automatic Implicit Parameters": [],
    "Refined Parameters": [],
    "Reference Counts in IR": [],
    "Reference Cells as Locks": [],
    "Reducing Functions": [],
    "Reducibility and Tactics": [],
    "Reducibility and Instance Synthesis": [],
    "Reducibility and Generalized Field Notation": [],
    "Redirecting Standard I/O to Strings": [],
    "Recursor with parameters and indices": [],
    "Recursive tactic macro": [],
    "Recursive Equational Lemmas": [],
    "Recursion vs Recursors": [],
    "Reasoning by cases with  match": [],
    "Reasoning by cases with  if": [],
    "Reading from Standard Input": [],
    "Rational Solutions": [],
    "Querying the Environment": [],
    "Quasiquotation": [],
    "Proving Existential Statements": [],
    "Provided Operator Names": [],
    "Protected constant name without namespace prefix": [],
    "Propagating Equalities": [],
    "Proofs by Induction": [],
    "Proofs are irrelevant": [],
    "Proofs About Quotients": [],
    "Printing Equations": [],
    "Printing Axioms": [],
    "Printing": [],
    "Pretty-Printed Syntax": [],
    "Preprocessing for a custom data type": [],
    "Predicativity of  Type": [],
    "Precedence for Prefix and Infix Operators": [],
    "Popcount": [],
    "Pipeline Fields": [],
    "Patterns from Conclusion and Hypotheses": [],
    "Patterns and default values": [],
    "Pattern-Matching Functions": [],
    "Pattern treated as variable, not constructor": [],
    "Pattern Matching and Lists": [],
    "Pattern Equality Proofs": [],
    "Partial Functions in Proofs": [],
    "Partial Correctness Theorem": [],
    "Parsing Matched Parentheses and Brackets": [],
    "Parsing Comma-Separated Repetitions": [],
    "Parameters before and after the colon": [],
    "Parameter Scope": [],
    "Panic": [],
    "Overly-universe-polymorphic  Bool": [],
    "Overflowing Fixed-Width Literals": [],
    "Output Parameters with Pre-Existing Values": [],
    "Output Parameters and Stuck Search": [],
    "Ordinary vs Strict Implicit Parameters": [],
    "Or  is not a subsingleton": [],
    "Options as Safe Nullability": [],
    "Options as Nullability": [],
    "Optional Splices": [],
    "Opening Scoped Declarations": [],
    "Opening Nested Namespaces": [],
    "One vs. Two Sets of Macro Rules": [],
    "One File, Multiple Handles": [],
    "Omitting parameter in argument to higher-order predicate": [],
    "Observing Uniqueness": [],
    "Numeric Literals for Bitvectors": [],
    "Numeric Literals for  Fin": [],
    "Nonlinear Terms": [],
    "Noncomputable instance in namespace": [],
    "Noncomputable dependency can be made computable": [],
    "Non-strictly-positive inductive types": [],
    "Non-default constructor name": [],
    "Non-Dependent Functions Don't Bind Variables": [],
    "Non-Comma Separators": [],
    "No structure subtyping": [],
    "No cumulativity": [],
    "No Kernel Reasoning About Floating-Point Numbers": [],
    "No Instances of Non-Classes": [],
    "No Backtracking of Lexicographic Order": [],
    "No Automatic Implicit Parameters": [],
    "Newline Characters in Strings": [],
    "Nesting Namespaces and Sections": [],
    "Nested positions": [],
    "Nested Patterns and Sub-Terms": [],
    "Nested Inductive Types with  Std.HashMap": [],
    "Nested Inductive Types and Quotients": [],
    "Nested Inductive Types": [],
    "Nested Dependent Pair Types": [],
    "Nested  do  and Branches": [],
    "Necessarily noncomputable function not appropriately marked": [],
    "Navigation and Rewriting with  conv": [],
    "Natural Numbers with  cutsat": [],
    "Named goals": [],
    "Named Section": [],
    "Named Arguments": [],
    "Mutually Defined Inductive Types": [],
    "Mutual strict positivity": [],
    "Mutual recursion without parameter decrease": [],
    "Mutual inductive type constructors may not mention each other": [],
    "Mutual Structural Recursion Over Non-Mutual Types": [],
    "Mutual Structural Recursion Over Mutual Types": [],
    "Mutual Block Scope and Automatic Implicit Parameters": [],
    "Mutual Block Scope": [],
    "Multiple Parameters, Same Type": [],
    "Multi-Patterns": [],
    "More Commutative Ring Proofs": [],
    "Monadic functions": [],
    "Monadic Collection Operations": [],
    "Monad Lifts in Function Signatures": [],
    "Modifying Values in Maps": [],
    "Modifiers on structure constructor": [],
    "Missing resulting type after constructor parameter": [],
    "Missing namespace": [],
    "Missing import": [],
    "Minimal TOML Package Configuration": [],
    "Minimal Library Target": [],
    "Minimal Executable Target": [],
    "Metavariables in Proofs": [],
    "Memory Re-Use in IR": [],
    "Maximal Parentheses": [],
    "Matching, With and Without Generalization": [],
    "Matching with an Explicit Motive": [],
    "Matching on Complex Expressions Can Prevent Elaboration": [],
    "Match Patterns Follow Reduction": [],
    "Manually Quotiented Integers": [],
    "Macro Error Reporting": [],
    "Loops are Tail Recursive Functions": [],
    "Longer Prefixes of Current Namespace Take Precedence": [],
    "Longer Identifier Prefixes Take Precedence": [],
    "Long List Literals": [],
    "Location specifiers for  simp": [],
    "Local Names Take Precedence": [],
    "Local Instances Have Priority": [],
    "Local Instances": [],
    "Local Effects with the Identity Monad": [],
    "Lists with Lengths as Applicative Functors": [],
    "Linear Integer Arithmetic with Case Analysis": [],
    "Linear Division and Modulo with  cutsat": [],
    "Limiting  ring  Steps": [],
    "Lifting Transformed Monads": [],
    "Lifting  IO  Monads": [],
    "Library TOML Package Configuration": [],
    "Left-to-Right Generation": [],
    "Left pipeline notation": [],
    "Leading  .  and Unfolding Definitions": [],
    "Leading  .": [],
    "Lazy Lists": [],
    "Iteration over Array Indices with  for": [],
    "Iteration Over Multiple Collections": [],
    "Iterated Automatic Implicit Parameters": [],
    "Invalid Nested Inductive Types": [],
    "Integer Negation and Addition": [],
    "Insufficient type information": [],
    "Instances for nested types": [],
    "Instances are not recursive": [],
    "Instances are Not Unique": [],
    "Instance Name Generation": [],
    "Inspecting Patterns": [],
    "Inheriting Documentation": [],
    "Inhabited Sum Types": [],
    "Infix Syntax": [],
    "Infix  Functor  and  Applicative  Operators": [],
    "Inferred Termination Annotations": [],
    "Inferred Characteristic": [],
    "Inference too powerful": [],
    "Ineligible decreasing parameters": [],
    "Inductive Types with Constructors": [],
    "Increasing E-matching Limits": [],
    "Incorrect ordering of pattern matches": [],
    "Inconsistent Indices": [],
    "Inconsistencies From Axioms": [],
    "Included and Omitted Section Variables": [],
    "Inaccessible Patterns": [],
    "Inaccessible Assumption Names": [],
    "Impredicativity": [],
    "Impossible Functions": [],
    "Impossible Code Paths": [],
    "Implicit argument cannot be inferred": [],
    "Implicit and Explicit Parameters to Instances": [],
    "Implicit Parameters from Types": [],
    "Implementing Coercions": [],
    "Ignored Terms in Notation Expansion": [],
    "Idiom Brackets": [],
    "Identifying Missing Facts": [],
    "Hierarchical Goal Names": [],
    "Hiding Proof Terms": [],
    "Heterogeneous Equality": [],
    "Grouping and Filling": [],
    "Goals Decided by  linarith": [],
    "Generalized Field Notation": [],
    "From Characters to Strings": [],
    "Forward Pattern Generation": [],
    "Floating-Point Literals": [],
    "Floating-Point Equality Is Not a Congruence": [],
    "Floating-Point Equality Is Not Reflexive": [],
    "Fixed-Width Literals": [],
    "Fixed-Width Bitvector Literals": [],
    "Finite-Field Reasoning": [],
    "Filling Holes with Unification": [],
    "Fields and  grind": [],
    "Field Indices and Structure Inheritance": [],
    "False  is a subsingleton": [],
    "Failing Backward Pattern Generation": [],
    "Extracting the witness from an existential proof": [],
    "Extensional Equality of Subtypes": [],
    "Extending  trivial": [],
    "Exported Names": [],
    "Explicitly-Created Metavariables": [],
    "Explicit Root Namespace": [],
    "Expansion Backtracking": [],
    "Expanding Quasiquotation": [],
    "Excluded Middle and  Decidable": [],
    "Exceptions and Lifting": [],
    "Examples of  cutsat": [],
    "Even and odd": [],
    "Even Numbers": [],
    "Equational Lemmas": [],
    "Eq  is a subsingleton": [],
    "Enriched Proof Obligation Contexts": [],
    "Elaboration Walkthrough": [],
    "Effect Ordering": [],
    "E-matching and Pattern Matching": [],
    "E-matching Patterns": [],
    "Duplicated Terms in Notation Expansion": [],
    "Duplicate Evaluation in Coercions": [],
    "Dotted identifier where type universe expected": [],
    "Division by Iterated Subtraction: Termination Proof": [],
    "Division by Iterated Subtraction": [],
    "Division by 0": [],
    "Displaying Output": [],
    "Displaying Differences": [],
    "Discriminant Refinement": [],
    "Disambiguation via Typing": [],
    "Differing parameter types": [],
    "Differing numbers of parameters": [],
    "Deriving Multiple Classes": [],
    "Deriving Handlers": [],
    "Dependent projection types": [],
    "Dependent Pairs with Data": [],
    "Dependent Pairs as Sums": [],
    "Dependent Function Types": [],
    "Dependent Coercion to Functions": [],
    "Dependent Coercion": [],
    "Definitional Equality of Unit-Like Types": [],
    "Definitional Equality of Subtypes": [],
    "Definitional Equality of Implicit and Explicit Function Types": [],
    "Definitional Equality of Dependent and Non-Dependent Functions": [],
    "Definitional Equality of  Unit": [],
    "Definition type uninferrable due to unknown parameter type": [],
    "Definition by Partial Fixpoint": [],
    "Defining an intermediate data value within a proof": [],
    "Defining Dependent Coercions": [],
    "Defining Coercions: Decimal Numbers": [],
    "Defining Coercions": [],
    "Default values": [],
    "Default Size Instance": [],
    "Default Instances": [],
    "Dead Code and Subsingleton Elimination": [],
    "Data races with  get  and  set": [],
    "Custom Unit Type": [],
    "Custom Operators in Lean's Output": [],
    "Custom Natural Number Literals": [],
    "Current Namespace Contents Take Precedence Over Opened Namespaces": [],
    "Current Namespace": [],
    "Course-of-Values Tables": [],
    "Controlling Evaluation with Coercions": [],
    "Controlling Coercion Insertion": [],
    "Constructing Lists": [],
    "Congruence Closure": [],
    "Configured Library Target": [],
    "Configured Executable Target": [],
    "Computing types": [],
    "Commutative Rings": [],
    "Commutative Ring Goals Decided by  linarith": [],
    "Commutative (Semi)ring Normalization": [],
    "Coercions and Generalized Field Notation": [],
    "Coercions and  Option": [],
    "Coercions and  OfNat": [],
    "Coercions": [],
    "Coercing to Function Types": [],
    "Coercing from  Fin  to  Nat": [],
    "Coercing Decorated Functions to Function Types": [],
    "CoeOut  vs  Coe  instances": [],
    "Closing a Subprocess's Standard Input": [],
    "Class vs Structure Constructors": [],
    "Class Abbreviations": [],
    "Choosing Eliminators": [],
    "Checking for Type Errors": [],
    "Checking Exit Codes": [],
    "Checking Equality with Pointers": [],
    "Checking Array Bounds": [],
    "Characteristic Zero": [],
    "Built-In Integers as Quotients": [],
    "Bounded Bitvector Literals": [],
    "Binder type requires new type variable": [],
    "Bidirectional Equality Pattern Generation": [],
    "Backward Pattern Generation": [],
    "Axioms and Stuck Reduction": [],
    "Axioms and Compilation": [],
    "Avoiding data races with  modify": [],
    "Avoiding a Type": [],
    "Automatic universe parameters and the  universe  command": [],
    "Automatic Implicit Parameters and Universe Polymorphism": [],
    "Automatic Implicit Parameters": [],
    "Auto-implicit parameters in structure fields": [],
    "Attempting to use index projection on existential proof": [],
    "Attempting to name an example declaration": [],
    "Attempting to define multiple structure fields on the same line": [],
    "Attempting to define multiple opaque constants at once": [],
    "Atomic Types and  Repr": [],
    "Asynchronous Subprocesses": [],
    "Assumptions by Type, Outside Proofs": [],
    "Assumptions by Type": [],
    "Assumption Names and Conclusion": [],
    "Assigned Operator Names": [],
    "Ascribing Types to  do  Blocks": [],
    "Ascribing Statements to Proofs": [],
    "Array Literals": [],
    "Array Indexing": [],
    "Antiquotation Annotations": [],
    "Anonymous constructors": [],
    "Anonymous Goals": [],
    "And  is a subsingleton": [],
    "An instance for a sum class": [],
    "Ambiguous Operators and Priorities": [],
    "Ambiguous Identifiers": [],
    "Aligned Columns": [],
    "Algebraic Reasoning": [],
    "Accessible Assumption Names": [],
    "A unit type": [],
    "A type with parameter and index": [],
    "A true proposition": [],
    "A recursive instance for a sum class": [],
    "A constructorless type": [],
    "A constructorless proposition": [],
    "#print  and Structure Types": [],
    "#check  and Underdetermined Types": []}},
  "Manual.errorExplanation":
  {"title": "Error Explanations",
   "description": "Error Explanations",
   "contents":
   {"lean.unknownIdentifier":
    [{"id": "lean___unknownIdentifier",
      "data":
      {"summary": "Failed to resolve identifier to variable or constant."},
      "address": "/Error-Explanations/lean___unknownIdentifier/"}],
    "lean.redundantMatchAlt":
    [{"id": "lean___redundantMatchAlt",
      "data": {"summary": "Match alternative will never be reached."},
      "address": "/Error-Explanations/lean___redundantMatchAlt/"}],
    "lean.propRecLargeElim":
    [{"id": "lean___propRecLargeElim",
      "data":
      {"summary":
       "Attempted to eliminate a proof into a higher type universe."},
      "address": "/Error-Explanations/lean___propRecLargeElim/"}],
    "lean.projNonPropFromProp":
    [{"id": "lean___projNonPropFromProp",
      "data": {"summary": "Tried to project data from a proof."},
      "address": "/Error-Explanations/lean___projNonPropFromProp/"}],
    "lean.invalidDottedIdent":
    [{"id": "lean___invalidDottedIdent",
      "data":
      {"summary":
       "Dotted identifier notation used with invalid or uninferrable expected type."},
      "address": "/Error-Explanations/lean___invalidDottedIdent/"}],
    "lean.inferDefTypeFailed":
    [{"id": "lean___inferDefTypeFailed",
      "data": {"summary": "The type of a definition could not be inferred."},
      "address": "/Error-Explanations/lean___inferDefTypeFailed/"}],
    "lean.inferBinderTypeFailed":
    [{"id": "lean___inferBinderTypeFailed",
      "data": {"summary": "The type of a binder could not be inferred."},
      "address": "/Error-Explanations/lean___inferBinderTypeFailed/"}],
    "lean.inductiveParamMissing":
    [{"id": "lean___inductiveParamMissing",
      "data":
      {"summary":
       "Parameter not present in an occurrence of an inductive type in one of its constructors."},
      "address": "/Error-Explanations/lean___inductiveParamMissing/"}],
    "lean.inductiveParamMismatch":
    [{"id": "lean___inductiveParamMismatch",
      "data":
      {"summary":
       "Invalid parameter in an occurrence of an inductive type in one of its constructors."},
      "address": "/Error-Explanations/lean___inductiveParamMismatch/"}],
    "lean.dependsOnNoncomputable":
    [{"id": "lean___dependsOnNoncomputable",
      "data":
      {"summary":
       "Declaration depends on noncomputable definitions but is not marked as noncomputable"},
      "address": "/Error-Explanations/lean___dependsOnNoncomputable/"}],
    "lean.ctorResultingTypeMismatch":
    [{"id": "lean___ctorResultingTypeMismatch",
      "data":
      {"summary":
       "Resulting type of constructor was not the inductive type being declared."},
      "address": "/Error-Explanations/lean___ctorResultingTypeMismatch/"}]}},
  "Manual.envVar":
  {"title": "Environment Variables",
   "description": "Environment Variables",
   "contents":
   {"LEAN_SYSROOT":
    [{"id": "LEAN_SYSROOT",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "LEAN_NUM_THREADS":
    [{"id": "LEAN_NUM_THREADS",
      "data": null,
      "address": "/IO/Tasks-and-Threads/"}],
    "LEAN_CC":
    [{"id": "LEAN_CC",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "LEAN_AR":
    [{"id": "LEAN_AR",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "LEAN":
    [{"id": "LEAN",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "LAKE_OVERRIDE_LEAN":
    [{"id": "LAKE_OVERRIDE_LEAN",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "LAKE_NO_CACHE":
    [{"id": "LAKE_NO_CACHE",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "LAKE_HOME":
    [{"id": "LAKE_HOME",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "LAKE":
    [{"id": "LAKE",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "ELAN_HOME":
    [{"id": "ELAN_HOME",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id": "ELAN_HOME-next",
      "data": null,
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "ELAN":
    [{"id": "ELAN",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "CC":
    [{"id": "CC",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "AR":
    [{"id": "AR",
      "data": null,
      "address": "/Build-Tools-and-Distribution/Lake/"}]}},
  "Manual.elanOpt":
  {"title": "Manual.elanOpt",
   "description": "Manual.elanOpt",
   "contents":
   {"-v":
    [{"id": "elan-flag-v",
      "data": "flag",
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "-h":
    [{"id": "elan-flag-h",
      "data": "flag",
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "-V":
    [{"id": "elan-flag-V",
      "data": "flag",
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "--version":
    [{"id": "elan-flag--version",
      "data": "flag",
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "--verbose":
    [{"id": "elan-flag--verbose",
      "data": "flag",
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "--path":
    [{"id": "elan-option--path",
      "data": "option",
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "--nonexistent":
    [{"id": "elan-flag--nonexistent",
      "data": "flag",
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "--json":
    [{"id": "elan-flag--json",
      "data": "flag",
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "--install":
    [{"id": "elan-flag--install",
      "data": "flag",
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "--help":
    [{"id": "elan-flag--help",
      "data": "flag",
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "--delete":
    [{"id": "elan-flag--delete",
      "data": "flag",
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}]}},
  "Manual.elanCommand":
  {"title": "Elan commands",
   "description": "Elan commands",
   "contents":
   {"which":
    [{"id": "which",
      "data": null,
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "toolchain uninstall":
    [{"id": "toolchain-uninstall",
      "data": null,
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "toolchain list":
    [{"id": "toolchain-list",
      "data": null,
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "toolchain link":
    [{"id": "toolchain-link",
      "data": null,
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "toolchain install":
    [{"id": "toolchain-install",
      "data": null,
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "toolchain gc":
    [{"id": "toolchain-gc",
      "data": null,
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "show":
    [{"id": "show-next",
      "data": null,
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "self update":
    [{"id": "self-update",
      "data": null,
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "self uninstall":
    [{"id": "self-uninstall",
      "data": null,
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "run":
    [{"id": "run",
      "data": null,
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "override unset":
    [{"id": "override-unset",
      "data": null,
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "override set":
    [{"id": "override-set",
      "data": null,
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "override list":
    [{"id": "override-list",
      "data": null,
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "default":
    [{"id": "default",
      "data": null,
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}],
    "completions":
    [{"id": "completions",
      "data": null,
      "address":
      "/Build-Tools-and-Distribution/Managing-Toolchains-with-Elan/"}]}},
  "Manual.Syntax.production":
  {"title": "Manual.Syntax.production",
   "description": "Manual.Syntax.production",
   "contents":
   {"«term∃_,_» [{\"string\": \"∃\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term_________FLQQ_-next",
      "data":
      {"kind": "«term∃_,_»",
       "forms":
       [{"string": "∃", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Propositions/Quantifiers/"}],
    "«term∃_,_» [{\"string\": \"∃\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term_________FLQQ_",
      "data":
      {"kind": "«term∃_,_»",
       "forms":
       [{"string": "∃", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Propositions/Quantifiers/"}],
    "«term‹_›» [{\"string\": \"‹\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"›\", \"kind\": \"keyword\"}]":
    [{"id": "_FLQQ_term_FLQ___FRQ__FLQQ_",
      "data":
      {"kind": "«term‹_›»",
       "forms":
       [{"string": "‹", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "›", "kind": "keyword"}],
       "category": null},
      "address": "/Tactic-Proofs/Reading-Proof-States/"}],
    "«termΣ_,_» [{\"string\": \"Σ\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term_________FLQQ_-next-next-next-next-next",
      "data":
      {"kind": "«termΣ_,_»",
       "forms":
       [{"string": "Σ", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Tuples/"}],
    "«termΣ_,_» [{\"string\": \"Σ\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term_________FLQQ_-next-next-next-next-next-next",
      "data":
      {"kind": "«termΣ_,_»",
       "forms":
       [{"string": "Σ", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Tuples/"}],
    "«termΣ'_,_» [{\"string\": \"Σ'\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term____________FLQQ_",
      "data":
      {"kind": "«termΣ'_,_»",
       "forms":
       [{"string": "Σ'", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Tuples/"}],
    "«termΣ'_,_» [{\"string\": \"Σ'\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term____________FLQQ_-next",
      "data":
      {"kind": "«termΣ'_,_»",
       "forms":
       [{"string": "Σ'", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Tuples/"}],
    "«term¬_» [{\"string\": \"¬\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term_____FLQQ_",
      "data":
      {"kind": "«term¬_»",
       "forms":
       [{"string": "¬", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "«term{_:_//_}» [{\"string\": \"{\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"//\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"}\", \"kind\": \"keyword\"}]":
    [{"id": "_FLQQ_term___________________FLQQ_",
      "data":
      {"kind": "«term{_:_//_}»",
       "forms":
       [{"string": "{", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "//", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "}", "kind": "keyword"}],
       "category": null},
      "address": "/Basic-Types/Subtypes/"}],
    "«term{_:_//_}» [{\"string\": \"{\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"//\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"}\", \"kind\": \"keyword\"}]":
    [{"id": "_FLQQ_term___________________FLQQ_-next",
      "data":
      {"kind": "«term{_:_//_}»",
       "forms":
       [{"string": "{", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "//", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "}", "kind": "keyword"}],
       "category": null},
      "address": "/Basic-Types/Subtypes/"}],
    "«term_⊕_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"⊕\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "_FLQQ_term______FLQQ_-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "«term_⊕_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "⊕", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Sum-Types/"}],
    "«term_⊕'_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"⊕'\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term_________FLQQ_-next-next-next-next-next-next-next",
      "data":
      {"kind": "«term_⊕'_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "⊕'", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Sum-Types/"}],
    "«term_≥_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"≥\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term______FLQQ_-next-next",
      "data":
      {"kind": "«term_≥_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "≥", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Type-Classes/Basic-Classes/"}],
    "«term_≤_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"≤\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term______FLQQ_-next",
      "data":
      {"kind": "«term_≤_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "≤", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Type-Classes/Basic-Classes/"}],
    "«term_≍_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"≍\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term______FLQQ_-next-next-next-next-next-next-next",
      "data":
      {"kind": "«term_≍_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "≍", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "«term_≈_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"≈\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term______FLQQ_",
      "data":
      {"kind": "«term_≈_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "≈", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/The-Type-System/Quotients/"}],
    "«term_∨_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"∨\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term______FLQQ_-next-next-next-next",
      "data":
      {"kind": "«term_∨_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "∨", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "«term_∧_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"∧\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term______FLQQ_-next-next-next",
      "data":
      {"kind": "«term_∧_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "∧", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "«term_↔_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"↔\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term______FLQQ_-next-next-next-next-next",
      "data":
      {"kind": "«term_↔_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "↔", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Propositions/Logical-Connectives/"}],
    "«term_×_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"×\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term______FLQQ_-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "«term_×_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "×", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Tuples/"}],
    "«term_×__1» [{\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"×\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term______1_FLQQ_",
      "data":
      {"kind": "«term_×__1»",
       "forms":
       [{"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "×", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Tuples/"}],
    "«term_×'_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"×'\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term_________FLQQ_-next-next-next-next",
      "data":
      {"kind": "«term_×'_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "×'", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Tuples/"}],
    "«term_||_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"||\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term_________FLQQ_-next-next-next",
      "data":
      {"kind": "«term_||_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "||", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Booleans/"}],
    "«term_|>_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"|>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term_____GT___FLQQ_",
      "data":
      {"kind": "«term_|>_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "|>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Function-Application/"}],
    "«term_>_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \">\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term__GT___FLQQ_",
      "data":
      {"kind": "«term_>_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ">", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Type-Classes/Basic-Classes/"}],
    "«term_>>=_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \">>=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term__GT__GT______FLQQ_",
      "data":
      {"kind": "«term_>>=_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ">>=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_>=>_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \">=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term__GT_____GT___FLQQ_",
      "data":
      {"kind": "«term_>=>_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ">=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_=_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term______FLQQ_-next-next-next-next-next-next",
      "data":
      {"kind": "«term_=_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "«term_=<<_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=<<\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term_____LT__LT___FLQQ_",
      "data":
      {"kind": "«term_=<<_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=<<", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_<|_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"<|\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term__LT______FLQQ_",
      "data":
      {"kind": "«term_<|_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "<|", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Function-Application/"}],
    "«term_<|>_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"<|>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term__LT_____GT___FLQQ_-next-next-next",
      "data":
      {"kind": "«term_<|>_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "<|>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_<_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"<\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term__LT___FLQQ_",
      "data":
      {"kind": "«term_<_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "<", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Type-Classes/Basic-Classes/"}],
    "«term_<=<_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"<=<\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term__LT_____LT___FLQQ_",
      "data":
      {"kind": "«term_<=<_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "<=<", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_<*_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"<*\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term__LT______FLQQ_-next",
      "data":
      {"kind": "«term_<*_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "<*", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_<*>_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"<*>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term__LT_____GT___FLQQ_-next-next",
      "data":
      {"kind": "«term_<*>_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "<*>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_<&>_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"<&>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term__LT_____GT___FLQQ_-next",
      "data":
      {"kind": "«term_<&>_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "<&>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_<$>_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"<$>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term__LT_____GT___FLQQ_",
      "data":
      {"kind": "«term_<$>_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "<$>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_::_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"::\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "_FLQQ_term_________FLQQ_-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "«term_::_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "::", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Linked-Lists/"}],
    "«term_*>_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"*>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term_____GT___FLQQ_-next",
      "data":
      {"kind": "«term_*>_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "*>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "«term_&&_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"&&\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_term_________FLQQ_-next-next",
      "data":
      {"kind": "«term_&&_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "&&", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Booleans/"}],
    "«term[_]» [{\"string\": \"[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"}]":
    [{"id": "_FLQQ_term_LSQ___RSQ__FLQQ_-next",
      "data":
      {"kind": "«term[_]»",
       "forms":
       [{"string": "[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"}],
       "category": null},
      "address": "/Basic-Types/Linked-Lists/"},
     {"id": "_FLQQ_term_LSQ___RSQ__FLQQ_",
      "data":
      {"kind": "«term[_]»",
       "forms":
       [{"string": "[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Literals/"}],
    "«termExists_,_» [{\"string\": \"exists\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_termExists______FLQQ_-next",
      "data":
      {"kind": "«termExists_,_»",
       "forms":
       [{"string": "exists", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Propositions/Quantifiers/"}],
    "«termExists_,_» [{\"string\": \"exists\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_termExists______FLQQ_",
      "data":
      {"kind": "«termExists_,_»",
       "forms":
       [{"string": "exists", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Propositions/Quantifiers/"}],
    "«term#[_,]» [{\"string\": \"#[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"}]":
    [{"id": "_FLQQ_term____LSQ______RSQ__FLQQ_",
      "data":
      {"kind": "«term#[_,]»",
       "forms":
       [{"string": "#[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Literals/"},
     {"id": "_FLQQ_term____LSQ______RSQ__FLQQ_-next",
      "data":
      {"kind": "«term#[_,]»",
       "forms":
       [{"string": "#[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"}],
       "category": null},
      "address": "/Basic-Types/Arrays/"}],
    "«stx_<|>_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"<|>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "_FLQQ_stx__LT_____GT___FLQQ_",
      "data":
      {"kind": "«stx_<|>_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "<|>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "«stx_,+» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \",+\", \"kind\": \"keyword\"}]":
    [{"id": "_FLQQ_stx________FLQQ_-next",
      "data":
      {"kind": "«stx_,+»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ",+", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "«stx_,+,?» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \",+,?\", \"kind\": \"keyword\"}]":
    [{"id": "_FLQQ_stx______________FLQQ_-next",
      "data":
      {"kind": "«stx_,+,?»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ",+,?", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "«stx_,*» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \",*\", \"kind\": \"keyword\"}]":
    [{"id": "_FLQQ_stx________FLQQ_",
      "data":
      {"kind": "«stx_,*»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ",*", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "«stx_,*,?» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \",*,?\", \"kind\": \"keyword\"}]":
    [{"id": "_FLQQ_stx______________FLQQ_",
      "data":
      {"kind": "«stx_,*,?»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ",*,?", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "«stx_+» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"+\", \"kind\": \"keyword\"}]":
    [{"id": "_FLQQ_stx_____FLQQ_-next",
      "data":
      {"kind": "«stx_+»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "+", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "«stx_*» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"*\", \"kind\": \"keyword\"}]":
    [{"id": "_FLQQ_stx_____FLQQ_",
      "data":
      {"kind": "«stx_*»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "*", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "«prio(_)» [{\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "_FLQQ_prio_LPAR___RPAR__FLQQ_",
      "data":
      {"kind": "«prio(_)»",
       "forms":
       [{"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "«prec(_)» [{\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "_FLQQ_prec_LPAR___RPAR__FLQQ_",
      "data":
      {"kind": "«prec(_)»",
       "forms":
       [{"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Precedence/"}],
    "termIfThenElse [{\"string\": \"if\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"then\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"else\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "termIfThenElse",
      "data":
      {"kind": "termIfThenElse",
       "forms":
       [{"string": "if", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "then", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "else", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Conditionals/"}],
    "termIfLet [{\"string\": \"if\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"let\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"then\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"else\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "termIfLet",
      "data":
      {"kind": "termIfLet",
       "forms":
       [{"string": "if", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "let", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "then", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "else", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Conditionals/"}],
    "termDepIfThenElse [{\"string\": \"if\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"then\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"else\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "termDepIfThenElse",
      "data":
      {"kind": "termDepIfThenElse",
       "forms":
       [{"string": "if", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "then", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "else", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Conditionals/"}],
    "term!_ [{\"string\": \"!\", \"kind\": \"keyword\"}, {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "term____",
      "data":
      {"kind": "term!_",
       "forms":
       [{"string": "!", "kind": "keyword"}, {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Booleans/"}],
    "stx_? [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"?\", \"kind\": \"keyword\"}]":
    [{"id": "stx____",
      "data":
      {"kind": "stx_?",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "?", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "stx!_ [{\"string\": \"!\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "stx____-next",
      "data":
      {"kind": "stx!_",
       "forms":
       [{"string": "!", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "str.antiquot [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "str___antiquot",
      "data":
      {"kind": "str.antiquot",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Notations/"}],
    "prioMid [{\"string\": \"mid\", \"kind\": \"keyword\"}]":
    [{"id": "prioMid",
      "data":
      {"kind": "prioMid",
       "forms": [{"string": "mid", "kind": "keyword"}],
       "category": null},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "prioLow [{\"string\": \"low\", \"kind\": \"keyword\"}]":
    [{"id": "prioLow",
      "data":
      {"kind": "prioLow",
       "forms": [{"string": "low", "kind": "keyword"}],
       "category": null},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "prioHigh [{\"string\": \"high\", \"kind\": \"keyword\"}]":
    [{"id": "prioHigh",
      "data":
      {"kind": "prioHigh",
       "forms": [{"string": "high", "kind": "keyword"}],
       "category": null},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "prioDefault [{\"string\": \"default\", \"kind\": \"keyword\"}]":
    [{"id": "prioDefault",
      "data":
      {"kind": "prioDefault",
       "forms": [{"string": "default", "kind": "keyword"}],
       "category": null},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "precMin [{\"string\": \"min\", \"kind\": \"keyword\"}]":
    [{"id": "precMin",
      "data":
      {"kind": "precMin",
       "forms": [{"string": "min", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Precedence/"}],
    "precMax [{\"string\": \"max\", \"kind\": \"keyword\"}]":
    [{"id": "precMax",
      "data":
      {"kind": "precMax",
       "forms": [{"string": "max", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Precedence/"}],
    "precLead [{\"string\": \"lead\", \"kind\": \"keyword\"}]":
    [{"id": "precLead",
      "data":
      {"kind": "precLead",
       "forms": [{"string": "lead", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Precedence/"}],
    "precArg [{\"string\": \"arg\", \"kind\": \"keyword\"}]":
    [{"id": "precArg",
      "data":
      {"kind": "precArg",
       "forms": [{"string": "arg", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Precedence/"}],
    "num.antiquot [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "num___antiquot",
      "data":
      {"kind": "num.antiquot",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Type-Classes/Instance-Declarations/"},
     {"id": "num___antiquot-next",
      "data":
      {"kind": "num.antiquot",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Precedence/"}],
    "ident.antiquot [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "ident___antiquot",
      "data":
      {"kind": "ident.antiquot",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Functions/"}],
    "coeSortNotation [{\"string\": \"↥\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "coeSortNotation",
      "data":
      {"kind": "coeSortNotation",
       "forms":
       [{"string": "↥", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Coercions/Coercing-to-Sorts/"}],
    "coeNotation [{\"string\": \"↑\", \"kind\": \"keyword\"}, {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "coeNotation",
      "data":
      {"kind": "coeNotation",
       "forms":
       [{"string": "↑", "kind": "keyword"}, {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "coeFunNotation [{\"string\": \"⇑\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "coeFunNotation",
      "data":
      {"kind": "coeFunNotation",
       "forms":
       [{"string": "⇑", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Coercions/Coercing-to-Function-Types/"}],
    "boolIfThenElse [{\"string\": \"bif\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"then\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"else\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "boolIfThenElse",
      "data":
      {"kind": "boolIfThenElse",
       "forms":
       [{"string": "bif", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "then", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "else", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Conditionals/"}],
    "Std.HashMap.«term_~m_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"~m\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Std___HashMap____FLQQ_term____m__FLQQ_",
      "data":
      {"kind": "Std.HashMap.«term_~m_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "~m", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Maps-and-Sets/"},
     {"id": "Std___HashMap____FLQQ_term____m__FLQQ_-next",
      "data":
      {"kind": "Std.HashMap.«term_~m_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "~m", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Std.DHashMap.«term_~m_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"~m\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Std___DHashMap____FLQQ_term____m__FLQQ_",
      "data":
      {"kind": "Std.DHashMap.«term_~m_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "~m", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Maps-and-Sets/"}],
    "Manual.FreeSyntax.more []":
    [{"id": "Manual___FreeSyntax___more-next-next",
      "data":
      {"kind": "Manual.FreeSyntax.more", "forms": [], "category": null},
      "address": "/Notations-and-Macros/Macros/"},
     {"id": "Manual___FreeSyntax___more-next",
      "data":
      {"kind": "Manual.FreeSyntax.more", "forms": [], "category": null},
      "address": "/Terms/Function-Application/"},
     {"id": "Manual___FreeSyntax___more",
      "data":
      {"kind": "Manual.FreeSyntax.more", "forms": [], "category": null},
      "address": "/Terms/Function-Application/"},
     {"id": "Manual___FreeSyntax___more-next-next-next",
      "data":
      {"kind": "Manual.FreeSyntax.more", "forms": [], "category": null},
      "address": "/Notations-and-Macros/Macros/"}],
    "Manual.FreeSyntax.embed [{\"string\": \"fun \", \"kind\": \"keyword\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \": \", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \" =>\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Manual___FreeSyntax___embed",
      "data":
      {"kind": "Manual.FreeSyntax.embed",
       "forms":
       [{"string": "fun ", "kind": "keyword"},
        {"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ": ", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": " =>", "kind": "keyword"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Functions/"}],
    "Manual.FreeSyntax.done []":
    [{"id": "Manual___FreeSyntax___done",
      "data":
      {"kind": "Manual.FreeSyntax.done", "forms": [], "category": null},
      "address": "/Notations-and-Macros/Macros/"},
     {"id": "Manual___FreeSyntax___done-next",
      "data":
      {"kind": "Manual.FreeSyntax.done", "forms": [], "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"},
     {"id": "Manual___FreeSyntax___done-next-next",
      "data":
      {"kind": "Manual.FreeSyntax.done", "forms": [], "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "List.«term_~_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"~\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "List____FLQQ_term______FLQQ_",
      "data":
      {"kind": "List.«term_~_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "~", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.«term_<:+_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"<:+\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "List____FLQQ_term__LT_________FLQQ_-next",
      "data":
      {"kind": "List.«term_<:+_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "<:+", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.«term_<:+:_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"<:+:\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "List____FLQQ_term__LT____________FLQQ_",
      "data":
      {"kind": "List.«term_<:+:_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "<:+:", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.«term_<+_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"<+\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "List____FLQQ_term__LT______FLQQ_",
      "data":
      {"kind": "List.«term_<+_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "<+", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Linked-Lists/"}],
    "List.«term_<+:_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"<+:\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "List____FLQQ_term__LT_________FLQQ_",
      "data":
      {"kind": "List.«term_<+:_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "<+:", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Linked-Lists/"}],
    "Lean.«term_Matches_|» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"matches\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean____FLQQ_term_Matches_____FLQQ_",
      "data":
      {"kind": "Lean.«term_Matches_|»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "matches", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.reduceCmd [{\"string\": \"#reduce\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"proofs\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"true\", \"kind\": \"keyword\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"types\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"true\", \"kind\": \"keyword\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___reduceCmd",
      "data":
      {"kind": "Lean.reduceCmd",
       "forms":
       [{"string": "#reduce", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "proofs", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "true", "kind": "keyword"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "types", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "true", "kind": "keyword"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.guardMsgsWhitespaceArg [{\"string\": \"normalized\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___guardMsgsWhitespaceArg-next-next-next",
      "data":
      {"kind": "Lean.guardMsgsWhitespaceArg",
       "forms": [{"string": "normalized", "kind": "keyword"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.guardMsgsWhitespaceArg [{\"string\": \"lax\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___guardMsgsWhitespaceArg-next-next",
      "data":
      {"kind": "Lean.guardMsgsWhitespaceArg",
       "forms": [{"string": "lax", "kind": "keyword"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.guardMsgsWhitespaceArg [{\"string\": \"exact\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___guardMsgsWhitespaceArg-next",
      "data":
      {"kind": "Lean.guardMsgsWhitespaceArg",
       "forms": [{"string": "exact", "kind": "keyword"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.guardMsgsSpecElt [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___guardMsgsSpecElt-next",
      "data":
      {"kind": "Lean.guardMsgsSpecElt",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.guardMsgsSpecElt [{\"string\": \"whitespace\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___guardMsgsSpecElt-next-next",
      "data":
      {"kind": "Lean.guardMsgsSpecElt",
       "forms":
       [{"string": "whitespace", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.guardMsgsSpecElt [{\"string\": \"ordering\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___guardMsgsSpecElt-next-next-next",
      "data":
      {"kind": "Lean.guardMsgsSpecElt",
       "forms":
       [{"string": "ordering", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.guardMsgsFilter [{\"string\": \"drop\", \"kind\": \"keyword\"},\n {\"string\": \"?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"warning\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___guardMsgsFilter-next-next-next",
      "data":
      {"kind": "Lean.guardMsgsFilter",
       "forms":
       [{"string": "drop", "kind": "keyword"},
        {"string": "?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "warning", "kind": "keyword"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.guardMsgsFilter [{\"string\": \"drop\", \"kind\": \"keyword\"},\n {\"string\": \"?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"info\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___guardMsgsFilter-next-next",
      "data":
      {"kind": "Lean.guardMsgsFilter",
       "forms":
       [{"string": "drop", "kind": "keyword"},
        {"string": "?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "info", "kind": "keyword"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.guardMsgsFilter [{\"string\": \"drop\", \"kind\": \"keyword\"},\n {\"string\": \"?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"error\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___guardMsgsFilter-next-next-next-next",
      "data":
      {"kind": "Lean.guardMsgsFilter",
       "forms":
       [{"string": "drop", "kind": "keyword"},
        {"string": "?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "error", "kind": "keyword"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.guardMsgsFilter [{\"string\": \"drop\", \"kind\": \"keyword\"},\n {\"string\": \"?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"all\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___guardMsgsFilter-next",
      "data":
      {"kind": "Lean.guardMsgsFilter",
       "forms":
       [{"string": "drop", "kind": "keyword"},
        {"string": "?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "all", "kind": "keyword"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.guardMsgsCmd [{\"string\": \"#guard_msgs\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"in\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___guardMsgsCmd",
      "data":
      {"kind": "Lean.guardMsgsCmd",
       "forms":
       [{"string": "#guard_msgs", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "in", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.PrettyPrinter.Delaborator.attrApp_delab_ [{\"string\": \"app_delab\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___PrettyPrinter___Delaborator___attrApp_delab_",
      "data":
      {"kind": "Lean.PrettyPrinter.Delaborator.attrApp_delab_",
       "forms":
       [{"string": "app_delab", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "Lean.Parser.commandUnseal__ [{\"string\": \"unseal\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___commandUnseal__",
      "data":
      {"kind": "Lean.Parser.commandUnseal__",
       "forms":
       [{"string": "unseal", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Parser.commandSeal__ [{\"string\": \"seal\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___commandSeal__",
      "data":
      {"kind": "Lean.Parser.commandSeal__",
       "forms":
       [{"string": "seal", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Parser.Termination.terminationBy [{\"string\": \"termination_by\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"structural\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Termination___terminationBy-next",
      "data":
      {"kind": "Lean.Parser.Termination.terminationBy",
       "forms":
       [{"string": "termination_by", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "structural", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Parser.Termination.terminationBy [{\"string\": \"termination_by\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Termination___terminationBy-next-next-next",
      "data":
      {"kind": "Lean.Parser.Termination.terminationBy",
       "forms":
       [{"string": "termination_by", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Parser.Term.typeAscription [{\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"[anonymous]\", \"kind\": \"literalIdent\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___typeAscription-next",
      "data":
      {"kind": "Lean.Parser.Term.typeAscription",
       "forms":
       [{"string": "(", "kind": "keyword"},
        {"string": "[anonymous]", "kind": "literalIdent"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Type-Ascription/"},
     {"id": "Lean___Parser___Term___typeAscription",
      "data":
      {"kind": "Lean.Parser.Term.typeAscription",
       "forms":
       [{"string": "(", "kind": "keyword"},
        {"string": "[anonymous]", "kind": "literalIdent"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Functions/"}],
    "Lean.Parser.Term.tuple [{\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"[anonymous]\", \"kind\": \"literalIdent\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___tuple",
      "data":
      {"kind": "Lean.Parser.Term.tuple",
       "forms":
       [{"string": "(", "kind": "keyword"},
        {"string": "[anonymous]", "kind": "literalIdent"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Basic-Types/Tuples/"}],
    "Lean.Parser.Term.syntheticHole [{\"string\": \"?\", \"kind\": \"keyword\"}, {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___syntheticHole",
      "data":
      {"kind": "Lean.Parser.Term.syntheticHole",
       "forms":
       [{"string": "?", "kind": "keyword"}, {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Holes/"}],
    "Lean.Parser.Term.syntheticHole [{\"string\": \"?\", \"kind\": \"keyword\"}, {\"string\": \"_\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___syntheticHole-next",
      "data":
      {"kind": "Lean.Parser.Term.syntheticHole",
       "forms":
       [{"string": "?", "kind": "keyword"},
        {"string": "_", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Holes/"}],
    "Lean.Parser.Term.subst [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"▸\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___subst",
      "data":
      {"kind": "Lean.Parser.Term.subst",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "▸", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Propositions/Propositional-Equality/"}],
    "Lean.Parser.Term.structInstField [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___structInstField-next",
      "data":
      {"kind": "Lean.Parser.Term.structInstField",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Lean.Parser.Term.structInstField [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___structInstField",
      "data":
      {"kind": "Lean.Parser.Term.structInstField",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Lean.Parser.Term.structInst [{\"string\": \"{\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"with\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \"}\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___structInst-next",
      "data":
      {"kind": "Lean.Parser.Term.structInst",
       "forms":
       [{"string": "{", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "with", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": "}", "kind": "keyword"}],
       "category": null},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Lean.Parser.Term.structInst [{\"string\": \"{\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"}\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___structInst",
      "data":
      {"kind": "Lean.Parser.Term.structInst",
       "forms":
       [{"string": "{", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "}", "kind": "keyword"}],
       "category": null},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Lean.Parser.Term.strictImplicitBinder [{\"string\": \"⦃\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"⦄\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___strictImplicitBinder-next-next",
      "data":
      {"kind": "Lean.Parser.Term.strictImplicitBinder",
       "forms":
       [{"string": "⦃", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "⦄", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Functions/"}],
    "Lean.Parser.Term.strictImplicitBinder [{\"string\": \"⦃\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"⦄\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___strictImplicitBinder",
      "data":
      {"kind": "Lean.Parser.Term.strictImplicitBinder",
       "forms":
       [{"string": "⦃", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "⦄", "kind": "keyword"}],
       "category": null},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Lean.Parser.Term.strictImplicitBinder [{\"string\": \"⦃\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"⦄\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___strictImplicitBinder-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.strictImplicitBinder",
       "forms":
       [{"string": "⦃", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "⦄", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Functions/"}],
    "Lean.Parser.Term.strictImplicitBinder [{\"string\": \"{\", \"kind\": \"keyword\"},\n {\"string\": \"{\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"}\", \"kind\": \"keyword\"},\n {\"string\": \"}\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___strictImplicitBinder-next",
      "data":
      {"kind": "Lean.Parser.Term.strictImplicitBinder",
       "forms":
       [{"string": "{", "kind": "keyword"},
        {"string": "{", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "}", "kind": "keyword"},
        {"string": "}", "kind": "keyword"}],
       "category": null},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Lean.Parser.Term.stateRefT [{\"string\": \"StateRefT\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___stateRefT",
      "data":
      {"kind": "Lean.Parser.Term.stateRefT",
       "forms":
       [{"string": "StateRefT", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address":
      "/Functors___-Monads-and--do--Notation/Varieties-of-Monads/"}],
    "Lean.Parser.Term.show [{\"string\": \"show\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"from\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___show",
      "data":
      {"kind": "Lean.Parser.Term.show",
       "forms":
       [{"string": "show", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "from", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Type-Ascription/"}],
    "Lean.Parser.Term.show [{\"string\": \"show\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"by\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___show-next",
      "data":
      {"kind": "Lean.Parser.Term.show",
       "forms":
       [{"string": "show", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "by", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Type-Ascription/"}],
    "Lean.Parser.Term.proj [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \".\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___proj",
      "data":
      {"kind": "Lean.Parser.Term.proj",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": ".", "kind": "keyword"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Function-Application/"}],
    "Lean.Parser.Term.pipeProj [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"|>.\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___pipeProj-next",
      "data":
      {"kind": "Lean.Parser.Term.pipeProj",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "|>.", "kind": "keyword"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Function-Application/"},
     {"id": "Lean___Parser___Term___pipeProj",
      "data":
      {"kind": "Lean.Parser.Term.pipeProj",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "|>.", "kind": "keyword"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Function-Application/"}],
    "Lean.Parser.Term.paren [{\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"[anonymous]\", \"kind\": \"literalIdent\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___paren",
      "data":
      {"kind": "Lean.Parser.Term.paren",
       "forms":
       [{"string": "(", "kind": "keyword"},
        {"string": "[anonymous]", "kind": "literalIdent"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Functions/"}],
    "Lean.Parser.Term.nomatch [{\"string\": \"nomatch\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___nomatch",
      "data":
      {"kind": "Lean.Parser.Term.nomatch",
       "forms":
       [{"string": "nomatch", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.Parser.Term.nofun [{\"string\": \"nofun\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___nofun",
      "data":
      {"kind": "Lean.Parser.Term.nofun",
       "forms": [{"string": "nofun", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.Parser.Term.namedPattern [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"@\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___namedPattern",
      "data":
      {"kind": "Lean.Parser.Term.namedPattern",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": "@", "kind": "keyword"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.Parser.Term.namedPattern [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"@\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___namedPattern-next",
      "data":
      {"kind": "Lean.Parser.Term.namedPattern",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": "@", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.Parser.Term.matchDiscr [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___matchDiscr",
      "data":
      {"kind": "Lean.Parser.Term.matchDiscr",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.Parser.Term.matchDiscr [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___matchDiscr-next",
      "data":
      {"kind": "Lean.Parser.Term.matchDiscr",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.Parser.Term.match [{\"string\": \"match\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"generalizing\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"motive\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"with\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"|\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")|*\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")*\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___match",
      "data":
      {"kind": "Lean.Parser.Term.match",
       "forms":
       [{"string": "match", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "generalizing", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "motive", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "with", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "|", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "…", "kind": "meta"},
        {"string": ")|*", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")*", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.Parser.Term.instBinder [{\"string\": \"[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___instBinder-next",
      "data":
      {"kind": "Lean.Parser.Term.instBinder",
       "forms":
       [{"string": "[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Functions/"}],
    "Lean.Parser.Term.instBinder [{\"string\": \"[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___instBinder-next-next",
      "data":
      {"kind": "Lean.Parser.Term.instBinder",
       "forms":
       [{"string": "[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Functions/"}],
    "Lean.Parser.Term.instBinder [{\"string\": \"[\", \"kind\": \"keyword\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___instBinder",
      "data":
      {"kind": "Lean.Parser.Term.instBinder",
       "forms":
       [{"string": "[", "kind": "keyword"},
        {"string": "(", "kind": "meta"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"}],
       "category": null},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Lean.Parser.Term.inaccessible [{\"string\": \".(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___inaccessible",
      "data":
      {"kind": "Lean.Parser.Term.inaccessible",
       "forms":
       [{"string": ".(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.Parser.Term.implicitBinder [{\"string\": \"{\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"}\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___implicitBinder",
      "data":
      {"kind": "Lean.Parser.Term.implicitBinder",
       "forms":
       [{"string": "{", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "}", "kind": "keyword"}],
       "category": null},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Lean.Parser.Term.implicitBinder [{\"string\": \"{\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"}\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___implicitBinder-next",
      "data":
      {"kind": "Lean.Parser.Term.implicitBinder",
       "forms":
       [{"string": "{", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "}", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Functions/"}],
    "Lean.Parser.Term.implicitBinder [{\"string\": \"{\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"}\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___implicitBinder-next-next",
      "data":
      {"kind": "Lean.Parser.Term.implicitBinder",
       "forms":
       [{"string": "{", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "}", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Functions/"}],
    "Lean.Parser.Term.hole [{\"string\": \"_\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___hole",
      "data":
      {"kind": "Lean.Parser.Term.hole",
       "forms": [{"string": "_", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Holes/"}],
    "Lean.Parser.Term.fun [{\"string\": \"fun\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___fun-next-next",
      "data":
      {"kind": "Lean.Parser.Term.fun",
       "forms":
       [{"string": "fun", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Functions/"},
     {"id": "Lean___Parser___Term___fun",
      "data":
      {"kind": "Lean.Parser.Term.fun",
       "forms":
       [{"string": "fun", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Functions/"},
     {"id": "Lean___Parser___Term___fun-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.fun",
       "forms":
       [{"string": "fun", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Functions/"}],
    "Lean.Parser.Term.fun [{\"string\": \"fun\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___fun-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.fun",
       "forms":
       [{"string": "fun", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Functions/"},
     {"id": "Lean___Parser___Term___fun-next",
      "data":
      {"kind": "Lean.Parser.Term.fun",
       "forms":
       [{"string": "fun", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Functions/"}],
    "Lean.Parser.Term.fun [{\"string\": \"fun\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"|\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")*\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___fun-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.fun",
       "forms":
       [{"string": "fun", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "|", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")*", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.Parser.Term.forall [{\"string\": \"∀\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___forall-next-next",
      "data":
      {"kind": "Lean.Parser.Term.forall",
       "forms":
       [{"string": "∀", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Propositions/Quantifiers/"}],
    "Lean.Parser.Term.forall [{\"string\": \"∀\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___forall",
      "data":
      {"kind": "Lean.Parser.Term.forall",
       "forms":
       [{"string": "∀", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Propositions/Quantifiers/"}],
    "Lean.Parser.Term.forall [{\"string\": \"forall\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___forall-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.forall",
       "forms":
       [{"string": "forall", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Propositions/Quantifiers/"}],
    "Lean.Parser.Term.forall [{\"string\": \"forall\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___forall-next",
      "data":
      {"kind": "Lean.Parser.Term.forall",
       "forms":
       [{"string": "forall", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Propositions/Quantifiers/"}],
    "Lean.Parser.Term.explicitBinder [{\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___explicitBinder",
      "data":
      {"kind": "Lean.Parser.Term.explicitBinder",
       "forms":
       [{"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Lean.Parser.Term.explicitBinder [{\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___explicitBinder-next",
      "data":
      {"kind": "Lean.Parser.Term.explicitBinder",
       "forms":
       [{"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___doSeqItem-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"while\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"do\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms":
       [{"string": "while", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "do", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"while\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"do\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms":
       [{"string": "while", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "do", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"unless\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"do\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms":
       [{"string": "unless", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "do", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"return\", \"kind\": \"keyword\"}]":
    [{"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms": [{"string": "return", "kind": "keyword"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"return\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms":
       [{"string": "return", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"repeat\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms":
       [{"string": "repeat", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"repeat\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"until\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms":
       [{"string": "repeat", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "until", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"match\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"),*\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"with\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"|\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")*\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms":
       [{"string": "match", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "meta"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "),*", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "with", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "|", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")*", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"let\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"←\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___doSeqItem-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms":
       [{"string": "let", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "←", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"let\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"←\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"|\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___doSeqItem-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms":
       [{"string": "let", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "←", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "|", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"let\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms":
       [{"string": "let", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"let\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"mut\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"←\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms":
       [{"string": "let", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "mut", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "←", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"let\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"mut\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms":
       [{"string": "let", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "mut", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"if\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"then\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"else\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms":
       [{"string": "if", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "then", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "else", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"for\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"in\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"),*\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"do\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms":
       [{"string": "for", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "meta"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "in", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "),*", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "do", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"continue\", \"kind\": \"keyword\"}]":
    [{"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms": [{"string": "continue", "kind": "keyword"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doSeqItem [{\"string\": \"break\", \"kind\": \"keyword\"}]":
    [{"id":
      "Lean___Parser___Term___doSeqItem-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.doSeqItem",
       "forms": [{"string": "break", "kind": "keyword"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doReassignArrow [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"←\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___doReassignArrow",
      "data":
      {"kind": "Lean.Parser.Term.doReassignArrow",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "←", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doReassignArrow [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"←\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"|\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___doReassignArrow-next",
      "data":
      {"kind": "Lean.Parser.Term.doReassignArrow",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "←", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "|", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.doReassign [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___doReassign-next",
      "data":
      {"kind": "Lean.Parser.Term.doReassign",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"},
     {"id": "Lean___Parser___Term___doReassign",
      "data":
      {"kind": "Lean.Parser.Term.doReassign",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.do [{\"string\": \"do\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___do",
      "data":
      {"kind": "Lean.Parser.Term.do",
       "forms":
       [{"string": "do", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Functors___-Monads-and--do--Notation/Syntax/"}],
    "Lean.Parser.Term.depArrow [{\"string\": \"⦃\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"⦄\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"→\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Term___depArrow-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.depArrow",
       "forms":
       [{"string": "⦃", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "⦄", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "→", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Function-Types/"}],
    "Lean.Parser.Term.depArrow [{\"string\": \"{\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"}\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"→\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___depArrow-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.depArrow",
       "forms":
       [{"string": "{", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "}", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "→", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Function-Types/"}],
    "Lean.Parser.Term.depArrow [{\"string\": \"[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"→\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___depArrow-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.depArrow",
       "forms":
       [{"string": "[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "→", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Function-Types/"}],
    "Lean.Parser.Term.depArrow [{\"string\": \"[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"→\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___depArrow-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.depArrow",
       "forms":
       [{"string": "[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "→", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Function-Types/"}],
    "Lean.Parser.Term.depArrow [{\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"→\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___depArrow-next",
      "data":
      {"kind": "Lean.Parser.Term.depArrow",
       "forms":
       [{"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "→", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Function-Types/"},
     {"id": "Lean___Parser___Term___depArrow",
      "data":
      {"kind": "Lean.Parser.Term.depArrow",
       "forms":
       [{"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "→", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Function-Types/"}],
    "Lean.Parser.Term.depArrow [{\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"→\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___depArrow-next-next",
      "data":
      {"kind": "Lean.Parser.Term.depArrow",
       "forms":
       [{"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "→", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Function-Types/"}],
    "Lean.Parser.Term.depArrow [{\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"by\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"→\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___depArrow-next-next-next",
      "data":
      {"kind": "Lean.Parser.Term.depArrow",
       "forms":
       [{"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "by", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "→", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Function-Types/"}],
    "Lean.Parser.Term.byTactic [{\"string\": \"by\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___byTactic-next",
      "data":
      {"kind": "Lean.Parser.Term.byTactic",
       "forms":
       [{"string": "by", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Tactic-Proofs/Running-Tactics/"}],
    "Lean.Parser.Term.byTactic [{\"string\": \"by\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"{\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"}\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___byTactic-next-next",
      "data":
      {"kind": "Lean.Parser.Term.byTactic",
       "forms":
       [{"string": "by", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "{", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "}", "kind": "keyword"}],
       "category": null},
      "address": "/Tactic-Proofs/Running-Tactics/"}],
    "Lean.Parser.Term.borrowed [{\"string\": \"@&\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___borrowed",
      "data":
      {"kind": "Lean.Parser.Term.borrowed",
       "forms":
       [{"string": "@&", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Run-Time-Code/Foreign-Function-Interface/"}],
    "Lean.Parser.Term.attributes [{\"string\": \"@[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___attributes-next",
      "data":
      {"kind": "Lean.Parser.Term.attributes",
       "forms":
       [{"string": "@[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"}],
       "category": null},
      "address": "/Attributes/"}],
    "Lean.Parser.Term.attrKind [{\"string\": \"scoped\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___attrKind-next-next",
      "data":
      {"kind": "Lean.Parser.Term.attrKind",
       "forms": [{"string": "scoped", "kind": "keyword"}],
       "category": null},
      "address": "/Attributes/"}],
    "Lean.Parser.Term.attrKind [{\"string\": \"local\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___attrKind-next",
      "data":
      {"kind": "Lean.Parser.Term.attrKind",
       "forms": [{"string": "local", "kind": "keyword"}],
       "category": null},
      "address": "/Attributes/"}],
    "Lean.Parser.Term.attrKind []":
    [{"id": "Lean___Parser___Term___attrKind",
      "data":
      {"kind": "Lean.Parser.Term.attrKind", "forms": [], "category": null},
      "address": "/Attributes/"}],
    "Lean.Parser.Term.attrInstance [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___attrInstance-next",
      "data":
      {"kind": "Lean.Parser.Term.attrInstance",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Attributes/"}],
    "Lean.Parser.Term.arrow [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"→\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Term___arrow",
      "data":
      {"kind": "Lean.Parser.Term.arrow",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "→", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Terms/Function-Types/"}],
    "Lean.Parser.Term.anonymousCtor [{\"string\": \"⟨\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"⟩\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Term___anonymousCtor",
      "data":
      {"kind": "Lean.Parser.Term.anonymousCtor",
       "forms":
       [{"string": "⟨", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "⟩", "kind": "keyword"}],
       "category": null},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Lean.Parser.Tactic.simp [{\"string\": \"simp\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"only\", \"kind\": \"keyword\"},\n {\"string\": \"?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"[\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"]\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"at\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Tactic___simp",
      "data":
      {"kind": "Lean.Parser.Tactic.simp",
       "forms":
       [{"string": "simp", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "only", "kind": "keyword"},
        {"string": "?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "[", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "]", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "at", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/The-Simplifier/Invoking-the-Simplifier/"}],
    "Lean.Parser.Tactic.optConfig [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Tactic___optConfig-next",
      "data":
      {"kind": "Lean.Parser.Tactic.optConfig",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.configItem [{\"string\": \"-\", \"kind\": \"keyword\"}, {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Tactic___configItem-next-next",
      "data":
      {"kind": "Lean.Parser.Tactic.configItem",
       "forms":
       [{"string": "-", "kind": "keyword"}, {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.configItem [{\"string\": \"+\", \"kind\": \"keyword\"}, {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Tactic___configItem-next",
      "data":
      {"kind": "Lean.Parser.Tactic.configItem",
       "forms":
       [{"string": "+", "kind": "keyword"}, {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.configItem [{\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Tactic___configItem-next-next-next",
      "data":
      {"kind": "Lean.Parser.Tactic.configItem",
       "forms":
       [{"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.configItem [{\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"config\", \"kind\": \"literalIdent\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Tactic___configItem-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Tactic.configItem",
       "forms":
       [{"string": "(", "kind": "keyword"},
        {"string": "config", "kind": "literalIdent"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Tactic-Proofs/The-Tactic-Language/"}],
    "Lean.Parser.Tactic.Conv.enterArg [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Tactic___Conv___enterArg-next",
      "data":
      {"kind": "Lean.Parser.Tactic.Conv.enterArg",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"},
     {"id": "Lean___Parser___Tactic___Conv___enterArg-next-next-next",
      "data":
      {"kind": "Lean.Parser.Tactic.Conv.enterArg",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Tactic.Conv.enterArg [{\"string\": \"@\", \"kind\": \"keyword\"}, {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Tactic___Conv___enterArg-next-next",
      "data":
      {"kind": "Lean.Parser.Tactic.Conv.enterArg",
       "forms":
       [{"string": "@", "kind": "keyword"}, {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Tactic-Proofs/Targeted-Rewriting-with--conv/"}],
    "Lean.Parser.Syntax.unary [{\"string\": \"optional\", \"kind\": \"literalIdent\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Syntax___unary",
      "data":
      {"kind": "Lean.Parser.Syntax.unary",
       "forms":
       [{"string": "optional", "kind": "literalIdent"},
        {"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.unary [{\"string\": \"many1\", \"kind\": \"literalIdent\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Syntax___unary-next-next",
      "data":
      {"kind": "Lean.Parser.Syntax.unary",
       "forms":
       [{"string": "many1", "kind": "literalIdent"},
        {"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.unary [{\"string\": \"many\", \"kind\": \"literalIdent\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Syntax___unary-next",
      "data":
      {"kind": "Lean.Parser.Syntax.unary",
       "forms":
       [{"string": "many", "kind": "literalIdent"},
        {"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.subPrio [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"-\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Syntax___subPrio",
      "data":
      {"kind": "Lean.Parser.Syntax.subPrio",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "-", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "Lean.Parser.Syntax.subPrec [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"-\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Syntax___subPrec",
      "data":
      {"kind": "Lean.Parser.Syntax.subPrec",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "-", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Precedence/"}],
    "Lean.Parser.Syntax.sepBy1 [{\"string\": \"sepBy1(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"allowTrailingSep\", \"kind\": \"keyword\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Syntax___sepBy1-next-next",
      "data":
      {"kind": "Lean.Parser.Syntax.sepBy1",
       "forms":
       [{"string": "sepBy1(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "allowTrailingSep", "kind": "keyword"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.sepBy1 [{\"string\": \"sepBy1(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Syntax___sepBy1-next",
      "data":
      {"kind": "Lean.Parser.Syntax.sepBy1",
       "forms":
       [{"string": "sepBy1(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.sepBy1 [{\"string\": \"sepBy1(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Syntax___sepBy1",
      "data":
      {"kind": "Lean.Parser.Syntax.sepBy1",
       "forms":
       [{"string": "sepBy1(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.sepBy [{\"string\": \"sepBy(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"allowTrailingSep\", \"kind\": \"keyword\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Syntax___sepBy-next-next",
      "data":
      {"kind": "Lean.Parser.Syntax.sepBy",
       "forms":
       [{"string": "sepBy(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "allowTrailingSep", "kind": "keyword"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.sepBy [{\"string\": \"sepBy(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Syntax___sepBy-next",
      "data":
      {"kind": "Lean.Parser.Syntax.sepBy",
       "forms":
       [{"string": "sepBy(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.sepBy [{\"string\": \"sepBy(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Syntax___sepBy",
      "data":
      {"kind": "Lean.Parser.Syntax.sepBy",
       "forms":
       [{"string": "sepBy(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.paren [{\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Syntax___paren",
      "data":
      {"kind": "Lean.Parser.Syntax.paren",
       "forms":
       [{"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.nonReserved [{\"string\": \"&\", \"kind\": \"keyword\"}, {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Syntax___nonReserved",
      "data":
      {"kind": "Lean.Parser.Syntax.nonReserved",
       "forms":
       [{"string": "&", "kind": "keyword"}, {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.cat [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Syntax___cat",
      "data":
      {"kind": "Lean.Parser.Syntax.cat",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.binary [{\"string\": \"orelse\", \"kind\": \"literalIdent\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Syntax___binary",
      "data":
      {"kind": "Lean.Parser.Syntax.binary",
       "forms":
       [{"string": "orelse", "kind": "literalIdent"},
        {"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.atom [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Syntax___atom",
      "data":
      {"kind": "Lean.Parser.Syntax.atom",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Syntax.addPrio [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"+\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Syntax___addPrio",
      "data":
      {"kind": "Lean.Parser.Syntax.addPrio",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "+", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "Lean.Parser.Syntax.addPrec [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"+\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Syntax___addPrec",
      "data":
      {"kind": "Lean.Parser.Syntax.addPrec",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "+", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Precedence/"}],
    "Lean.Parser.Module.prelude [{\"string\": \"prelude\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Module___prelude-next",
      "data":
      {"kind": "Lean.Parser.Module.prelude",
       "forms": [{"string": "prelude", "kind": "keyword"}],
       "category": null},
      "address": "/Source-Files-and-Modules/"}],
    "Lean.Parser.Module.module [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Module___module-next",
      "data":
      {"kind": "Lean.Parser.Module.module",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Source-Files-and-Modules/"}],
    "Lean.Parser.Module.import [{\"string\": \"import\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Module___import-next",
      "data":
      {"kind": "Lean.Parser.Module.import",
       "forms":
       [{"string": "import", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Source-Files-and-Modules/"}],
    "Lean.Parser.Module.header [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Module___header-next",
      "data":
      {"kind": "Lean.Parser.Module.header",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Source-Files-and-Modules/"}],
    "Lean.Parser.Module.header [{\"string\": \"prelude\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Module___header-next-next",
      "data":
      {"kind": "Lean.Parser.Module.header",
       "forms":
       [{"string": "prelude", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Source-Files-and-Modules/"}],
    "Lean.Parser.Command.where [{\"string\": \"#where\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Command___where",
      "data":
      {"kind": "Lean.Parser.Command.where",
       "forms": [{"string": "#where", "kind": "keyword"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.version [{\"string\": \"#version\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Command___version",
      "data":
      {"kind": "Lean.Parser.Command.version",
       "forms": [{"string": "#version", "kind": "keyword"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.variable [{\"string\": \"variable\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___variable",
      "data":
      {"kind": "Lean.Parser.Command.variable",
       "forms":
       [{"string": "variable", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.universe [{\"string\": \"universe\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___universe-next",
      "data":
      {"kind": "Lean.Parser.Command.universe",
       "forms":
       [{"string": "universe", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/The-Type-System/Universes/"}],
    "Lean.Parser.Command.synth [{\"string\": \"#synth\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___synth",
      "data":
      {"kind": "Lean.Parser.Command.synth",
       "forms":
       [{"string": "#synth", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.syntaxCat [{\"string\": \"declare_syntax_cat\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"behavior\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___syntaxCat",
      "data":
      {"kind": "Lean.Parser.Command.syntaxCat",
       "forms":
       [{"string": "declare_syntax_cat", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "behavior", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Command.syntax [{\"string\": \"syntax\", \"kind\": \"keyword\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"name\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"priority\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"*\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___syntax",
      "data":
      {"kind": "Lean.Parser.Command.syntax",
       "forms":
       [{"string": "syntax", "kind": "keyword"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "name", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "priority", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "*", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Defining-New-Syntax/"}],
    "Lean.Parser.Command.section [{\"string\": \"section\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___section",
      "data":
      {"kind": "Lean.Parser.Command.section",
       "forms":
       [{"string": "section", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.printEqns [{\"string\": \"#print\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"equations\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___printEqns",
      "data":
      {"kind": "Lean.Parser.Command.printEqns",
       "forms":
       [{"string": "#print", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "equations", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.printEqns [{\"string\": \"#print\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"eqns\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___printEqns-next",
      "data":
      {"kind": "Lean.Parser.Command.printEqns",
       "forms":
       [{"string": "#print", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "eqns", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.printAxioms [{\"string\": \"#print\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"axioms\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___printAxioms",
      "data":
      {"kind": "Lean.Parser.Command.printAxioms",
       "forms":
       [{"string": "#print", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "axioms", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.print [{\"string\": \"#print\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___print",
      "data":
      {"kind": "Lean.Parser.Command.print",
       "forms":
       [{"string": "#print", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Interacting-with-Lean/"},
     {"id": "Lean___Parser___Command___print-next",
      "data":
      {"kind": "Lean.Parser.Command.print",
       "forms":
       [{"string": "#print", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.optDeriving [{\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"deriving\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___optDeriving-next",
      "data":
      {"kind": "Lean.Parser.Command.optDeriving",
       "forms":
       [{"string": "(", "kind": "meta"},
        {"string": "deriving", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Type-Classes/Deriving-Instances/"}],
    "Lean.Parser.Command.optDeclSig [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___optDeclSig",
      "data":
      {"kind": "Lean.Parser.Command.optDeclSig",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Lean.Parser.Command.openSimple [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___openSimple",
      "data":
      {"kind": "Lean.Parser.Command.openSimple",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.openScoped [{\"string\": \"scoped\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___openScoped",
      "data":
      {"kind": "Lean.Parser.Command.openScoped",
       "forms":
       [{"string": "scoped", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.openRenaming [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"renaming\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"→\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"),*\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___openRenaming",
      "data":
      {"kind": "Lean.Parser.Command.openRenaming",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "renaming", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "→", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "),*", "kind": "meta"}],
       "category": null},
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.openOnly [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Command___openOnly",
      "data":
      {"kind": "Lean.Parser.Command.openOnly",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.openHiding [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"hiding\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___openHiding",
      "data":
      {"kind": "Lean.Parser.Command.openHiding",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "hiding", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.open [{\"string\": \"open\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___open",
      "data":
      {"kind": "Lean.Parser.Command.open",
       "forms":
       [{"string": "open", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.notation [{\"string\": \"notation\", \"kind\": \"keyword\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"name\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"priority\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___notation",
      "data":
      {"kind": "Lean.Parser.Command.notation",
       "forms":
       [{"string": "notation", "kind": "keyword"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "name", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "priority", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Notations/"}],
    "Lean.Parser.Command.namespace [{\"string\": \"namespace\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___namespace",
      "data":
      {"kind": "Lean.Parser.Command.namespace",
       "forms":
       [{"string": "namespace", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.mutual [{\"string\": \"mutual\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"end\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Command___mutual",
      "data":
      {"kind": "Lean.Parser.Command.mutual",
       "forms":
       [{"string": "mutual", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "end", "kind": "keyword"}],
       "category": null},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Parser.Command.mixfix [{\"string\": \"prefix\", \"kind\": \"keyword\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"name\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"priority\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___mixfix-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.mixfix",
       "forms":
       [{"string": "prefix", "kind": "keyword"},
        {"string": ":", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "name", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "priority", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Custom-Operators/"}],
    "Lean.Parser.Command.mixfix [{\"string\": \"postfix\", \"kind\": \"keyword\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"name\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"priority\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___mixfix-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.mixfix",
       "forms":
       [{"string": "postfix", "kind": "keyword"},
        {"string": ":", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "name", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "priority", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Custom-Operators/"}],
    "Lean.Parser.Command.mixfix [{\"string\": \"infixr\", \"kind\": \"keyword\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"name\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"priority\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___mixfix-next-next",
      "data":
      {"kind": "Lean.Parser.Command.mixfix",
       "forms":
       [{"string": "infixr", "kind": "keyword"},
        {"string": ":", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "name", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "priority", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Custom-Operators/"}],
    "Lean.Parser.Command.mixfix [{\"string\": \"infixl\", \"kind\": \"keyword\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"name\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"priority\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___mixfix-next",
      "data":
      {"kind": "Lean.Parser.Command.mixfix",
       "forms":
       [{"string": "infixl", "kind": "keyword"},
        {"string": ":", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "name", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "priority", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Custom-Operators/"}],
    "Lean.Parser.Command.mixfix [{\"string\": \"infix\", \"kind\": \"keyword\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"name\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"priority\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___mixfix",
      "data":
      {"kind": "Lean.Parser.Command.mixfix",
       "forms":
       [{"string": "infix", "kind": "keyword"},
        {"string": ":", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "name", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "priority", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Custom-Operators/"}],
    "Lean.Parser.Command.macro_rules [{\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"@[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"macro_rules\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"kind\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"|\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"`(\", \"kind\": \"keyword\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"meta\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"|\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")*\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___macro_rules",
      "data":
      {"kind": "Lean.Parser.Command.macro_rules",
       "forms":
       [{"string": "(", "kind": "meta"},
        {"string": "@[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "macro_rules", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "kind", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "|", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "`(", "kind": "keyword"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "meta"},
        {"string": "…", "kind": "meta"},
        {"string": "|", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ")", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")*", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Parser.Command.macroArg [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___macroArg-next",
      "data":
      {"kind": "Lean.Parser.Command.macroArg",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Parser.Command.macroArg [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___macroArg-next-next",
      "data":
      {"kind": "Lean.Parser.Command.macroArg",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Parser.Command.macro [{\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"@[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"macro\", \"kind\": \"keyword\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"name\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"priority\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___macro",
      "data":
      {"kind": "Lean.Parser.Command.macro",
       "forms":
       [{"string": "(", "kind": "meta"},
        {"string": "@[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "macro", "kind": "keyword"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "name", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "priority", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Parser.Command.instance [{\"string\": \"instance\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"priority\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___instance-next",
      "data":
      {"kind": "Lean.Parser.Command.instance",
       "forms":
       [{"string": "instance", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "priority", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "Lean.Parser.Command.instance [{\"string\": \"instance\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"priority\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___instance-next-next",
      "data":
      {"kind": "Lean.Parser.Command.instance",
       "forms":
       [{"string": "instance", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "priority", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "Lean.Parser.Command.instance [{\"string\": \"instance\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"priority\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"|\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")*\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___instance-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.instance",
       "forms":
       [{"string": "instance", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "priority", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "|", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")*", "kind": "meta"}],
       "category": null},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "Lean.Parser.Command.initialize [{\"string\": \"initialize\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___initialize",
      "data":
      {"kind": "Lean.Parser.Command.initialize",
       "forms":
       [{"string": "initialize", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Elaboration-and-Compilation/"}],
    "Lean.Parser.Command.initialize [{\"string\": \"initialize\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"←\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___initialize-next",
      "data":
      {"kind": "Lean.Parser.Command.initialize",
       "forms":
       [{"string": "initialize", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "←", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Elaboration-and-Compilation/"}],
    "Lean.Parser.Command.initialize [{\"string\": \"builtin_initialize\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___initialize-next-next",
      "data":
      {"kind": "Lean.Parser.Command.initialize",
       "forms":
       [{"string": "builtin_initialize", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Elaboration-and-Compilation/"}],
    "Lean.Parser.Command.initialize [{\"string\": \"builtin_initialize\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"←\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___initialize-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.initialize",
       "forms":
       [{"string": "builtin_initialize", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "←", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Elaboration-and-Compilation/"}],
    "Lean.Parser.Command.in [{\"string\": \"in\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___in",
      "data":
      {"kind": "Lean.Parser.Command.in",
       "forms":
       [{"string": "in", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.identPrec [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___identPrec",
      "data":
      {"kind": "Lean.Parser.Command.identPrec",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Notations/"}],
    "Lean.Parser.Command.grindPattern [{\"string\": \"grind_pattern\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___grindPattern",
      "data":
      {"kind": "Lean.Parser.Command.grindPattern",
       "forms":
       [{"string": "grind_pattern", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/The--grind--tactic/E___matching/"}],
    "Lean.Parser.Command.export [{\"string\": \"export\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Command___export",
      "data":
      {"kind": "Lean.Parser.Command.export",
       "forms":
       [{"string": "export", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"}],
       "category": null},
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.evalBang [{\"string\": \"#eval!\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___evalBang",
      "data":
      {"kind": "Lean.Parser.Command.evalBang",
       "forms":
       [{"string": "#eval!", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.eval [{\"string\": \"#eval\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___eval",
      "data":
      {"kind": "Lean.Parser.Command.eval",
       "forms":
       [{"string": "#eval", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.eraseAttr [{\"string\": \"-\", \"kind\": \"keyword\"}, {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___eraseAttr-next",
      "data":
      {"kind": "Lean.Parser.Command.eraseAttr",
       "forms":
       [{"string": "-", "kind": "keyword"}, {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Attributes/"}],
    "Lean.Parser.Command.end [{\"string\": \"end\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Command___end",
      "data":
      {"kind": "Lean.Parser.Command.end",
       "forms": [{"string": "end", "kind": "keyword"}],
       "category": null},
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.end [{\"string\": \"end\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___end-next",
      "data":
      {"kind": "Lean.Parser.Command.end",
       "forms":
       [{"string": "end", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Namespaces-and-Sections/"}],
    "Lean.Parser.Command.elab_rules [{\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"@[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"elab_rules\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"(\", \"kind\": \"keyword\"},\n {\"string\": \"kind\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"<=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"|\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"`(\", \"kind\": \"keyword\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"meta\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"|\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \")\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")*\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___elab_rules",
      "data":
      {"kind": "Lean.Parser.Command.elab_rules",
       "forms":
       [{"string": "(", "kind": "meta"},
        {"string": "@[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "elab_rules", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "(", "kind": "keyword"},
        {"string": "kind", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "<=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "|", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "`(", "kind": "keyword"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "meta"},
        {"string": "…", "kind": "meta"},
        {"string": "|", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ")", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")*", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Elaborators/"}],
    "Lean.Parser.Command.docComment [{\"string\": \"/--\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"...\\n    -/\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Command___docComment",
      "data":
      {"kind": "Lean.Parser.Command.docComment",
       "forms":
       [{"string": "/--", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "...\n    -/", "kind": "keyword"}],
       "category": null},
      "address": "/Definitions/Modifiers/"}],
    "Lean.Parser.Command.deriving [{\"string\": \"deriving\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"instance\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"for\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___deriving-next",
      "data":
      {"kind": "Lean.Parser.Command.deriving",
       "forms":
       [{"string": "deriving", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "instance", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "for", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Type-Classes/Deriving-Instances/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"theorem\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "theorem", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Theorems/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"theorem\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "theorem", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Theorems/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"theorem\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"|\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")*\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "theorem", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "|", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")*", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Theorems/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"opaque\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "opaque", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Definitions/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"opaque\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "opaque", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Definitions/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"example\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "example", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Example-Declarations/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"example\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "example", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Example-Declarations/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"example\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"|\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")*\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "example", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "|", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")*", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Example-Declarations/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"def\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___declaration-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "def", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Definitions/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"def\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___declaration-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "def", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Definitions/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"def\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"|\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")*\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___declaration-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "def", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "|", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")*", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Definitions/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"class\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"inductive\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"|\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \")*\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"deriving\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "class", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "inductive", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "|", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ")*", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "deriving", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Type-Classes/Class-Declarations/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"abbrev\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "abbrev", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Definitions/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"abbrev\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "abbrev", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Definitions/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"abbrev\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"|\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"=>\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")*\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "abbrev", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "|", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "=>", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")*", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Definitions/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"structure\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"extends\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"::\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"deriving\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___declaration-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "structure", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "extends", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ")?", "kind": "meta"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "::", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "deriving", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"inductive\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"|\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \")*\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"deriving\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___declaration",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "inductive", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "|", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ")*", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "deriving", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/The-Type-System/Inductive-Types/"}],
    "Lean.Parser.Command.declaration [{\"string\": \"class\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"extends\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"::\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"deriving\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Command___declaration-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Command.declaration",
       "forms":
       [{"string": "class", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "extends", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": ")?", "kind": "meta"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "::", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "deriving", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Type-Classes/Class-Declarations/"}],
    "Lean.Parser.Command.declSig [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___declSig",
      "data":
      {"kind": "Lean.Parser.Command.declSig",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Lean.Parser.Command.declModifiers [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"noncomputable\", \"kind\": \"keyword\"},\n {\"string\": \"?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"unsafe\", \"kind\": \"keyword\"},\n {\"string\": \"?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"partial\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"|\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"nonrec\", \"kind\": \"keyword\"},\n {\"string\": \")\", \"kind\": \"meta\"},\n {\"string\": \"?\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___declModifiers",
      "data":
      {"kind": "Lean.Parser.Command.declModifiers",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "noncomputable", "kind": "keyword"},
        {"string": "?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "unsafe", "kind": "keyword"},
        {"string": "?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "partial", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "|", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "nonrec", "kind": "keyword"},
        {"string": ")", "kind": "meta"},
        {"string": "?", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Modifiers/"}],
    "Lean.Parser.Command.declId [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___declId",
      "data":
      {"kind": "Lean.Parser.Command.declId",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Lean.Parser.Command.declId [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \".{\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \",\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"}\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Command___declId-next",
      "data":
      {"kind": "Lean.Parser.Command.declId",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": ".{", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": ",", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "}", "kind": "keyword"}],
       "category": null},
      "address": "/Definitions/Headers-and-Signatures/"}],
    "Lean.Parser.Command.check_failure [{\"string\": \"#check_failure\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___check_failure",
      "data":
      {"kind": "Lean.Parser.Command.check_failure",
       "forms":
       [{"string": "#check_failure", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.check [{\"string\": \"#check\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___check",
      "data":
      {"kind": "Lean.Parser.Command.check",
       "forms":
       [{"string": "#check", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Interacting-with-Lean/"}],
    "Lean.Parser.Command.axiom [{\"string\": \"axiom\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___axiom-next",
      "data":
      {"kind": "Lean.Parser.Command.axiom",
       "forms":
       [{"string": "axiom", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Axioms/"}],
    "Lean.Parser.Command.attribute [{\"string\": \"attribute\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Command___attribute",
      "data":
      {"kind": "Lean.Parser.Command.attribute",
       "forms":
       [{"string": "attribute", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Attributes/"}],
    "Lean.Parser.Attr.wf_preprocess [{\"string\": \"wf_preprocess\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Attr___wf_preprocess",
      "data":
      {"kind": "Lean.Parser.Attr.wf_preprocess",
       "forms": [{"string": "wf_preprocess", "kind": "keyword"}],
       "category": null},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"term_elab\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms":
       [{"string": "term_elab", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Elaborators/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"tactic\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms":
       [{"string": "tactic", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Elaborators/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"symm\", \"kind\": \"keyword\"}]":
    [{"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms": [{"string": "symm", "kind": "keyword"}],
       "category": null},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"semireducible\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Attr___simple-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms": [{"string": "semireducible", "kind": "keyword"}],
       "category": null},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"refl\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Attr___simple-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms": [{"string": "refl", "kind": "keyword"}],
       "category": null},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"reducible\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Attr___simple-next",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms": [{"string": "reducible", "kind": "keyword"}],
       "category": null},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"pp_nodot\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Attr___simple-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms": [{"string": "pp_nodot", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Function-Application/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"match_pattern\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Attr___simple-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms": [{"string": "match_pattern", "kind": "keyword"}],
       "category": null},
      "address": "/Terms/Pattern-Matching/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"irreducible\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Attr___simple-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms": [{"string": "irreducible", "kind": "keyword"}],
       "category": null},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"induction_eliminator\", \"kind\": \"keyword\"}]":
    [{"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms": [{"string": "induction_eliminator", "kind": "keyword"}],
       "category": null},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"implemented_by\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Attr___simple",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms":
       [{"string": "implemented_by", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Definitions/Recursive-Definitions/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"delab\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms":
       [{"string": "delab", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"default_target\", \"kind\": \"keyword\"}]":
    [{"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms": [{"string": "default_target", "kind": "keyword"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"default_script\", \"kind\": \"keyword\"}]":
    [{"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms": [{"string": "default_script", "kind": "keyword"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"command_elab\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms":
       [{"string": "command_elab", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Elaborators/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"cases_eliminator\", \"kind\": \"keyword\"}]":
    [{"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms": [{"string": "cases_eliminator", "kind": "keyword"}],
       "category": null},
      "address": "/Tactic-Proofs/Tactic-Reference/"}],
    "Lean.Parser.Attr.simple [{\"string\": \"app_unexpander\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id":
      "Lean___Parser___Attr___simple-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simple",
       "forms":
       [{"string": "app_unexpander", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Extending-Lean___s-Output/"}],
    "Lean.Parser.Attr.simp [{\"string\": \"simp\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Attr___simp",
      "data":
      {"kind": "Lean.Parser.Attr.simp",
       "forms": [{"string": "simp", "kind": "keyword"}],
       "category": null},
      "address": "/The-Simplifier/Simp-sets/"}],
    "Lean.Parser.Attr.simp [{\"string\": \"simp\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"↓\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"←\", \"kind\": \"keyword\"},\n {\"string\": \"?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"|\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"<-\", \"kind\": \"keyword\"},\n {\"string\": \"?\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Attr___simp-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simp",
       "forms":
       [{"string": "simp", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "↓", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "←", "kind": "keyword"},
        {"string": "?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "|", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "<-", "kind": "keyword"},
        {"string": "?", "kind": "meta"},
        {"string": ")", "kind": "meta"}],
       "category": null},
      "address": "/The-Simplifier/Simp-sets/"}],
    "Lean.Parser.Attr.simp [{\"string\": \"simp\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"↑\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"←\", \"kind\": \"keyword\"},\n {\"string\": \"?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"|\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"<-\", \"kind\": \"keyword\"},\n {\"string\": \"?\", \"kind\": \"meta\"},\n {\"string\": \")\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Attr___simp-next",
      "data":
      {"kind": "Lean.Parser.Attr.simp",
       "forms":
       [{"string": "simp", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "↑", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "←", "kind": "keyword"},
        {"string": "?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "|", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "<-", "kind": "keyword"},
        {"string": "?", "kind": "meta"},
        {"string": ")", "kind": "meta"}],
       "category": null},
      "address": "/The-Simplifier/Simp-sets/"}],
    "Lean.Parser.Attr.simp [{\"string\": \"simp\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Attr___simp-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.simp",
       "forms":
       [{"string": "simp", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/The-Simplifier/Simp-sets/"}],
    "Lean.Parser.Attr.macro [{\"string\": \"macro\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Attr___macro",
      "data":
      {"kind": "Lean.Parser.Attr.macro",
       "forms":
       [{"string": "macro", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Notations-and-Macros/Macros/"}],
    "Lean.Parser.Attr.instance [{\"string\": \"instance\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Attr___instance",
      "data":
      {"kind": "Lean.Parser.Attr.instance",
       "forms":
       [{"string": "instance", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "Lean.Parser.Attr.grindMod [{\"string\": \"→\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Attr___grindMod-next",
      "data":
      {"kind": "Lean.Parser.Attr.grindMod",
       "forms": [{"string": "→", "kind": "keyword"}],
       "category": null},
      "address": "/The--grind--tactic/E___matching/"}],
    "Lean.Parser.Attr.grindMod [{\"string\": \"←\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Attr___grindMod-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.grindMod",
       "forms": [{"string": "←", "kind": "keyword"}],
       "category": null},
      "address": "/The--grind--tactic/E___matching/"}],
    "Lean.Parser.Attr.grindMod [{\"string\": \"←\", \"kind\": \"keyword\"}, {\"string\": \"=\", \"kind\": \"keyword\"}]":
    [{"id":
      "Lean___Parser___Attr___grindMod-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.grindMod",
       "forms":
       [{"string": "←", "kind": "keyword"},
        {"string": "=", "kind": "keyword"}],
       "category": null},
      "address": "/The--grind--tactic/E___matching/"}],
    "Lean.Parser.Attr.grindMod [{\"string\": \"ext\", \"kind\": \"keyword\"}]":
    [{"id":
      "Lean___Parser___Attr___grindMod-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.grindMod",
       "forms": [{"string": "ext", "kind": "keyword"}],
       "category": null},
      "address": "/The--grind--tactic/E___matching/"}],
    "Lean.Parser.Attr.grindMod [{\"string\": \"_\", \"kind\": \"keyword\"},\n {\"string\": \"=\", \"kind\": \"keyword\"},\n {\"string\": \"_\", \"kind\": \"keyword\"}]":
    [{"id":
      "Lean___Parser___Attr___grindMod-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.grindMod",
       "forms":
       [{"string": "_", "kind": "keyword"},
        {"string": "=", "kind": "keyword"},
        {"string": "_", "kind": "keyword"}],
       "category": null},
      "address": "/The--grind--tactic/E___matching/"}],
    "Lean.Parser.Attr.grindMod [{\"string\": \"=>\", \"kind\": \"keyword\"}]":
    [{"id":
      "Lean___Parser___Attr___grindMod-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.grindMod",
       "forms": [{"string": "=>", "kind": "keyword"}],
       "category": null},
      "address": "/The--grind--tactic/E___matching/"}],
    "Lean.Parser.Attr.grindMod [{\"string\": \"=\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Attr___grindMod-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.grindMod",
       "forms": [{"string": "=", "kind": "keyword"}],
       "category": null},
      "address": "/The--grind--tactic/E___matching/"}],
    "Lean.Parser.Attr.grindMod [{\"string\": \"=\", \"kind\": \"keyword\"}, {\"string\": \"_\", \"kind\": \"keyword\"}]":
    [{"id":
      "Lean___Parser___Attr___grindMod-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.grindMod",
       "forms":
       [{"string": "=", "kind": "keyword"},
        {"string": "_", "kind": "keyword"}],
       "category": null},
      "address": "/The--grind--tactic/E___matching/"}],
    "Lean.Parser.Attr.grindMod [{\"string\": \"<=\", \"kind\": \"keyword\"}]":
    [{"id":
      "Lean___Parser___Attr___grindMod-next-next-next-next-next-next-next-next-next-next-next-next-next",
      "data":
      {"kind": "Lean.Parser.Attr.grindMod",
       "forms": [{"string": "<=", "kind": "keyword"}],
       "category": null},
      "address": "/The--grind--tactic/E___matching/"}],
    "Lean.Parser.Attr.grind? [{\"string\": \"grind?\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Attr___grind___",
      "data":
      {"kind": "Lean.Parser.Attr.grind?",
       "forms":
       [{"string": "grind?", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/The--grind--tactic/E___matching/"}],
    "Lean.Parser.Attr.grind [{\"string\": \"grind\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Attr___grind-next",
      "data":
      {"kind": "Lean.Parser.Attr.grind",
       "forms":
       [{"string": "grind", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/The--grind--tactic/E___matching/"}],
    "Lean.Parser.Attr.grind [{\"string\": \"grind\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"cases\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Parser___Attr___grind",
      "data":
      {"kind": "Lean.Parser.Attr.grind",
       "forms":
       [{"string": "grind", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "cases", "kind": "keyword"}],
       "category": null},
      "address": "/The--grind--tactic/Case-Analysis/"}],
    "Lean.Parser.Attr.extern [{\"string\": \"extern\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Attr___extern",
      "data":
      {"kind": "Lean.Parser.Attr.extern",
       "forms":
       [{"string": "extern", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Run-Time-Code/Foreign-Function-Interface/"}],
    "Lean.Parser.Attr.export [{\"string\": \"export\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Attr___export",
      "data":
      {"kind": "Lean.Parser.Attr.export",
       "forms":
       [{"string": "export", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Run-Time-Code/Foreign-Function-Interface/"}],
    "Lean.Parser.Attr.default_instance [{\"string\": \"default_instance\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lean___Parser___Attr___default_instance",
      "data":
      {"kind": "Lean.Parser.Attr.default_instance",
       "forms":
       [{"string": "default_instance", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Type-Classes/Instance-Declarations/"}],
    "Lean.Attr.coe [{\"string\": \"coe\", \"kind\": \"keyword\"}]":
    [{"id": "Lean___Attr___coe",
      "data":
      {"kind": "Lean.Attr.coe",
       "forms": [{"string": "coe", "kind": "keyword"}],
       "category": null},
      "address": "/Coercions/Coercing-Between-Types/"}],
    "Lake.DSL.targetCommand [{\"string\": \"target\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___targetCommand",
      "data":
      {"kind": "Lake.DSL.targetCommand",
       "forms":
       [{"string": "target", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.scriptDecl [{\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"@[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"script\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___scriptDecl",
      "data":
      {"kind": "Lake.DSL.scriptDecl",
       "forms":
       [{"string": "(", "kind": "meta"},
        {"string": "@[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "script", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.runIO [{\"string\": \"run_io\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___runIO",
      "data":
      {"kind": "Lake.DSL.runIO",
       "forms":
       [{"string": "run_io", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.requireDecl [{\"string\": \"require\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"@\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"git\", \"kind\": \"keyword\"},\n {\"string\": \"?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"with\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___requireDecl",
      "data":
      {"kind": "Lake.DSL.requireDecl",
       "forms":
       [{"string": "require", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "@", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "git", "kind": "keyword"},
        {"string": "?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "with", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.postUpdateDecl [{\"string\": \"post_update\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___postUpdateDecl",
      "data":
      {"kind": "Lake.DSL.postUpdateDecl",
       "forms":
       [{"string": "post_update", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.packageFacetDecl [{\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"@[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"package_facet\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___packageFacetDecl",
      "data":
      {"kind": "Lake.DSL.packageFacetDecl",
       "forms":
       [{"string": "(", "kind": "meta"},
        {"string": "@[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "package_facet", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.packageCommand [{\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"@[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"package\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"{\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \";*\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"}\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \";*\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___packageCommand-next-next",
      "data":
      {"kind": "Lake.DSL.packageCommand",
       "forms":
       [{"string": "(", "kind": "meta"},
        {"string": "@[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "package", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "{", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ";*", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "}", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ";*", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.packageCommand [{\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"@[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"package\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___packageCommand-next",
      "data":
      {"kind": "Lake.DSL.packageCommand",
       "forms":
       [{"string": "(", "kind": "meta"},
        {"string": "@[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "package", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.packageCommand [{\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"@[\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"]\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"package\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___packageCommand",
      "data":
      {"kind": "Lake.DSL.packageCommand",
       "forms":
       [{"string": "(", "kind": "meta"},
        {"string": "@[", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "]", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "package", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.moduleFacetDecl [{\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"@[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"module_facet\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___moduleFacetDecl",
      "data":
      {"kind": "Lake.DSL.moduleFacetDecl",
       "forms":
       [{"string": "(", "kind": "meta"},
        {"string": "@[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "module_facet", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.metaIf [{\"string\": \"meta\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"if\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"then\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"else\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___metaIf",
      "data":
      {"kind": "Lake.DSL.metaIf",
       "forms":
       [{"string": "meta", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "if", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "then", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "else", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.libraryFacetDecl [{\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"@[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"library_facet\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___libraryFacetDecl",
      "data":
      {"kind": "Lake.DSL.libraryFacetDecl",
       "forms":
       [{"string": "(", "kind": "meta"},
        {"string": "@[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "library_facet", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.leanLibCommand [{\"string\": \"lean_lib\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___leanLibCommand",
      "data":
      {"kind": "Lake.DSL.leanLibCommand",
       "forms":
       [{"string": "lean_lib", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.leanLibCommand [{\"string\": \"lean_lib\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"{\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \";*\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"}\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \";*\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___leanLibCommand-next-next",
      "data":
      {"kind": "Lake.DSL.leanLibCommand",
       "forms":
       [{"string": "lean_lib", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "{", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ";*", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "}", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ";*", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.leanLibCommand [{\"string\": \"lean_lib\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___leanLibCommand-next",
      "data":
      {"kind": "Lake.DSL.leanLibCommand",
       "forms":
       [{"string": "lean_lib", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.leanExeCommand [{\"string\": \"lean_exe\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___leanExeCommand",
      "data":
      {"kind": "Lake.DSL.leanExeCommand",
       "forms":
       [{"string": "lean_exe", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.leanExeCommand [{\"string\": \"lean_exe\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"{\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \";*\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"}\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \";*\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___leanExeCommand-next-next",
      "data":
      {"kind": "Lake.DSL.leanExeCommand",
       "forms":
       [{"string": "lean_exe", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "{", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ";*", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "}", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ";*", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.leanExeCommand [{\"string\": \"lean_exe\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___leanExeCommand-next",
      "data":
      {"kind": "Lake.DSL.leanExeCommand",
       "forms":
       [{"string": "lean_exe", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.getConfig [{\"string\": \"get_config?\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___getConfig",
      "data":
      {"kind": "Lake.DSL.getConfig",
       "forms":
       [{"string": "get_config?", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.fromClause [{\"string\": \"from\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___fromClause",
      "data":
      {"kind": "Lake.DSL.fromClause",
       "forms":
       [{"string": "from", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.fromClause [{\"string\": \"from\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"git\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"@\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"/\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___fromClause-next",
      "data":
      {"kind": "Lake.DSL.fromClause",
       "forms":
       [{"string": "from", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "git", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "@", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "/", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.externLibCommand [{\"string\": \"extern_lib\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"(\", \"kind\": \"meta\"},\n {\"string\": \"where\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \")?\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___externLibCommand",
      "data":
      {"kind": "Lake.DSL.externLibCommand",
       "forms":
       [{"string": "extern_lib", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "(", "kind": "meta"},
        {"string": "where", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": ")?", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.dirConst [{\"string\": \"__dir__\", \"kind\": \"keyword\"}]":
    [{"id": "Lake___DSL___dirConst",
      "data":
      {"kind": "Lake.DSL.dirConst",
       "forms": [{"string": "__dir__", "kind": "keyword"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.declField [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":=\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___declField-next",
      "data":
      {"kind": "Lake.DSL.declField",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":=", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.cmdDo [{\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___cmdDo",
      "data":
      {"kind": "Lake.DSL.cmdDo",
       "forms": [{"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Lake.DSL.cmdDo [{\"string\": \"do\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Lake___DSL___cmdDo-next",
      "data":
      {"kind": "Lake.DSL.cmdDo",
       "forms":
       [{"string": "do", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Build-Tools-and-Distribution/Lake/"}],
    "Int.«term-[_+1]» [{\"string\": \"-[\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"+1]\", \"kind\": \"keyword\"}]":
    [{"id": "Int____FLQQ_term-_LSQ_____1_RSQ__FLQQ_",
      "data":
      {"kind": "Int.«term-[_+1]»",
       "forms":
       [{"string": "-[", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "+1]", "kind": "keyword"}],
       "category": null},
      "address": "/Basic-Types/Integers/"}],
    "Bool.«term_^^_» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"^^\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "Bool____FLQQ_term_________FLQQ_",
      "data":
      {"kind": "Bool.«term_^^_»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": "^^", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Booleans/"}],
    "BitVec.«term__#__» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"#\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "BitVec____FLQQ_term________FLQQ_",
      "data":
      {"kind": "BitVec.«term__#__»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": "#", "kind": "keyword"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Bitvectors/"}],
    "BitVec.«term__#'__» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"#'\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"}]":
    [{"id": "BitVec____FLQQ_term___________FLQQ_",
      "data":
      {"kind": "BitVec.«term__#'__»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": "#'", "kind": "keyword"},
        {"string": "…", "kind": "meta"}],
       "category": null},
      "address": "/Basic-Types/Bitvectors/"}],
    "Array.«term__[_:_]» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"]\", \"kind\": \"keyword\"}]":
    [{"id": "Array____FLQQ_term___LSQ_______RSQ__FLQQ_",
      "data":
      {"kind": "Array.«term__[_:_]»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": "[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": " ", "kind": "ws"},
        {"string": "…", "kind": "meta"},
        {"string": "]", "kind": "keyword"}],
       "category": null},
      "address": "/Basic-Types/Arrays/"}],
    "Array.«term__[_:]» [{\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \"[\", \"kind\": \"keyword\"},\n {\"string\": \"…\", \"kind\": \"meta\"},\n {\"string\": \" \", \"kind\": \"ws\"},\n {\"string\": \":\", \"kind\": \"keyword\"},\n {\"string\": \"]\", \"kind\": \"keyword\"}]":
    [{"id": "Array____FLQQ_term___LSQ______RSQ__FLQQ_",
      "data":
      {"kind": "Array.«term__[_:]»",
       "forms":
       [{"string": "…", "kind": "meta"},
        {"string": "[", "kind": "keyword"},
        {"string": "…", "kind": "meta"},
        {"string": " ", "kind": "ws"},
        {"string": ":", "kind": "keyword"},
        {"string": "]", "kind": "keyword"}],
       "category": null},
      "address": "/Basic-Types/Arrays/"}]}}}}